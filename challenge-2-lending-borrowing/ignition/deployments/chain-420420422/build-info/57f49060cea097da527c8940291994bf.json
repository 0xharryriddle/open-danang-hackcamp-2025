{
  "id": "57f49060cea097da527c8940291994bf",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.26",
  "solcLongVersion": "0.8.26+commit.8a97fa7a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/LendingBorrowing.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract LendingBorrowing is Ownable {\r\n    struct Loan {\r\n        uint256 amount;\r\n        uint256 collateral;\r\n        bool isActive;\r\n    }\r\n\r\n    IERC20 public collateralToken;\r\n    IERC20 public lendingToken;\r\n    uint256 public collateralFactor;\r\n    mapping(address => uint256) public collateralBalances;\r\n    mapping(address => Loan) public loans;\r\n\r\n    event CollateralFactorUpdated(uint256 newFactor);\r\n    event CollateralDeposited(address indexed user, uint256 amount);\r\n    event CollateralWithdrawn(address indexed user, uint256 amount);\r\n    event LoanTaken(address indexed user, uint256 amount);\r\n    event LoanRepaid(address indexed user, uint256 amount);\r\n\r\n    constructor(\r\n        IERC20 _collateralToken,\r\n        IERC20 _lendingToken,\r\n        uint256 _collateralFactor\r\n    ) Ownable(msg.sender) {\r\n        collateralToken = _collateralToken;\r\n        lendingToken = _lendingToken;\r\n        collateralFactor = _collateralFactor;\r\n    }\r\n\r\n    function setCollateralFactor(uint256 _newFactor) external onlyOwner {\r\n        require(_newFactor > 0, \"Collateral factor must be greater than zero\");\r\n        require(_newFactor <= 100, \"Collateral factor must not exceed 100%\");\r\n        collateralFactor = _newFactor;\r\n        emit CollateralFactorUpdated(_newFactor);\r\n    }\r\n\r\n    function depositCollateral(uint256 _amount) external {\r\n        require(_amount > 0, \"Deposit amount must be greater than zero\");\r\n        collateralBalances[msg.sender] += _amount;\r\n        collateralToken.transferFrom(msg.sender, address(this), _amount);\r\n        emit CollateralDeposited(msg.sender, _amount);\r\n    }\r\n\r\n    function withdrawCollateral(uint256 _amount) external {\r\n        require(_amount > 0, \"Withdrawal amount must be greater than zero\");\r\n        Loan memory loan = loans[msg.sender];\r\n        require(!loan.isActive, \"Cannot withdraw locked collateral\");\r\n        uint256 currentCollateral = collateralBalances[msg.sender];\r\n        require(\r\n            currentCollateral >= _amount,\r\n            \"Insufficient collateral balance\"\r\n        );\r\n        collateralBalances[msg.sender] -= _amount;\r\n        collateralToken.transfer(msg.sender, _amount);\r\n        emit CollateralWithdrawn(msg.sender, _amount);\r\n    }\r\n\r\n    function takeLoan(uint256 _amount) external {\r\n        Loan memory loan = loans[msg.sender];\r\n        require(!loan.isActive, \"Existing loan must be repaid first\");\r\n        require(_amount > 0, \"Loan amount must be greater than zero\");\r\n        uint256 maxBorrowable = _maxBorrowableAmount(msg.sender);\r\n        require(maxBorrowable >= _amount, \"Insufficient collateral for loan\");\r\n\r\n        uint256 currentCollateral = collateralBalances[msg.sender];\r\n        collateralBalances[msg.sender] -= currentCollateral;\r\n\r\n        loans[msg.sender] = Loan({\r\n            amount: _amount,\r\n            collateral: currentCollateral,\r\n            isActive: true\r\n        });\r\n\r\n        lendingToken.transfer(msg.sender, _amount);\r\n        emit LoanTaken(msg.sender, _amount);\r\n    }\r\n\r\n    function repayLoan(uint256 _amount) external {\r\n        require(_amount > 0, \"Repayment amount must be greater than zero\");\r\n        Loan storage loan = loans[msg.sender];\r\n        require(loan.isActive, \"No active loan found for user\");\r\n        require(_amount <= loan.amount, \"Repayment amount exceeds loan amount\");\r\n\r\n        loan.amount -= _amount;\r\n\r\n        if (loan.amount == 0) {\r\n            loan.isActive = false;\r\n            collateralBalances[msg.sender] += loan.collateral;\r\n            loan.collateral = 0;\r\n        }\r\n\r\n        lendingToken.transferFrom(msg.sender, address(this), _amount);\r\n        emit LoanRepaid(msg.sender, _amount);\r\n    }\r\n\r\n    function _maxBorrowableAmount(\r\n        address _user\r\n    ) internal view returns (uint256) {\r\n        return (collateralBalances[_user] * collateralFactor) / 100;\r\n    }\r\n\r\n    function getLoanDetails(\r\n        address _user\r\n    )\r\n        external\r\n        view\r\n        returns (uint256 amount, uint256 collateral, bool isActive)\r\n    {\r\n        Loan memory loan = loans[_user];\r\n        return (loan.amount, loan.collateral, loan.isActive);\r\n    }\r\n}\r\n"
      },
      "contracts/MyToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MockERC20 is ERC20, Ownable(msg.sender) {\r\n    constructor(\r\n        uint256 initialSupply,\r\n        string memory name,\r\n        string memory symbol\r\n    ) ERC20(name, symbol) {\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n\r\n    function mint(address to, uint256 amount) external onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "parameters": "z"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/LendingBorrowing.sol\n",
        "message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
        "severity": "warning",
        "sourceLocation": {
          "file": "6",
          "start": 2305,
          "end": 2350
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/LendingBorrowing.sol\n",
        "message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
        "severity": "warning",
        "sourceLocation": {
          "file": "6",
          "start": 3103,
          "end": 3145
        },
        "type": "Warning"
      }
    ],
    "version": "0.8.26",
    "long_version": "0.8.26+commit.8a97fa7a.Emscripten.clang",
    "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 934,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                933
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              284
            ],
            "IERC20Errors": [
              189
            ],
            "IERC721Errors": [
              237
            ]
          },
          "id": 285,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:1",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 189,
              "linearizedBaseContracts": [
                189
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 159,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "654:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "670:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "687:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:1"
                  },
                  "src": "623:80:1"
                },
                {
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 164,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "891:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:1"
                  },
                  "src": "866:41:1"
                },
                {
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 169,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1104:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:1"
                  },
                  "src": "1077:45:1"
                },
                {
                  "documentation": {
                    "id": 170,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:1",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 178,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1511:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1528:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1547:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:1"
                  },
                  "src": "1478:85:1"
                },
                {
                  "documentation": {
                    "id": 179,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 183,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1775:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:1"
                  },
                  "src": "1748:45:1"
                },
                {
                  "documentation": {
                    "id": 184,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:1",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 188,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "2025:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:1"
                  },
                  "src": "1999:43:1"
                }
              ],
              "scope": 285,
              "src": "280:1764:1",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 190,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:1",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 237,
              "linearizedBaseContracts": [
                237
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:1",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 195,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "2469:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:1"
                  },
                  "src": "2444:40:1"
                },
                {
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:1",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 200,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "2656:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:1"
                  },
                  "src": "2627:46:1"
                },
                {
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:1",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 209,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3000:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3016:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3033:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:1"
                  },
                  "src": "2973:75:1"
                },
                {
                  "documentation": {
                    "id": 210,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 214,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 214,
                        "src": "3237:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:1"
                  },
                  "src": "3211:42:1"
                },
                {
                  "documentation": {
                    "id": 215,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 219,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "3451:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:1"
                  },
                  "src": "3423:46:1"
                },
                {
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 226,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3760:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3778:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:1"
                  },
                  "src": "3727:68:1"
                },
                {
                  "documentation": {
                    "id": 227,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 231,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "4008:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:1"
                  },
                  "src": "3980:46:1"
                },
                {
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 236,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "4262:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:1"
                  },
                  "src": "4234:46:1"
                }
              ],
              "scope": 285,
              "src": "2190:2092:1",
              "usedErrors": [
                195,
                200,
                209,
                214,
                219,
                226,
                231,
                236
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 238,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:1",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 284,
              "linearizedBaseContracts": [
                284
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 249,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4860:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4876:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4893:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4909:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:1"
                  },
                  "src": "4827:99:1"
                },
                {
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 254,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "5116:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:1"
                  },
                  "src": "5089:43:1"
                },
                {
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 259,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "5331:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:1"
                  },
                  "src": "5302:47:1"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 266,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5651:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5669:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:1"
                  },
                  "src": "5616:68:1"
                },
                {
                  "documentation": {
                    "id": 267,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 271,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "5898:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:1"
                  },
                  "src": "5869:47:1"
                },
                {
                  "documentation": {
                    "id": 272,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 276,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "6153:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:1"
                  },
                  "src": "6124:47:1"
                },
                {
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:1",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 283,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6494:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6513:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:1"
                  },
                  "src": "6462:73:1"
                }
              ],
              "scope": 285,
              "src": "4430:2107:1",
              "usedErrors": [
                249,
                254,
                259,
                266,
                271,
                276,
                283
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:1"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 800,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 286,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 288,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 878,
              "src": "131:36:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 287,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 290,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 904,
              "src": "168:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 289,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 903,
                    "src": "176:14:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 292,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 934,
              "src": "232:48:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 291,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "240:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 294,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 285,
              "src": "281:65:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 293,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 189,
                    "src": "289:12:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 296,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "1133:7:2"
                  },
                  "id": 297,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:2"
                },
                {
                  "baseName": {
                    "id": 298,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "1142:6:2"
                  },
                  "id": 299,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:2"
                },
                {
                  "baseName": {
                    "id": 300,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 903,
                    "src": "1150:14:2"
                  },
                  "id": 301,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:2"
                },
                {
                  "baseName": {
                    "id": 302,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 189,
                    "src": "1166:12:2"
                  },
                  "id": 303,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:2"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 295,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:2",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 799,
              "linearizedBaseContracts": [
                799,
                189,
                903,
                877,
                933
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1185:53:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 306,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:2",
                    "keyType": {
                      "id": 304,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 305,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1245:83:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 312,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:2",
                    "keyType": {
                      "id": 308,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 311,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:2",
                      "keyType": {
                        "id": 309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1335:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1370:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1396:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 335,
                    "nodeType": "Block",
                    "src": "1638:57:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 327,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "1648:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 328,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "1656:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:2"
                      },
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 331,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "1671:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 332,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "1681:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 320,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:2",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 336,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1594:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1615:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:2"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:2"
                  },
                  "scope": 799,
                  "src": "1582:113:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    890
                  ],
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "1820:29:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 342,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 317,
                          "src": "1837:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 341,
                        "id": 343,
                        "nodeType": "Return",
                        "src": "1830:12:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 345,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:2"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1805:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:2"
                  },
                  "scope": 799,
                  "src": "1760:89:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    896
                  ],
                  "body": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "2024:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "2041:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 350,
                        "id": 352,
                        "nodeType": "Return",
                        "src": "2034:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:2",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:2"
                  },
                  "returnParameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "2009:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:2"
                  },
                  "scope": 799,
                  "src": "1962:93:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    902
                  ],
                  "body": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "2744:26:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 359,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "2754:9:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 355,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:2",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 363,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:2"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "2737:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:2"
                  },
                  "scope": 799,
                  "src": "2688:82:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    826
                  ],
                  "body": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "2891:36:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 369,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "2908:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 368,
                        "id": 370,
                        "nodeType": "Return",
                        "src": "2901:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 364,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:2",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:2"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "2882:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:2"
                  },
                  "scope": 799,
                  "src": "2830:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    834
                  ],
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "3059:42:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 380,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "3076:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 382,
                          "indexExpression": {
                            "id": 381,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "3086:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 379,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "3069:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 373,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:2",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "3004:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:2"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "3050:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:2"
                  },
                  "scope": 799,
                  "src": "2985:116:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    844
                  ],
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "3371:103:2",
                    "statements": [
                      {
                        "assignments": [
                          396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 396,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 408,
                            "src": "3381:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 399,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 397,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "3397:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 401,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "3429:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 402,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "3436:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 403,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "3440:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 400,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "3419:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 394,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "3456:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 386,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:2",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3314:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3326:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:2"
                  },
                  "returnParameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3365:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:2"
                  },
                  "scope": 799,
                  "src": "3296:178:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    854
                  ],
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "3621:51:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 419,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "3638:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 421,
                            "indexExpression": {
                              "id": 420,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "3650:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 423,
                          "indexExpression": {
                            "id": 422,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "3657:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 418,
                        "id": 424,
                        "nodeType": "Return",
                        "src": "3631:34:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:2",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3551:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3566:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:2"
                  },
                  "returnParameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3612:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:2"
                  },
                  "scope": 799,
                  "src": "3532:140:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    864
                  ],
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "4058:107:2",
                    "statements": [
                      {
                        "assignments": [
                          437
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 437,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 449,
                            "src": "4068:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 440,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 438,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4084:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "4115:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 443,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "4122:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 444,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "4131:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 441,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 690,
                            "src": "4106:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 435,
                        "id": 448,
                        "nodeType": "Return",
                        "src": "4147:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:2",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3996:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4013:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:2"
                  },
                  "returnParameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4052:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:2"
                  },
                  "scope": 799,
                  "src": "3979:186:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    876
                  ],
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "4850:151:2",
                    "statements": [
                      {
                        "assignments": [
                          463
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 463,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "4860:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 466,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 464,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4878:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 468,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4916:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 469,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "4922:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 470,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4931:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 467,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "4900:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 474,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4957:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 475,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "4963:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 476,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4967:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 473,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4947:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 478,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 461,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "4983:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:2",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4779:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4793:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4805:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:2"
                  },
                  "returnParameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4844:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:2"
                  },
                  "scope": 799,
                  "src": "4757:244:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "5443:231:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 492,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5457:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 493,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 506,
                        "nodeType": "IfStatement",
                        "src": "5453:86:2",
                        "trueBody": {
                          "id": 505,
                          "nodeType": "Block",
                          "src": "5477:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 501,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 500,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 499,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 498,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "5498:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 504,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 507,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "5552:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 508,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 521,
                        "nodeType": "IfStatement",
                        "src": "5548:86:2",
                        "trueBody": {
                          "id": 520,
                          "nodeType": "Block",
                          "src": "5570:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 516,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 514,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 517,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 513,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "5591:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 519,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 523,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "5651:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 524,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "5657:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 525,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5661:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 522,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "5643:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5393:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5407:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5419:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:2"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:2"
                  },
                  "scope": 799,
                  "src": "5374:300:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 605,
                    "nodeType": "Block",
                    "src": "6064:1032:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 539,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "6078:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 540,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 576,
                          "nodeType": "Block",
                          "src": "6252:362:2",
                          "statements": [
                            {
                              "assignments": [
                                551
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 551,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 576,
                                  "src": "6266:19:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 550,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 555,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 552,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 307,
                                  "src": "6288:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 554,
                                "indexExpression": {
                                  "id": 553,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 532,
                                  "src": "6298:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 556,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 551,
                                  "src": "6321:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 557,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6335:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 566,
                              "nodeType": "IfStatement",
                              "src": "6317:115:2",
                              "trueBody": {
                                "id": 565,
                                "nodeType": "Block",
                                "src": "6342:90:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 560,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 532,
                                          "src": "6392:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 561,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 551,
                                          "src": "6398:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 562,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 536,
                                          "src": "6411:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 559,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6367:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 563,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 564,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 575,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 567,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "6552:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 569,
                                      "indexExpression": {
                                        "id": 568,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 532,
                                        "src": "6562:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 572,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 570,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 551,
                                        "src": "6570:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 571,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 536,
                                        "src": "6584:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 574,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 577,
                        "nodeType": "IfStatement",
                        "src": "6074:540:2",
                        "trueBody": {
                          "id": 549,
                          "nodeType": "Block",
                          "src": "6098:148:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 545,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 315,
                                  "src": "6214:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 546,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6230:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 548,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 578,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "6628:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 579,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 597,
                          "nodeType": "Block",
                          "src": "6843:206:2",
                          "statements": [
                            {
                              "id": 596,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 590,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "7002:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 592,
                                      "indexExpression": {
                                        "id": 591,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 534,
                                        "src": "7012:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 593,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "7019:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 595,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 598,
                        "nodeType": "IfStatement",
                        "src": "6624:425:2",
                        "trueBody": {
                          "id": 589,
                          "nodeType": "Block",
                          "src": "6646:191:2",
                          "statements": [
                            {
                              "id": 588,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 584,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "6791:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 585,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "6807:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 587,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 600,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "7073:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 601,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "7079:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 602,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "7083:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 599,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "7064:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 604,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 530,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:2",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6006:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6020:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6032:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:2"
                  },
                  "returnParameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:2"
                  },
                  "scope": 799,
                  "src": "5989:1107:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 638,
                    "nodeType": "Block",
                    "src": "7495:152:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 614,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "7509:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 628,
                        "nodeType": "IfStatement",
                        "src": "7505:91:2",
                        "trueBody": {
                          "id": 627,
                          "nodeType": "Block",
                          "src": "7532:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 623,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 621,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 620,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "7553:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 626,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 630,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "7625:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 635,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "7634:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 629,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "7605:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 637,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 607,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:2",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 639,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7454:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7471:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:2"
                  },
                  "returnParameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:2"
                  },
                  "scope": 799,
                  "src": "7439:208:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 671,
                    "nodeType": "Block",
                    "src": "8021:150:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 647,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "8035:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 648,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 661,
                        "nodeType": "IfStatement",
                        "src": "8031:89:2",
                        "trueBody": {
                          "id": 660,
                          "nodeType": "Block",
                          "src": "8058:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 654,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 653,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "8079:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 659,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "8137:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 664,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 668,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "8158:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 662,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "8129:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 640,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:2",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 672,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7980:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7997:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:2"
                  },
                  "returnParameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:2"
                  },
                  "scope": 799,
                  "src": "7965:206:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "8781:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 683,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "8800:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 684,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "8807:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 685,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "8816:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 682,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 750,
                            "src": "8791:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:2",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8725:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8740:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8757:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:2"
                  },
                  "returnParameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:2"
                  },
                  "scope": 799,
                  "src": "8707:128:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "9780:334:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 702,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "9794:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 703,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 716,
                        "nodeType": "IfStatement",
                        "src": "9790:89:2",
                        "trueBody": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "9815:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 709,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 708,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 183,
                                  "src": "9836:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 714,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 717,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "9892:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 718,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 731,
                        "nodeType": "IfStatement",
                        "src": "9888:90:2",
                        "trueBody": {
                          "id": 730,
                          "nodeType": "Block",
                          "src": "9915:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 726,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 724,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 723,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "9936:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 729,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 732,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 313,
                                "src": "9987:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 735,
                              "indexExpression": {
                                "id": 733,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "9999:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 736,
                            "indexExpression": {
                              "id": 734,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "10006:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 737,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "10017:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 739,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:2"
                      },
                      {
                        "condition": {
                          "id": 740,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "10036:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 748,
                        "nodeType": "IfStatement",
                        "src": "10032:76:2",
                        "trueBody": {
                          "id": 747,
                          "nodeType": "Block",
                          "src": "10047:61:2",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 742,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "10075:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 743,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "10082:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 744,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 697,
                                    "src": "10091:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 741,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "10066:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 746,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 691,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:2",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 750,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9700:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9715:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9732:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9747:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:2"
                  },
                  "returnParameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:2"
                  },
                  "scope": 799,
                  "src": "9682:432:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "10485:387:2",
                    "statements": [
                      {
                        "assignments": [
                          761
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 761,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 797,
                            "src": "10495:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 760,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 766,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 763,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "10532:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 764,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "10539:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 762,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "10522:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 767,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "10561:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 769,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:2",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 768,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "10580:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:2",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 796,
                        "nodeType": "IfStatement",
                        "src": "10557:309:2",
                        "trueBody": {
                          "id": 795,
                          "nodeType": "Block",
                          "src": "10599:267:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 774,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "10617:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 775,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 757,
                                  "src": "10636:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 784,
                              "nodeType": "IfStatement",
                              "src": "10613:130:2",
                              "trueBody": {
                                "id": 783,
                                "nodeType": "Block",
                                "src": "10643:100:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 778,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 755,
                                          "src": "10695:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 779,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10704:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 780,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10722:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 777,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 178,
                                        "src": "10668:26:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 782,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 794,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 786,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 753,
                                        "src": "10793:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 787,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 755,
                                        "src": "10800:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 788,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10809:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 789,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10828:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 785,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        690,
                                        750
                                      ],
                                      "referencedDeclaration": 750,
                                      "src": "10784:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 793,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:2"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 751,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:2",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10421:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10436:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10453:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:2"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:2"
                  },
                  "scope": 799,
                  "src": "10396:476:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 800,
              "src": "1106:9768:2",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "105:10770:2"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ]
          },
          "id": 878,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 801,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 802,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:3",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 877,
              "linearizedBaseContracts": [
                877
              ],
              "name": "IERC20",
              "nameLocation": "214:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 811,
                  "name": "Transfer",
                  "nameLocation": "396:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "405:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "427:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "447:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:3"
                  },
                  "src": "390:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 812,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 820,
                  "name": "Approval",
                  "nameLocation": "627:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 814,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "636:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 816,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "659:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 818,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "684:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:3"
                  },
                  "src": "621:78:3"
                },
                {
                  "documentation": {
                    "id": 821,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:3",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 826,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:3"
                  },
                  "returnParameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "821:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:3"
                  },
                  "scope": 877,
                  "src": "775:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:3",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 834,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "931:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:3"
                  },
                  "returnParameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "971:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:3"
                  },
                  "scope": 877,
                  "src": "912:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 835,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:3",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 844,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1222:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1234:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:3"
                  },
                  "returnParameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1267:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:3"
                  },
                  "scope": 877,
                  "src": "1204:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 845,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 854,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1567:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1582:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:3"
                  },
                  "returnParameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1622:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:3"
                  },
                  "scope": 877,
                  "src": "1548:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:3",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 864,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2326:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2343:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:3"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2376:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:3"
                  },
                  "scope": 877,
                  "src": "2309:73:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 865,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 876,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 867,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2712:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2726:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2738:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:3"
                  },
                  "returnParameters": {
                    "id": 875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2771:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:3"
                  },
                  "scope": 877,
                  "src": "2690:87:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 878,
              "src": "204:2575:3",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "106:2674:3"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 904,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 879,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 881,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 904,
              "sourceUnit": 878,
              "src": "151:37:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 880,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "159:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 883,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "306:6:4"
                  },
                  "id": 884,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 882,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:4",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 903,
              "linearizedBaseContracts": [
                903,
                877
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 885,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 890,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:4"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "417:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:4"
                  },
                  "scope": 903,
                  "src": "378:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 896,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 892,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:4"
                  },
                  "returnParameters": {
                    "id": 895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 896,
                        "src": "540:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:4"
                  },
                  "scope": 903,
                  "src": "499:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 897,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 902,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:4"
                  },
                  "returnParameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "674:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 899,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:4"
                  },
                  "scope": 903,
                  "src": "631:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 904,
              "src": "278:405:4",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "125:559:4"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              933
            ]
          },
          "id": 934,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 905,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 906,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 933,
              "linearizedBaseContracts": [
                933
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 911,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 910,
                        "id": 913,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 915,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 907,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 933,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 923,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 919,
                        "id": 922,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 924,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 933,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 928,
                        "id": 930,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 925,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 933,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 934,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        }
      },
      "contracts/LendingBorrowing.sol": {
        "id": 6,
        "ast": {
          "absolutePath": "contracts/LendingBorrowing.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "IERC20": [
              877
            ],
            "LendingBorrowing": [
              1361
            ],
            "Ownable": [
              147
            ]
          },
          "id": 1362,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 935,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 936,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1362,
              "sourceUnit": 878,
              "src": "59:56:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 937,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1362,
              "sourceUnit": 148,
              "src": "117:52:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 938,
                    "name": "Ownable",
                    "nameLocations": [
                      "202:7:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "202:7:6"
                  },
                  "id": 939,
                  "nodeType": "InheritanceSpecifier",
                  "src": "202:7:6"
                }
              ],
              "canonicalName": "LendingBorrowing",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1361,
              "linearizedBaseContracts": [
                1361,
                147,
                933
              ],
              "name": "LendingBorrowing",
              "nameLocation": "182:16:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "LendingBorrowing.Loan",
                  "id": 946,
                  "members": [
                    {
                      "constant": false,
                      "id": 941,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "248:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 946,
                      "src": "240:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 940,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "240:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 943,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "273:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 946,
                      "src": "265:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 942,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "265:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "299:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 946,
                      "src": "294:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 944,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "294:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Loan",
                  "nameLocation": "224:4:6",
                  "nodeType": "StructDefinition",
                  "scope": 1361,
                  "src": "217:98:6",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b2016bd4",
                  "id": 949,
                  "mutability": "mutable",
                  "name": "collateralToken",
                  "nameLocation": "337:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "323:29:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$877",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 948,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 947,
                      "name": "IERC20",
                      "nameLocations": [
                        "323:6:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 877,
                      "src": "323:6:6"
                    },
                    "referencedDeclaration": 877,
                    "src": "323:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$877",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "aaaca558",
                  "id": 952,
                  "mutability": "mutable",
                  "name": "lendingToken",
                  "nameLocation": "373:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "359:26:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$877",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 951,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 950,
                      "name": "IERC20",
                      "nameLocations": [
                        "359:6:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 877,
                      "src": "359:6:6"
                    },
                    "referencedDeclaration": 877,
                    "src": "359:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$877",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "df011c41",
                  "id": 954,
                  "mutability": "mutable",
                  "name": "collateralFactor",
                  "nameLocation": "407:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "392:31:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "29bc969d",
                  "id": 958,
                  "mutability": "mutable",
                  "name": "collateralBalances",
                  "nameLocation": "465:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "430:53:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 957,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 955,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "438:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "430:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 956,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "449:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "73b4086b",
                  "id": 963,
                  "mutability": "mutable",
                  "name": "loans",
                  "nameLocation": "522:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "490:37:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                    "typeString": "mapping(address => struct LendingBorrowing.Loan)"
                  },
                  "typeName": {
                    "id": 962,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 959,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "498:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "490:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                      "typeString": "mapping(address => struct LendingBorrowing.Loan)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 961,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 960,
                        "name": "Loan",
                        "nameLocations": [
                          "509:4:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 946,
                        "src": "509:4:6"
                      },
                      "referencedDeclaration": 946,
                      "src": "509:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                        "typeString": "struct LendingBorrowing.Loan"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "418ce44910b0288ea600897f5ddfb466bd41767ce3cc61fc8429a9c17ff8810c",
                  "id": 967,
                  "name": "CollateralFactorUpdated",
                  "nameLocation": "542:23:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 965,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newFactor",
                        "nameLocation": "574:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 967,
                        "src": "566:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 964,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "566:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "565:19:6"
                  },
                  "src": "536:49:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142",
                  "id": 973,
                  "name": "CollateralDeposited",
                  "nameLocation": "597:19:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 972,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 969,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "633:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "617:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "617:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 971,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "647:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "639:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 970,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "639:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "616:38:6"
                  },
                  "src": "591:64:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d",
                  "id": 979,
                  "name": "CollateralWithdrawn",
                  "nameLocation": "667:19:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 978,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 975,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "703:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "687:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 977,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "717:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "709:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 976,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "686:38:6"
                  },
                  "src": "661:64:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d5c776eab9418d89c040ffee59f2310d225f5ff682191bcee59b0413a7fd4835",
                  "id": 985,
                  "name": "LoanTaken",
                  "nameLocation": "737:9:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 984,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 981,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "763:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "747:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 980,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "747:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 983,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "777:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "769:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 982,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "746:38:6"
                  },
                  "src": "731:54:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c200a1f31dd659e356e0f112c82558e25f49f7b0f84438691cd96f5cb3558823",
                  "id": 991,
                  "name": "LoanRepaid",
                  "nameLocation": "797:10:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 987,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "824:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "808:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 986,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 989,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "838:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 991,
                        "src": "830:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 988,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "830:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "807:38:6"
                  },
                  "src": "791:55:6"
                },
                {
                  "body": {
                    "id": 1018,
                    "nodeType": "Block",
                    "src": "994:139:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1006,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 949,
                            "src": "1005:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1007,
                            "name": "_collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 994,
                            "src": "1023:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1005:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$877",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1009,
                        "nodeType": "ExpressionStatement",
                        "src": "1005:34:6"
                      },
                      {
                        "expression": {
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1010,
                            "name": "lendingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "1050:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1011,
                            "name": "_lendingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "1065:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1050:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$877",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1013,
                        "nodeType": "ExpressionStatement",
                        "src": "1050:28:6"
                      },
                      {
                        "expression": {
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1014,
                            "name": "collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "1089:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1015,
                            "name": "_collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 999,
                            "src": "1108:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1089:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1017,
                        "nodeType": "ExpressionStatement",
                        "src": "1089:36:6"
                      }
                    ]
                  },
                  "id": 1019,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1002,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "982:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "986:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "982:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1004,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1001,
                        "name": "Ownable",
                        "nameLocations": [
                          "974:7:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "974:7:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "974:19:6"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1000,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 994,
                        "mutability": "mutable",
                        "name": "_collateralToken",
                        "nameLocation": "883:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "876:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 993,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 992,
                            "name": "IERC20",
                            "nameLocations": [
                              "876:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 877,
                            "src": "876:6:6"
                          },
                          "referencedDeclaration": 877,
                          "src": "876:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$877",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 997,
                        "mutability": "mutable",
                        "name": "_lendingToken",
                        "nameLocation": "917:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "910:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 996,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 995,
                            "name": "IERC20",
                            "nameLocations": [
                              "910:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 877,
                            "src": "910:6:6"
                          },
                          "referencedDeclaration": 877,
                          "src": "910:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$877",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 999,
                        "mutability": "mutable",
                        "name": "_collateralFactor",
                        "nameLocation": "949:17:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "941:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "941:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "865:108:6"
                  },
                  "returnParameters": {
                    "id": 1005,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "994:0:6"
                  },
                  "scope": 1361,
                  "src": "854:279:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1048,
                    "nodeType": "Block",
                    "src": "1209:259:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1027,
                                "name": "_newFactor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1021,
                                "src": "1228:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1241:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1228:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6c6c61746572616c20666163746f72206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1244:45:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cafdb4cf8dfb867e005d9dc2009003d1a4f62a643f5c319f93e5c4f3d0e4fc2a",
                                "typeString": "literal_string \"Collateral factor must be greater than zero\""
                              },
                              "value": "Collateral factor must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cafdb4cf8dfb867e005d9dc2009003d1a4f62a643f5c319f93e5c4f3d0e4fc2a",
                                "typeString": "literal_string \"Collateral factor must be greater than zero\""
                              }
                            ],
                            "id": 1026,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1220:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1220:70:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1032,
                        "nodeType": "ExpressionStatement",
                        "src": "1220:70:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1034,
                                "name": "_newFactor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1021,
                                "src": "1309:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 1035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1323:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "1309:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6c6c61746572616c20666163746f72206d757374206e6f74206578636565642031303025",
                              "id": 1037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1328:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_85085ead838e790d10c74745aba7920d8ba9576349b7a14754a2f183e56142f6",
                                "typeString": "literal_string \"Collateral factor must not exceed 100%\""
                              },
                              "value": "Collateral factor must not exceed 100%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_85085ead838e790d10c74745aba7920d8ba9576349b7a14754a2f183e56142f6",
                                "typeString": "literal_string \"Collateral factor must not exceed 100%\""
                              }
                            ],
                            "id": 1033,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1301:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1301:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1039,
                        "nodeType": "ExpressionStatement",
                        "src": "1301:68:6"
                      },
                      {
                        "expression": {
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1040,
                            "name": "collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "1380:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1041,
                            "name": "_newFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "1399:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1380:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1043,
                        "nodeType": "ExpressionStatement",
                        "src": "1380:29:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1045,
                              "name": "_newFactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "1449:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1044,
                            "name": "CollateralFactorUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "1425:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1425:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1047,
                        "nodeType": "EmitStatement",
                        "src": "1420:40:6"
                      }
                    ]
                  },
                  "functionSelector": "b5c22157",
                  "id": 1049,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1024,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1023,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1199:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1199:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1199:9:6"
                    }
                  ],
                  "name": "setCollateralFactor",
                  "nameLocation": "1150:19:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1022,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "_newFactor",
                        "nameLocation": "1178:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1049,
                        "src": "1170:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1170:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1169:20:6"
                  },
                  "returnParameters": {
                    "id": 1025,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1209:0:6"
                  },
                  "scope": 1361,
                  "src": "1141:327:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1086,
                    "nodeType": "Block",
                    "src": "1529:266:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1055,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1051,
                                "src": "1548:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1056,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1558:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1548:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1561:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
                                "typeString": "literal_string \"Deposit amount must be greater than zero\""
                              },
                              "value": "Deposit amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
                                "typeString": "literal_string \"Deposit amount must be greater than zero\""
                              }
                            ],
                            "id": 1054,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1540:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1540:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1060,
                        "nodeType": "ExpressionStatement",
                        "src": "1540:64:6"
                      },
                      {
                        "expression": {
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1061,
                              "name": "collateralBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "1615:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1064,
                            "indexExpression": {
                              "expression": {
                                "id": 1062,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1634:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1638:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1634:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1615:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1065,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1051,
                            "src": "1649:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1615:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1067,
                        "nodeType": "ExpressionStatement",
                        "src": "1615:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1071,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1696:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1700:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1696:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1075,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1716:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1361",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1361",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                ],
                                "id": 1074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1708:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1073,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1708:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1708:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1077,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1051,
                              "src": "1723:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1068,
                              "name": "collateralToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 949,
                              "src": "1667:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1683:12:6",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 876,
                            "src": "1667:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1667:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1079,
                        "nodeType": "ExpressionStatement",
                        "src": "1667:64:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1081,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1767:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1771:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1767:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1083,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1051,
                              "src": "1779:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1080,
                            "name": "CollateralDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "1747:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1747:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1085,
                        "nodeType": "EmitStatement",
                        "src": "1742:45:6"
                      }
                    ]
                  },
                  "functionSelector": "bad4a01f",
                  "id": 1087,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositCollateral",
                  "nameLocation": "1485:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1052,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1051,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1511:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "1503:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1503:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1502:17:6"
                  },
                  "returnParameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1529:0:6"
                  },
                  "scope": 1361,
                  "src": "1476:319:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1149,
                    "nodeType": "Block",
                    "src": "1857:557:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1093,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1089,
                                "src": "1876:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1886:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1876:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5769746864726177616c20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1889:45:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
                                "typeString": "literal_string \"Withdrawal amount must be greater than zero\""
                              },
                              "value": "Withdrawal amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
                                "typeString": "literal_string \"Withdrawal amount must be greater than zero\""
                              }
                            ],
                            "id": 1092,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1868:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1868:67:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1098,
                        "nodeType": "ExpressionStatement",
                        "src": "1868:67:6"
                      },
                      {
                        "assignments": [
                          1101
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1101,
                            "mutability": "mutable",
                            "name": "loan",
                            "nameLocation": "1958:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1149,
                            "src": "1946:16:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                              "typeString": "struct LendingBorrowing.Loan"
                            },
                            "typeName": {
                              "id": 1100,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1099,
                                "name": "Loan",
                                "nameLocations": [
                                  "1946:4:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 946,
                                "src": "1946:4:6"
                              },
                              "referencedDeclaration": 946,
                              "src": "1946:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1106,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1102,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "1965:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                              "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                            }
                          },
                          "id": 1105,
                          "indexExpression": {
                            "expression": {
                              "id": 1103,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1971:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1975:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1971:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1965:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$946_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1946:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2001:14:6",
                              "subExpression": {
                                "expression": {
                                  "id": 1108,
                                  "name": "loan",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1101,
                                  "src": "2002:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                                    "typeString": "struct LendingBorrowing.Loan memory"
                                  }
                                },
                                "id": 1109,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2007:8:6",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 945,
                                "src": "2002:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74207769746864726177206c6f636b656420636f6c6c61746572616c",
                              "id": 1111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2017:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_806ba8ee32c103c2a737750386240fe468a7ec44d5136f2c1c91c5d6ce999f73",
                                "typeString": "literal_string \"Cannot withdraw locked collateral\""
                              },
                              "value": "Cannot withdraw locked collateral"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_806ba8ee32c103c2a737750386240fe468a7ec44d5136f2c1c91c5d6ce999f73",
                                "typeString": "literal_string \"Cannot withdraw locked collateral\""
                              }
                            ],
                            "id": 1107,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1993:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1993:60:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1113,
                        "nodeType": "ExpressionStatement",
                        "src": "1993:60:6"
                      },
                      {
                        "assignments": [
                          1115
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1115,
                            "mutability": "mutable",
                            "name": "currentCollateral",
                            "nameLocation": "2072:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1149,
                            "src": "2064:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1114,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2064:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1120,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1116,
                            "name": "collateralBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "2092:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1119,
                          "indexExpression": {
                            "expression": {
                              "id": 1117,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2111:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2115:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2111:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2092:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2064:58:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1122,
                                "name": "currentCollateral",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1115,
                                "src": "2155:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1123,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1089,
                                "src": "2176:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2155:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420636f6c6c61746572616c2062616c616e6365",
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2198:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de",
                                "typeString": "literal_string \"Insufficient collateral balance\""
                              },
                              "value": "Insufficient collateral balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de",
                                "typeString": "literal_string \"Insufficient collateral balance\""
                              }
                            ],
                            "id": 1121,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2133:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2133:109:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1127,
                        "nodeType": "ExpressionStatement",
                        "src": "2133:109:6"
                      },
                      {
                        "expression": {
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1128,
                              "name": "collateralBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "2253:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1131,
                            "indexExpression": {
                              "expression": {
                                "id": 1129,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2272:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2276:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2272:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2253:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1132,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1089,
                            "src": "2287:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2253:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1134,
                        "nodeType": "ExpressionStatement",
                        "src": "2253:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1138,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2330:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2334:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2330:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1140,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1089,
                              "src": "2342:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1135,
                              "name": "collateralToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 949,
                              "src": "2305:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2321:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 844,
                            "src": "2305:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2305:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1142,
                        "nodeType": "ExpressionStatement",
                        "src": "2305:45:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1144,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2386:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2390:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2386:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1146,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1089,
                              "src": "2398:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1143,
                            "name": "CollateralWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "2366:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2366:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1148,
                        "nodeType": "EmitStatement",
                        "src": "2361:45:6"
                      }
                    ]
                  },
                  "functionSelector": "6112fe2e",
                  "id": 1150,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawCollateral",
                  "nameLocation": "1812:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1090,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1839:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "1831:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1831:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1830:17:6"
                  },
                  "returnParameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1857:0:6"
                  },
                  "scope": 1361,
                  "src": "1803:611:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1230,
                    "nodeType": "Block",
                    "src": "2466:733:6",
                    "statements": [
                      {
                        "assignments": [
                          1157
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1157,
                            "mutability": "mutable",
                            "name": "loan",
                            "nameLocation": "2489:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1230,
                            "src": "2477:16:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                              "typeString": "struct LendingBorrowing.Loan"
                            },
                            "typeName": {
                              "id": 1156,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1155,
                                "name": "Loan",
                                "nameLocations": [
                                  "2477:4:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 946,
                                "src": "2477:4:6"
                              },
                              "referencedDeclaration": 946,
                              "src": "2477:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1162,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1158,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "2496:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                              "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                            }
                          },
                          "id": 1161,
                          "indexExpression": {
                            "expression": {
                              "id": 1159,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2502:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2506:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2502:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2496:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$946_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2477:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2532:14:6",
                              "subExpression": {
                                "expression": {
                                  "id": 1164,
                                  "name": "loan",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1157,
                                  "src": "2533:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                                    "typeString": "struct LendingBorrowing.Loan memory"
                                  }
                                },
                                "id": 1165,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2538:8:6",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 945,
                                "src": "2533:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4578697374696e67206c6f616e206d75737420626520726570616964206669727374",
                              "id": 1167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2548:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71",
                                "typeString": "literal_string \"Existing loan must be repaid first\""
                              },
                              "value": "Existing loan must be repaid first"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71",
                                "typeString": "literal_string \"Existing loan must be repaid first\""
                              }
                            ],
                            "id": 1163,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2524:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2524:61:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1169,
                        "nodeType": "ExpressionStatement",
                        "src": "2524:61:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1171,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1152,
                                "src": "2604:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2614:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2604:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6f616e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2617:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59abc29e8bd05916e27efdb2853def2aa4ce90ba19b40221c1434bb2a00618f9",
                                "typeString": "literal_string \"Loan amount must be greater than zero\""
                              },
                              "value": "Loan amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59abc29e8bd05916e27efdb2853def2aa4ce90ba19b40221c1434bb2a00618f9",
                                "typeString": "literal_string \"Loan amount must be greater than zero\""
                              }
                            ],
                            "id": 1170,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2596:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2596:61:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1176,
                        "nodeType": "ExpressionStatement",
                        "src": "2596:61:6"
                      },
                      {
                        "assignments": [
                          1178
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1178,
                            "mutability": "mutable",
                            "name": "maxBorrowable",
                            "nameLocation": "2676:13:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1230,
                            "src": "2668:21:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1177,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2668:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1183,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1180,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2713:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2717:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2713:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1179,
                            "name": "_maxBorrowableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1333,
                            "src": "2692:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2692:32:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2668:56:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1185,
                                "name": "maxBorrowable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1178,
                                "src": "2743:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1186,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1152,
                                "src": "2760:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2743:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420636f6c6c61746572616c20666f72206c6f616e",
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2769:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_036f2ab32c5bac8b082ad7c832225e80f384e0033612b8b5aa60c772a8d2db35",
                                "typeString": "literal_string \"Insufficient collateral for loan\""
                              },
                              "value": "Insufficient collateral for loan"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_036f2ab32c5bac8b082ad7c832225e80f384e0033612b8b5aa60c772a8d2db35",
                                "typeString": "literal_string \"Insufficient collateral for loan\""
                              }
                            ],
                            "id": 1184,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2735:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2735:69:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1190,
                        "nodeType": "ExpressionStatement",
                        "src": "2735:69:6"
                      },
                      {
                        "assignments": [
                          1192
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1192,
                            "mutability": "mutable",
                            "name": "currentCollateral",
                            "nameLocation": "2825:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1230,
                            "src": "2817:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1191,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2817:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1197,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1193,
                            "name": "collateralBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "2845:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1196,
                          "indexExpression": {
                            "expression": {
                              "id": 1194,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2864:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2868:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2864:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2845:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2817:58:6"
                      },
                      {
                        "expression": {
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1198,
                              "name": "collateralBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "2886:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1201,
                            "indexExpression": {
                              "expression": {
                                "id": 1199,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2905:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2909:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2905:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2886:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1202,
                            "name": "currentCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "2920:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2886:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1204,
                        "nodeType": "ExpressionStatement",
                        "src": "2886:51:6"
                      },
                      {
                        "expression": {
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1205,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 963,
                              "src": "2950:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                                "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                              }
                            },
                            "id": 1208,
                            "indexExpression": {
                              "expression": {
                                "id": 1206,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2956:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2960:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2956:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2950:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_storage",
                              "typeString": "struct LendingBorrowing.Loan storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1210,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1152,
                                "src": "2998:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1211,
                                "name": "currentCollateral",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "3032:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 1212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3074:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 1209,
                              "name": "Loan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "2970:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Loan_$946_storage_ptr_$",
                                "typeString": "type(struct LendingBorrowing.Loan storage pointer)"
                              }
                            },
                            "id": 1213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "2990:6:6",
                              "3020:10:6",
                              "3064:8:6"
                            ],
                            "names": [
                              "amount",
                              "collateral",
                              "isActive"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2970:120:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                              "typeString": "struct LendingBorrowing.Loan memory"
                            }
                          },
                          "src": "2950:140:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$946_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "id": 1215,
                        "nodeType": "ExpressionStatement",
                        "src": "2950:140:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1219,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3125:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3129:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3125:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1221,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1152,
                              "src": "3137:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1216,
                              "name": "lendingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 952,
                              "src": "3103:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3116:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 844,
                            "src": "3103:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3103:42:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1223,
                        "nodeType": "ExpressionStatement",
                        "src": "3103:42:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1225,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3171:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3175:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3171:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1227,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1152,
                              "src": "3183:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1224,
                            "name": "LoanTaken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "3161:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3161:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1229,
                        "nodeType": "EmitStatement",
                        "src": "3156:35:6"
                      }
                    ]
                  },
                  "functionSelector": "8c803fc2",
                  "id": 1231,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "takeLoan",
                  "nameLocation": "2431:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1152,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2448:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1231,
                        "src": "2440:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1151,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2439:17:6"
                  },
                  "returnParameters": {
                    "id": 1154,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2466:0:6"
                  },
                  "scope": 1361,
                  "src": "2422:777:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1315,
                    "nodeType": "Block",
                    "src": "3252:617:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1237,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1233,
                                "src": "3271:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3281:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3271:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52657061796d656e7420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3284:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b5d0eb9dc2997a8e6cee74ca14c59716a5f391a4bf37a8f39c160c87d6816bb4",
                                "typeString": "literal_string \"Repayment amount must be greater than zero\""
                              },
                              "value": "Repayment amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b5d0eb9dc2997a8e6cee74ca14c59716a5f391a4bf37a8f39c160c87d6816bb4",
                                "typeString": "literal_string \"Repayment amount must be greater than zero\""
                              }
                            ],
                            "id": 1236,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3263:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3263:66:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1242,
                        "nodeType": "ExpressionStatement",
                        "src": "3263:66:6"
                      },
                      {
                        "assignments": [
                          1245
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1245,
                            "mutability": "mutable",
                            "name": "loan",
                            "nameLocation": "3353:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1315,
                            "src": "3340:17:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                              "typeString": "struct LendingBorrowing.Loan"
                            },
                            "typeName": {
                              "id": 1244,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1243,
                                "name": "Loan",
                                "nameLocations": [
                                  "3340:4:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 946,
                                "src": "3340:4:6"
                              },
                              "referencedDeclaration": 946,
                              "src": "3340:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1250,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1246,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "3360:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                              "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                            }
                          },
                          "id": 1249,
                          "indexExpression": {
                            "expression": {
                              "id": 1247,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3366:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3370:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3366:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3360:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$946_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3340:37:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1252,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1245,
                                "src": "3396:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                  "typeString": "struct LendingBorrowing.Loan storage pointer"
                                }
                              },
                              "id": 1253,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3401:8:6",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 945,
                              "src": "3396:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20616374697665206c6f616e20666f756e6420666f722075736572",
                              "id": 1254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3411:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a522b7d06720ada70b1defb57880b761537e7ba4eed53426b527e7c0088ebb49",
                                "typeString": "literal_string \"No active loan found for user\""
                              },
                              "value": "No active loan found for user"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a522b7d06720ada70b1defb57880b761537e7ba4eed53426b527e7c0088ebb49",
                                "typeString": "literal_string \"No active loan found for user\""
                              }
                            ],
                            "id": 1251,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3388:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3388:55:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1256,
                        "nodeType": "ExpressionStatement",
                        "src": "3388:55:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1258,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1233,
                                "src": "3462:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1259,
                                  "name": "loan",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "3473:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                    "typeString": "struct LendingBorrowing.Loan storage pointer"
                                  }
                                },
                                "id": 1260,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3478:6:6",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 941,
                                "src": "3473:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3462:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52657061796d656e7420616d6f756e742065786365656473206c6f616e20616d6f756e74",
                              "id": 1262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3486:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a12ddb4c4e8fed358f857e52c814d896dad15b25ebcff93a85a0ff54eca5b9ba",
                                "typeString": "literal_string \"Repayment amount exceeds loan amount\""
                              },
                              "value": "Repayment amount exceeds loan amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a12ddb4c4e8fed358f857e52c814d896dad15b25ebcff93a85a0ff54eca5b9ba",
                                "typeString": "literal_string \"Repayment amount exceeds loan amount\""
                              }
                            ],
                            "id": 1257,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3454:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3454:71:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1264,
                        "nodeType": "ExpressionStatement",
                        "src": "3454:71:6"
                      },
                      {
                        "expression": {
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1265,
                              "name": "loan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1245,
                              "src": "3538:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan storage pointer"
                              }
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3543:6:6",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 941,
                            "src": "3538:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1268,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1233,
                            "src": "3553:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3538:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1270,
                        "nodeType": "ExpressionStatement",
                        "src": "3538:22:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1271,
                              "name": "loan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1245,
                              "src": "3577:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan storage pointer"
                              }
                            },
                            "id": 1272,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3582:6:6",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 941,
                            "src": "3577:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3592:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3577:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1296,
                        "nodeType": "IfStatement",
                        "src": "3573:168:6",
                        "trueBody": {
                          "id": 1295,
                          "nodeType": "Block",
                          "src": "3595:146:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1275,
                                    "name": "loan",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1245,
                                    "src": "3610:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                      "typeString": "struct LendingBorrowing.Loan storage pointer"
                                    }
                                  },
                                  "id": 1277,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "3615:8:6",
                                  "memberName": "isActive",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 945,
                                  "src": "3610:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3626:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "3610:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1280,
                              "nodeType": "ExpressionStatement",
                              "src": "3610:21:6"
                            },
                            {
                              "expression": {
                                "id": 1287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1281,
                                    "name": "collateralBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 958,
                                    "src": "3646:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1284,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1282,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3665:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3669:6:6",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3665:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3646:30:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1285,
                                    "name": "loan",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1245,
                                    "src": "3680:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                      "typeString": "struct LendingBorrowing.Loan storage pointer"
                                    }
                                  },
                                  "id": 1286,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3685:10:6",
                                  "memberName": "collateral",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 943,
                                  "src": "3680:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3646:49:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1288,
                              "nodeType": "ExpressionStatement",
                              "src": "3646:49:6"
                            },
                            {
                              "expression": {
                                "id": 1293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1289,
                                    "name": "loan",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1245,
                                    "src": "3710:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                      "typeString": "struct LendingBorrowing.Loan storage pointer"
                                    }
                                  },
                                  "id": 1291,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "3715:10:6",
                                  "memberName": "collateral",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 943,
                                  "src": "3710:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3728:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3710:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1294,
                              "nodeType": "ExpressionStatement",
                              "src": "3710:19:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1300,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3779:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3783:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3779:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1304,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3799:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1361",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1361",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                ],
                                "id": 1303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3791:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1302,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3791:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3791:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1306,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1233,
                              "src": "3806:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1297,
                              "name": "lendingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 952,
                              "src": "3753:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3766:12:6",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 876,
                            "src": "3753:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3753:61:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "3753:61:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1310,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3841:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3845:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3841:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1312,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1233,
                              "src": "3853:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1309,
                            "name": "LoanRepaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "3830:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3830:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1314,
                        "nodeType": "EmitStatement",
                        "src": "3825:36:6"
                      }
                    ]
                  },
                  "functionSelector": "ab7b1c89",
                  "id": 1316,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "repayLoan",
                  "nameLocation": "3216:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1233,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "3234:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1316,
                        "src": "3226:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1232,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3226:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3225:17:6"
                  },
                  "returnParameters": {
                    "id": 1235,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3252:0:6"
                  },
                  "scope": 1361,
                  "src": "3207:662:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1332,
                    "nodeType": "Block",
                    "src": "3970:78:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1323,
                                    "name": "collateralBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 958,
                                    "src": "3989:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1325,
                                  "indexExpression": {
                                    "id": 1324,
                                    "name": "_user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1318,
                                    "src": "4008:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3989:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1326,
                                  "name": "collateralFactor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 954,
                                  "src": "4017:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3989:44:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1328,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3988:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4037:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "3988:52:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1322,
                        "id": 1331,
                        "nodeType": "Return",
                        "src": "3981:59:6"
                      }
                    ]
                  },
                  "id": 1333,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_maxBorrowableAmount",
                  "nameLocation": "3886:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1318,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "3925:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1333,
                        "src": "3917:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1317,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3917:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3906:31:6"
                  },
                  "returnParameters": {
                    "id": 1322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1321,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1333,
                        "src": "3961:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1320,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3961:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3960:9:6"
                  },
                  "scope": 1361,
                  "src": "3877:171:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1359,
                    "nodeType": "Block",
                    "src": "4217:113:6",
                    "statements": [
                      {
                        "assignments": [
                          1346
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1346,
                            "mutability": "mutable",
                            "name": "loan",
                            "nameLocation": "4240:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1359,
                            "src": "4228:16:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                              "typeString": "struct LendingBorrowing.Loan"
                            },
                            "typeName": {
                              "id": 1345,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1344,
                                "name": "Loan",
                                "nameLocations": [
                                  "4228:4:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 946,
                                "src": "4228:4:6"
                              },
                              "referencedDeclaration": 946,
                              "src": "4228:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1350,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1347,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "4247:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                              "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                            }
                          },
                          "id": 1349,
                          "indexExpression": {
                            "id": 1348,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1335,
                            "src": "4253:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4247:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$946_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4228:31:6"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 1351,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1346,
                                "src": "4278:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                                  "typeString": "struct LendingBorrowing.Loan memory"
                                }
                              },
                              "id": 1352,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4283:6:6",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 941,
                              "src": "4278:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1353,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1346,
                                "src": "4291:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                                  "typeString": "struct LendingBorrowing.Loan memory"
                                }
                              },
                              "id": 1354,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4296:10:6",
                              "memberName": "collateral",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 943,
                              "src": "4291:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1355,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1346,
                                "src": "4308:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                                  "typeString": "struct LendingBorrowing.Loan memory"
                                }
                              },
                              "id": 1356,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4313:8:6",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 945,
                              "src": "4308:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1357,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4277:45:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
                            "typeString": "tuple(uint256,uint256,bool)"
                          }
                        },
                        "functionReturnParameters": 1343,
                        "id": 1358,
                        "nodeType": "Return",
                        "src": "4270:52:6"
                      }
                    ]
                  },
                  "functionSelector": "e8a7da8e",
                  "id": 1360,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLoanDetails",
                  "nameLocation": "4065:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1335,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "4098:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "4090:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4090:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4079:31:6"
                  },
                  "returnParameters": {
                    "id": 1343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1338,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4169:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "4161:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4161:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "collateral",
                        "nameLocation": "4185:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "4177:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4177:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1342,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "4202:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "4197:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1341,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4197:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4160:51:6"
                  },
                  "scope": 1361,
                  "src": "4056:274:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1362,
              "src": "173:4160:6",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24,
                967,
                973,
                979,
                985,
                991
              ]
            }
          ],
          "src": "33:4302:6"
        }
      },
      "contracts/MyToken.sol": {
        "id": 7,
        "ast": {
          "absolutePath": "contracts/MyToken.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ],
            "MockERC20": [
              1407
            ],
            "Ownable": [
              147
            ]
          },
          "id": 1408,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1363,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1364,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1408,
              "sourceUnit": 800,
              "src": "61:55:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1365,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1408,
              "sourceUnit": 148,
              "src": "118:52:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1366,
                    "name": "ERC20",
                    "nameLocations": [
                      "196:5:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 799,
                    "src": "196:5:7"
                  },
                  "id": 1367,
                  "nodeType": "InheritanceSpecifier",
                  "src": "196:5:7"
                },
                {
                  "arguments": [
                    {
                      "expression": {
                        "id": 1369,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "211:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "215:6:7",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "211:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  ],
                  "baseName": {
                    "id": 1368,
                    "name": "Ownable",
                    "nameLocations": [
                      "203:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "203:7:7"
                  },
                  "id": 1371,
                  "nodeType": "InheritanceSpecifier",
                  "src": "203:19:7"
                }
              ],
              "canonicalName": "MockERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1407,
              "linearizedBaseContracts": [
                1407,
                147,
                799,
                189,
                903,
                877,
                933
              ],
              "name": "MockERC20",
              "nameLocation": "183:9:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1390,
                    "nodeType": "Block",
                    "src": "361:51:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1385,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "378:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "382:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "378:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1387,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "390:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1384,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "372:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "372:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1389,
                        "nodeType": "ExpressionStatement",
                        "src": "372:32:7"
                      }
                    ]
                  },
                  "id": 1391,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1380,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1375,
                          "src": "347:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 1381,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1377,
                          "src": "353:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 1382,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1379,
                        "name": "ERC20",
                        "nameLocations": [
                          "341:5:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 799,
                        "src": "341:5:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "341:19:7"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1373,
                        "mutability": "mutable",
                        "name": "initialSupply",
                        "nameLocation": "260:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "252:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "252:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1375,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "298:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "284:18:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "284:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1377,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "327:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "313:20:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "313:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "241:99:7"
                  },
                  "returnParameters": {
                    "id": 1383,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "361:0:7"
                  },
                  "scope": 1407,
                  "src": "230:182:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1405,
                    "nodeType": "Block",
                    "src": "481:36:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1401,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1393,
                              "src": "498:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1402,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1395,
                              "src": "502:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1400,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "492:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "492:17:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1404,
                        "nodeType": "ExpressionStatement",
                        "src": "492:17:7"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 1406,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1398,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1397,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "471:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "471:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "471:9:7"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "429:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1393,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "434:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "434:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1395,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "454:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "446:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "433:28:7"
                  },
                  "returnParameters": {
                    "id": 1399,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "481:0:7"
                  },
                  "scope": 1407,
                  "src": "420:97:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1408,
              "src": "174:346:7",
              "usedErrors": [
                13,
                18,
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                24,
                811,
                820
              ]
            }
          ],
          "src": "33:489:7"
        }
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "contracts/LendingBorrowing.sol": {
        "LendingBorrowing": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_lendingToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_collateralFactor",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "CollateralDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newFactor",
                  "type": "uint256"
                }
              ],
              "name": "CollateralFactorUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "CollateralWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LoanRepaid",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LoanTaken",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "collateralBalances",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collateralFactor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collateralToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "depositCollateral",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "getLoanDetails",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateral",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lendingToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "loans",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateral",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "repayLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFactor",
                  "type": "uint256"
                }
              ],
              "name": "setCollateralFactor",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "takeLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawCollateral",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lendingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFactor\",\"type\":\"uint256\"}],\"name\":\"CollateralFactorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanTaken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getLoanDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFactor\",\"type\":\"uint256\"}],\"name\":\"setCollateralFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"takeLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LendingBorrowing.sol\":\"LendingBorrowing\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/LendingBorrowing.sol\":{\"keccak256\":\"0xa0446397738707f60b16673352ced870d10cce0ec0e885545814e88f44f319b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bcbb3cd0951c28568a8825cd0a61b8df7132d24499028326338e8e8d43c2812\",\"dweb:/ipfs/QmZXxvqFmpUQqyw7jcsXQdwBCVED3cTJnLFXK68HsvQ72Q\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 568/66160 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 8094\n// Code size = 28568 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20240]\n     5: jump @61 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30270\n    14: i32 a0 = a0 + 0\n    16: ecalli 13 // 'set_immutable_data'\n    18: jump @61\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @16\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @16\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 48)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ecalli 7 // 'get_storage'\n   658: a0 = u64 [sp + 0x38]\n   661: a1 = u64 [sp + 0x30]\n   664: a2 = u64 [sp + 0x28]\n   667: a3 = u64 [sp + 0x20]\n   670: a0 = reverse a0\n   672: a1 = reverse a1\n   674: a2 = reverse a2\n   676: a3 = reverse a3\n   678: u64 [s1 + 0x18] = a3\n   681: u64 [s1 + 0x10] = a2\n   684: u64 [s1 + 0x8] = a1\n   687: u64 [s1] = a0\n   689: sp = s0 + 0xffffffffffffffa0\n   692: ra = u64 [sp + 0x58]\n   695: s0 = u64 [sp + 0x50]\n   698: s1 = u64 [sp + 0x48]\n   701: sp = sp + 0x60\n   704: ret\n      : @7 (gas: 40)\n   706: sp = sp + 0xffffffffffffffa0\n   709: u64 [sp + 0x58] = ra\n   712: u64 [sp + 0x50] = s0\n   715: s0 = sp + 0x60\n   718: sp = sp & 0xffffffffffffffe0\n   721: t0 = u64 [a0]\n   723: a3 = u64 [a0 + 0x8]\n   726: a4 = u64 [a0 + 0x10]\n   729: a0 = u64 [a0 + 0x18]\n   732: t1 = u64 [a1]\n   734: a2 = u64 [a1 + 0x8]\n   737: a5 = u64 [a1 + 0x10]\n   740: a1 = u64 [a1 + 0x18]\n   743: t2 = reverse a0\n   745: a4 = reverse a4\n   747: a3 = reverse a3\n   749: a0 = reverse t0\n   751: t0 = reverse a1\n   753: a5 = reverse a5\n   755: a2 = reverse a2\n   757: a1 = reverse t1\n   759: u64 [sp + 0x18] = a0\n   762: u64 [sp + 0x10] = a3\n   765: u64 [sp + 0x8] = a4\n   768: u64 [sp] = t2\n   770: u64 [sp + 0x38] = a1\n   773: u64 [sp + 0x30] = a2\n   776: u64 [sp + 0x28] = a5\n   779: u64 [sp + 0x20] = t0\n   782: i32 a1 = sp + 0\n   784: i32 a3 = sp + 0x20\n   787: a2 = 0xffffffffffffffff\n   790: a4 = 0x20\n   793: a0 = 0\n   795: ecalli 14 // 'set_storage'\n   797: sp = s0 + 0xffffffffffffffa0\n   800: ra = u64 [sp + 0x58]\n   803: s0 = u64 [sp + 0x50]\n   806: sp = sp + 0x60\n   809: ret\n      : @8 [@dyn 3] (gas: 1)\n   811: t0 = 8, jump @1020\n      : @9 [@dyn 4] (gas: 15)\n   816: u64 [sp + 0x38] = a4\n   819: u64 [sp + 0x30] = a3\n   822: u64 [sp + 0x28] = a2\n   825: u64 [sp + 0x20] = a1\n   828: i32 a2 = a0 + 0\n   830: i32 a3 = s1 + 0\n   832: i32 a0 = sp + 0x20\n   835: a1 = 0x1\n   838: ecalli 6 // 'deposit_event'\n   840: sp = s0 + 0xffffffffffffffa0\n   843: ra = u64 [sp + 0x58]\n   846: s0 = u64 [sp + 0x50]\n   849: s1 = u64 [sp + 0x48]\n   852: sp = sp + 0x60\n   855: ret\n      : @10 (gas: 24)\n   857: sp = sp + 0xffffffffffffff60\n   861: u64 [sp + 0x98] = ra\n   865: u64 [sp + 0x90] = s0\n   869: u64 [sp + 0x88] = s1\n   873: s0 = sp + 0xa0\n   877: sp = sp & 0xffffffffffffffe0\n   880: a4 = u64 [a3]\n   882: u64 [sp + 0x38] = a4\n   885: a4 = u64 [a3 + 0x8]\n   888: u64 [sp + 0x30] = a4\n   891: a4 = u64 [a3 + 0x10]\n   894: u64 [sp + 0x28] = a4\n   897: a3 = u64 [a3 + 0x18]\n   900: u64 [sp + 0x20] = a3\n   903: a3 = u64 [a2]\n   905: u64 [sp + 0x18] = a3\n   908: a3 = u64 [a2 + 0x8]\n   911: u64 [sp + 0x10] = a3\n   914: a3 = u64 [a2 + 0x10]\n   917: u64 [sp + 0x8] = a3\n   920: a2 = u64 [a2 + 0x18]\n   923: u64 [sp] = a2\n   925: s1 = a1\n   927: ra = 10, jump @16\n      : @11 [@dyn 5] (gas: 1)\n   932: t0 = 12, jump @1020\n      : @12 [@dyn 6] (gas: 27)\n   937: u64 [sp + 0x58] = a4\n   940: u64 [sp + 0x50] = a3\n   943: u64 [sp + 0x48] = a2\n   946: u64 [sp + 0x40] = a1\n   949: a1 = u64 [sp + 0x20]\n   952: a1 = reverse a1\n   954: a2 = u64 [sp + 0x28]\n   957: a2 = reverse a2\n   959: a3 = u64 [sp + 0x30]\n   962: a3 = reverse a3\n   964: a4 = u64 [sp + 0x38]\n   967: a4 = reverse a4\n   969: u64 [sp + 0x78] = a4\n   972: u64 [sp + 0x70] = a3\n   975: u64 [sp + 0x68] = a2\n   978: u64 [sp + 0x60] = a1\n   981: i32 a2 = a0 + 0\n   983: i32 a3 = s1 + 0\n   985: i32 a0 = sp + 0x40\n   988: a1 = 0x2\n   991: ecalli 6 // 'deposit_event'\n   993: sp = s0 + 0xffffffffffffff60\n   997: ra = u64 [sp + 0x98]\n  1001: s0 = u64 [sp + 0x90]\n  1005: s1 = u64 [sp + 0x88]\n  1009: sp = sp + 0xa0\n  1013: ret\n      : @13 (gas: 33)\n  1015: sp = sp + 0xffffffffffffff20\n  1019: u64 [sp + 0xd8] = ra\n  1023: u64 [sp + 0xd0] = s0\n  1027: u64 [sp + 0xc8] = s1\n  1031: s0 = sp + 0xe0\n  1035: sp = sp & 0xffffffffffffffe0\n  1038: a5 = u64 [a4]\n  1040: u64 [sp + 0x40] = a5\n  1043: a5 = u64 [a4 + 0x8]\n  1046: u64 [sp + 0x48] = a5\n  1049: a5 = u64 [a4 + 0x10]\n  1052: u64 [sp + 0x50] = a5\n  1055: a4 = u64 [a4 + 0x18]\n  1058: u64 [sp + 0x58] = a4\n  1061: t0 = 0xe\n  1064: a4 = u64 [a3]\n  1066: u64 [sp + 0x18] = a4\n  1069: a4 = u64 [a3 + 0x8]\n  1072: u64 [sp + 0x20] = a4\n  1075: a4 = u64 [a3 + 0x10]\n  1078: u64 [sp + 0x28] = a4\n  1081: a3 = u64 [a3 + 0x18]\n  1084: u64 [sp + 0x30] = a3\n  1087: s1 = u64 [a2]\n  1089: a3 = u64 [a2 + 0x8]\n  1092: u64 [sp] = a3\n  1094: a3 = u64 [a2 + 0x10]\n  1097: u64 [sp + 0x8] = a3\n  1100: a2 = u64 [a2 + 0x18]\n  1103: u64 [sp + 0x10] = a2\n  1106: u64 [sp + 56] = 0\n  1109: ra = 0x10\n  1112: jump @16\n      : @14 [@dyn 7] (gas: 2)\n  1115: u64 [sp + 0x38] = a1\n  1118: ra = 16, jump @16\n      : @15 [@dyn 8] (gas: 46)\n  1123: a1 = reverse s1\n  1125: u64 [sp + 0x78] = a1\n  1128: a1 = u64 [sp]\n  1130: a1 = reverse a1\n  1132: u64 [sp + 0x70] = a1\n  1135: a1 = u64 [sp + 0x8]\n  1138: a1 = reverse a1\n  1140: u64 [sp + 0x68] = a1\n  1143: a1 = u64 [sp + 0x10]\n  1146: a1 = reverse a1\n  1148: u64 [sp + 0x60] = a1\n  1151: a1 = u64 [sp + 0x18]\n  1154: a1 = reverse a1\n  1156: u64 [sp + 0x98] = a1\n  1160: a1 = u64 [sp + 0x20]\n  1163: a1 = reverse a1\n  1165: u64 [sp + 0x90] = a1\n  1169: a1 = u64 [sp + 0x28]\n  1172: a1 = reverse a1\n  1174: u64 [sp + 0x88] = a1\n  1178: a1 = u64 [sp + 0x30]\n  1181: a1 = reverse a1\n  1183: u64 [sp + 0x80] = a1\n  1187: a1 = u64 [sp + 0x40]\n  1190: a1 = reverse a1\n  1192: u64 [sp + 0xb8] = a1\n  1196: a1 = u64 [sp + 0x48]\n  1199: a1 = reverse a1\n  1201: u64 [sp + 0xb0] = a1\n  1205: a1 = u64 [sp + 0x50]\n  1208: a1 = reverse a1\n  1210: u64 [sp + 0xa8] = a1\n  1214: a1 = u64 [sp + 0x58]\n  1217: a1 = reverse a1\n  1219: u64 [sp + 0xa0] = a1\n  1223: i32 a2 = a0 + 0\n  1225: a3 = i32 [sp + 0x38]\n  1228: i32 a0 = sp + 0x60\n  1231: a1 = 0x3\n  1234: ecalli 6 // 'deposit_event'\n  1236: sp = s0 + 0xffffffffffffff20\n  1240: ra = u64 [sp + 0xd8]\n  1244: s0 = u64 [sp + 0xd0]\n  1248: s1 = u64 [sp + 0xc8]\n  1252: sp = sp + 0xe0\n  1256: ret\n      : @16 (gas: 2)\n  1258: i32 a2 = a0 >> 0x10\n  1261: jump @21 if a2 != 0\n      : @17 (gas: 4)\n  1264: a1 = a1 + a0\n  1267: i32 a1 = a1 + 0x1f\n  1270: a1 = a1 & 0xffffffffffffffe0\n  1273: jump @21 if a1 >u 65536\n      : @18 (gas: 3)\n  1279: a2 = 0x2023c\n  1284: a3 = i32 [0x2023c]\n  1289: jump @20 if a3 >=u a1\n      : @19 (gas: 2)\n  1292: u32 [0x2023c] = a1\n  1297: fallthrough\n      : @20 (gas: 4)\n  1298: a1 = 0x20250\n  1303: i32 a0 = a0 + 0\n  1305: a0 = a0 + a1\n  1308: ret\n      : @21 (gas: 1)\n  1310: trap\n      : @22 (gas: 6)\n  1311: sp = sp + 0xfffffffffffffff0\n  1314: u64 [sp + 0x8] = ra\n  1317: u64 [sp] = s0\n  1319: s0 = a0 & 0x1\n  1322: ecalli 4 // 'call_data_size'\n  1324: fallthrough\n      : @23 (gas: 2)\n  1325: u32 [0x20238] = a0\n  1330: jump @25 if s0 == 0\n      : @24 (gas: 1)\n  1333: ra = 18, jump @26\n      : @25 [@dyn 9] (gas: 1)\n  1337: ra = 20, jump @64\n      : @26 [@dyn 10] (gas: 15)\n  1342: sp = sp + 0xfffffffffffffc20\n  1346: a0 = sp + 0x300\n  1350: u64 [a0 + 0xd8] = ra\n  1354: u64 [a0 + 0xd0] = s0\n  1358: u64 [a0 + 0xc8] = s1\n  1362: s0 = sp + 0x3e0\n  1366: sp = sp & 0xffffffffffffffe0\n  1369: s1 = sp\n  1371: u64 [s1 + 632] = 0\n  1375: u64 [s1 + 624] = 0\n  1379: u64 [s1 + 616] = 0\n  1383: u64 [s1 + 608] = 0\n  1387: i32 a0 = s1 + 0x260\n  1391: ecalli 15 // 'value_transferred'\n  1393: fallthrough\n      : @27 (gas: 9)\n  1394: a4 = s1 + 0x200\n  1398: a0 = u64 [a4 + 0x70]\n  1401: a1 = u64 [a4 + 0x78]\n  1404: a2 = u64 [a4 + 0x68]\n  1407: a3 = u64 [a4 + 0x60]\n  1410: a1 = a1 | a2\n  1413: a0 = a0 | a3\n  1416: a0 = a0 | a1\n  1419: jump @52 if a0 != 0\n      : @28 (gas: 17)\n  1423: a0 = i32 [0x20238]\n  1428: u64 [s1 + 0x78] = a0\n  1431: a0 = a0 << 0x20\n  1434: a0 = a0 >> 0x20\n  1437: a0 = a0 + 0x1f\n  1440: a0 = a0 & 0xffffffffffffffe0\n  1443: a1 = a0 + 0x80\n  1447: a0 = a1 <u a0\n  1450: a2 = s1 + 0x200\n  1454: u64 [a2 + 0x40] = a1\n  1457: u64 [a2 + 0x48] = a0\n  1460: a0 = 0 if a0 != 0\n  1462: u64 [a2 + 0x50] = a0\n  1465: a0 = 0x40\n  1468: a1 = s1 + 0x240\n  1472: u64 [s1 + 600] = 0\n  1476: ra = 22, jump @4\n      : @29 [@dyn 11] (gas: 3)\n  1481: a0 = 0x80\n  1485: a1 = u64 [s1 + 0x78]\n  1488: ra = 24, jump @16\n      : @30 [@dyn 12] (gas: 5)\n  1493: i32 a0 = a0 + 0\n  1495: a1 = u64 [s1 + 0x78]\n  1498: a2 = 0\n  1500: ecalli 2 // 'call_data_copy'\n  1502: fallthrough\n      : @31 (gas: 2)\n  1503: a1 = u64 [s1 + 0x78]\n  1506: jump @53 if a1 <=u 95\n      : @32 (gas: 7)\n  1511: u64 [s1 + 536] = 0\n  1515: u64 [s1 + 528] = 0\n  1519: u64 [s1 + 512] = 0x80\n  1525: a0 = s1 + 0x220\n  1529: a1 = s1 + 0x200\n  1533: u64 [s1 + 520] = 0\n  1537: ra = 26, jump @909\n      : @33 [@dyn 13] (gas: 14)\n  1542: a1 = s1 + 0x200\n  1546: a0 = u64 [a1 + 0x30]\n  1549: u64 [s1 + 0x30] = a0\n  1552: a0 = u64 [a1 + 0x28]\n  1555: u64 [s1 + 0x40] = a0\n  1558: a0 = u64 [a1 + 0x20]\n  1561: u64 [s1 + 0x48] = a0\n  1564: u64 [s1 + 472] = 0\n  1568: u64 [s1 + 464] = 0\n  1572: u64 [s1 + 448] = 0xa0\n  1578: a0 = s1 + 0x1e0\n  1582: a1 = s1 + 0x1c0\n  1586: u64 [s1 + 456] = 0\n  1590: ra = 28, jump @909\n      : @34 [@dyn 14] (gas: 13)\n  1595: a0 = u64 [s1 + 0x1f0]\n  1599: u64 [s1 + 0x38] = a0\n  1602: a0 = u64 [s1 + 0x1e8]\n  1606: u64 [s1 + 0x50] = a0\n  1609: a0 = u64 [s1 + 0x1e0]\n  1613: u64 [s1 + 0x58] = a0\n  1616: a0 = sp + 0xffffffffffffffe0\n  1619: a0 = a0 & 0xffffffffffffffe0\n  1622: u64 [s1 + 0x70] = a0\n  1625: sp = a0\n  1627: a0 = s1 + 0x1a0\n  1631: a1 = 0xc0\n  1635: ra = 30, jump @2\n      : @35 [@dyn 15] (gas: 16)\n  1640: a4 = s1 + 0x100\n  1644: a0 = u64 [a4 + 0xb0]\n  1648: a1 = u64 [a4 + 0xb8]\n  1652: a2 = u64 [a4 + 0xa0]\n  1656: a3 = u64 [a4 + 0xa8]\n  1660: a4 = u64 [s1 + 0x70]\n  1663: u64 [a4 + 0x10] = a0\n  1666: u64 [a4 + 0x18] = a1\n  1669: u64 [a4] = a2\n  1671: u64 [a4 + 0x8] = a3\n  1674: a0 = 0x30250\n  1679: u64 [s1 + 0x78] = a0\n  1682: i32 a0 = a0 + 0\n  1684: u64 [s1 + 0x68] = a0\n  1687: ecalli 5 // 'caller'\n  1689: fallthrough\n      : @36 (gas: 7)\n  1690: a2 = u64 [s1 + 0x78]\n  1693: a0 = u32 [a2 + 0x10]\n  1696: a1 = u64 [a2]\n  1698: a2 = u64 [a2 + 0x8]\n  1701: a0 = a0 | a1\n  1704: a0 = a0 | a2\n  1707: jump @54 if a0 == 0\n      : @37 (gas: 7)\n  1711: u64 [s1 + 664] = 0\n  1715: u64 [s1 + 656] = 0\n  1719: u64 [s1 + 648] = 0\n  1723: u64 [s1 + 640] = 0\n  1727: a0 = s1 + 0x180\n  1731: a1 = s1 + 0x280\n  1735: ra = 32, jump @6\n      : @38 [@dyn 16] (gas: 14)\n  1740: a0 = u64 [s1 + 0x180]\n  1744: u64 [s1 + 0x8] = a0\n  1747: a0 = u64 [s1 + 0x188]\n  1751: u64 [s1] = a0\n  1753: a0 = u64 [s1 + 0x198]\n  1757: u64 [s1 + 0x28] = a0\n  1760: a0 = u64 [s1 + 0x190]\n  1764: u64 [s1 + 0x60] = a0\n  1767: a0 = u64 [s1 + 0x68]\n  1770: ra = 0x22\n  1773: ecalli 5 // 'caller'\n  1775: a2 = u64 [s1 + 0x78]\n  1778: t0 = 0x24\n  1781: jump @1010\n      : @39 [@dyn 17] (gas: 2)\n  1784: a2 = u64 [s1 + 0x78]\n  1787: t0 = 36, jump @1010\n      : @40 [@dyn 18] (gas: 21)\n  1792: a0 = a0 >> 0x20\n  1795: a2 = reverse a2\n  1797: a3 = a2 << 0x20\n  1800: a0 = a0 | a3\n  1803: a2 = a2 >> 0x20\n  1806: a3 = u64 [s1 + 0x60]\n  1809: a3 = a3 >> 0x20\n  1812: a3 = a3 << 0x20\n  1815: a2 = a2 | a3\n  1818: u64 [s1 + 696] = 0\n  1822: u64 [s1 + 688] = 0\n  1826: u64 [s1 + 680] = 0\n  1830: u64 [s1 + 672] = 0\n  1834: a3 = u64 [s1 + 0x28]\n  1837: u64 [s1 + 0x2d8] = a3\n  1841: u64 [s1 + 0x2d0] = a2\n  1845: u64 [s1 + 0x2c8] = a0\n  1849: u64 [s1 + 0x2c0] = a1\n  1853: a0 = s1 + 0x2a0\n  1857: a1 = s1 + 0x2c0\n  1861: ra = 38, jump @7\n      : @41 [@dyn 19] (gas: 3)\n  1866: a0 = s1 + 0x160\n  1870: a1 = 0x40\n  1873: ra = 40, jump @2\n      : @42 [@dyn 20] (gas: 14)\n  1878: a0 = u64 [s1 + 0x178]\n  1882: u64 [s1 + 0x28] = a0\n  1885: a0 = u64 [s1 + 0x170]\n  1889: u64 [s1 + 0x20] = a0\n  1892: a0 = u64 [s1 + 0x168]\n  1896: u64 [s1 + 0x18] = a0\n  1899: a0 = u64 [s1 + 0x160]\n  1903: u64 [s1 + 0x10] = a0\n  1906: a0 = u64 [s1 + 0x68]\n  1909: ra = 0x2a\n  1912: ecalli 5 // 'caller'\n  1914: a2 = u64 [s1 + 0x78]\n  1917: t0 = 0x2c\n  1920: jump @997\n      : @43 [@dyn 21] (gas: 2)\n  1923: a2 = u64 [s1 + 0x78]\n  1926: t0 = 44, jump @997\n      : @44 [@dyn 22] (gas: 34)\n  1931: t0 = a1 | a0\n  1934: a3 = a3 >> 0x20\n  1937: a2 = reverse a2\n  1939: a1 = a2 << 0x20\n  1942: a1 = a1 | a3\n  1945: a2 = a2 >> 0x20\n  1948: a3 = u64 [s1 + 0x60]\n  1951: a3 = a3 << 0x20\n  1954: a3 = a3 >> 0x20\n  1957: u64 [s1 + 280] = 0\n  1961: u64 [s1 + 312] = 0\n  1965: u64 [s1 + 0x130] = a3\n  1969: a0 = u64 [s1]\n  1971: u64 [s1 + 0x128] = a0\n  1975: a0 = u64 [s1 + 0x8]\n  1978: u64 [s1 + 0x120] = a0\n  1982: a3 = u64 [0x20000]\n  1987: a4 = u64 [0x20008]\n  1992: a5 = u64 [0x20010]\n  1997: a0 = u64 [0x20018]\n  2002: u64 [s1 + 0x158] = a3\n  2006: a3 = s1 + 0x100\n  2010: u64 [a3 + 0x50] = a4\n  2013: u64 [a3 + 0x48] = a5\n  2016: u64 [a3 + 0x40] = a0\n  2019: u64 [a3 + 0x10] = a2\n  2022: u64 [a3 + 0x8] = a1\n  2025: a2 = s1 + 0x140\n  2029: a3 = s1 + 0x120\n  2033: a4 = s1 + 0x100\n  2037: u64 [s1 + 0x100] = t0\n  2041: a0 = 0\n  2043: a1 = 0\n  2045: ra = 46, jump @13\n      : @45 [@dyn 23] (gas: 11)\n  2050: a0 = u64 [s1 + 0x30]\n  2053: a0 = a0 << 0x20\n  2056: a0 = a0 >> 0x20\n  2059: u64 [s1 + 0x78] = a0\n  2062: u64 [s1 + 760] = 0\n  2066: u64 [s1 + 752] = 0\n  2070: u64 [s1 + 744] = 0\n  2074: u64 [s1 + 736] = 0x1\n  2079: a0 = s1 + 0xe0\n  2083: a1 = s1 + 0x2e0\n  2087: ra = 48, jump @6\n      : @46 [@dyn 24] (gas: 18)\n  2092: a0 = u32 [s1 + 0xf4]\n  2096: a0 = a0 << 0x20\n  2099: a1 = u64 [s1 + 0xf8]\n  2103: a2 = u64 [s1 + 0x78]\n  2106: a0 = a0 | a2\n  2109: u64 [s1 + 792] = 0\n  2113: u64 [s1 + 784] = 0\n  2117: u64 [s1 + 776] = 0\n  2121: u64 [s1 + 768] = 0x1\n  2126: a2 = u64 [s1 + 0x40]\n  2129: u64 [s1 + 0x328] = a2\n  2133: a2 = u64 [s1 + 0x48]\n  2136: u64 [s1 + 0x320] = a2\n  2140: u64 [s1 + 0x338] = a1\n  2144: u64 [s1 + 0x330] = a0\n  2148: a0 = s1 + 0x300\n  2152: a1 = s1 + 0x320\n  2156: ra = 50, jump @7\n      : @47 [@dyn 25] (gas: 11)\n  2161: a0 = u64 [s1 + 0x38]\n  2164: a0 = a0 << 0x20\n  2167: a0 = a0 >> 0x20\n  2170: u64 [s1 + 0x78] = a0\n  2173: u64 [s1 + 856] = 0\n  2177: u64 [s1 + 848] = 0\n  2181: u64 [s1 + 840] = 0\n  2185: u64 [s1 + 832] = 0x2\n  2190: a0 = s1 + 0xc0\n  2194: a1 = s1 + 0x340\n  2198: ra = 52, jump @6\n      : @48 [@dyn 26] (gas: 18)\n  2203: a0 = u32 [s1 + 0xd4]\n  2207: a0 = a0 << 0x20\n  2210: a1 = u64 [s1 + 0xd8]\n  2214: a2 = u64 [s1 + 0x78]\n  2217: a0 = a0 | a2\n  2220: u64 [s1 + 888] = 0\n  2224: u64 [s1 + 880] = 0\n  2228: u64 [s1 + 872] = 0\n  2232: u64 [s1 + 864] = 0x2\n  2237: a2 = u64 [s1 + 0x50]\n  2240: u64 [s1 + 0x388] = a2\n  2244: a2 = u64 [s1 + 0x58]\n  2247: u64 [s1 + 0x380] = a2\n  2251: u64 [s1 + 0x398] = a1\n  2255: u64 [s1 + 0x390] = a0\n  2259: a0 = s1 + 0x360\n  2263: a1 = s1 + 0x380\n  2267: ra = 54, jump @7\n      : @49 [@dyn 27] (gas: 7)\n  2272: u64 [s1 + 952] = 0\n  2276: u64 [s1 + 944] = 0\n  2280: u64 [s1 + 936] = 0\n  2284: u64 [s1 + 928] = 0x3\n  2289: a0 = s1 + 0x3a0\n  2293: a1 = u64 [s1 + 0x70]\n  2296: ra = 56, jump @7\n      : @50 [@dyn 28] (gas: 13)\n  2301: a0 = u64 [s1 + 0x28]\n  2304: a1 = u64 [s1 + 0x18]\n  2307: a0 = a0 | a1\n  2310: a1 = u64 [s1 + 0x10]\n  2313: a2 = a1\n  2315: a3 = u64 [s1 + 0x20]\n  2318: a1 = a1 | a3\n  2321: a1 = a1 | a0\n  2324: a1 = a1 >> 0x20\n  2327: a0 = a0 | a3\n  2330: a0 = a0 << 0x20\n  2333: a0 = a0 | a1\n  2336: jump @59 if a0 == 0\n      : @51 (gas: 1)\n  2339: trap\n      : @52 (gas: 4)\n  2340: a1 = 0x20250\n  2345: i32 a1 = a1 + 0\n  2347: a0 = 0x1\n  2350: jump @63\n      : @53 (gas: 4)\n  2353: a1 = 0x20250\n  2358: i32 a1 = a1 + 0\n  2360: a0 = 0x1\n  2363: jump @63\n      : @54 (gas: 8)\n  2366: u64 [s1 + 176] = 0\n  2370: u64 [s1 + 168] = 0\n  2374: u64 [s1 + 160] = 0\n  2378: a0 = 0x1e4fbdf700000000\n  2388: a1 = s1 + 0xa0\n  2392: u64 [s1 + 0xb8] = a0\n  2396: a0 = 0\n  2398: ra = 58, jump @4\n      : @55 [@dyn 29] (gas: 7)\n  2403: u64 [s1 + 152] = 0\n  2407: u64 [s1 + 144] = 0\n  2411: u64 [s1 + 136] = 0\n  2415: a0 = 0x4\n  2418: a1 = s1 + 0x80\n  2422: u64 [s1 + 128] = 0\n  2426: ra = 60, jump @4\n      : @56 [@dyn 30] (gas: 2)\n  2431: a1 = i32 [0x2023c]\n  2436: jump @58 if a1 >u 63\n      : @57 (gas: 2)\n  2440: u32 [0x2023c] = 0x40\n  2446: fallthrough\n      : @58 (gas: 6)\n  2447: a1 = 0x20250\n  2452: i32 a1 = a1 + 0\n  2454: a0 = 0x1\n  2457: a2 = 0x24\n  2460: ecalli 12 // 'seal_return'\n  2462: fallthrough\n      : @59 (gas: 3)\n  2463: a0 = a2\n  2465: a1 = 0\n  2467: ra = 62, jump @16\n      : @60 [@dyn 31] (gas: 5)\n  2472: i32 a0 = a0 + 0\n  2474: a1 = 0\n  2476: a2 = 0\n  2478: ecalli 2 // 'call_data_copy'\n  2480: jump @0\n      : @61 (gas: 3)\n  2483: a0 = u64 [s1 + 0x10]\n  2486: a1 = 0\n  2488: ra = 64, jump @16\n      : @62 [@dyn 32] (gas: 6)\n  2493: i32 a1 = a0 + 0\n  2495: a0 = 0\n  2497: a2 = 0\n  2499: ra = 0x42\n  2502: ecalli 12 // 'seal_return'\n  2504: jump @64\n      : @63 (gas: 4)\n  2506: a2 = 0\n  2508: ra = 0x42\n  2511: ecalli 12 // 'seal_return'\n  2513: fallthrough\n      : @64 [@dyn 33] (gas: 16)\n  2514: sp = sp + 0xfffffffffffffe10\n  2518: u64 [sp + 0x1e8] = ra\n  2522: u64 [sp + 0x1e0] = s0\n  2526: u64 [sp + 0x1d8] = s1\n  2530: s0 = sp + 0x1f0\n  2534: sp = sp + 0xffffffffffffd550\n  2538: sp = sp & 0xffffffffffffffe0\n  2541: s1 = sp\n  2543: a2 = s1 + 0x2058\n  2547: u64 [a2 + 608] = 0\n  2551: u64 [a2 + 600] = 0\n  2555: u64 [a2 + 584] = 0x80\n  2561: a0 = 0x40\n  2564: a1 = s1 + 0x22a0\n  2568: u64 [a2 + 592] = 0\n  2572: ra = 68, jump @4\n      : @65 [@dyn 34] (gas: 4)\n  2577: a0 = 0x20238\n  2582: u64 [s1 + 0xd8] = a0\n  2586: a0 = i32 [0x20238]\n  2591: jump @67 if a0 >=u 4\n      : @66 (gas: 1)\n  2595: jump @861\n      : @67 (gas: 6)\n  2598: a0 = s1 + 0x2000\n  2602: i32 a0 = a0 + 0x2c0\n  2606: a1 = 0\n  2608: ra = 0x46\n  2611: ecalli 3 // 'call_data_load'\n  2613: fallthrough\n      : @68 [@dyn 35] (gas: 3)\n  2614: a2 = s1 + 0x2058\n  2618: a0 = i32 [a2 + 0x284]\n  2622: jump @70 if a0 != 2357215170\n      : @69 (gas: 1)\n  2629: jump @312\n      : @70 (gas: 1)\n  2632: jump @144 if a0 == 2376452955\n      : @71 (gas: 1)\n  2640: jump @73 if a0 != 2863441240\n      : @72 (gas: 1)\n  2647: jump @367\n      : @73 (gas: 2)\n  2650: a3 = s1 + 0x2858\n  2654: jump @208 if a0 == 2876972169\n      : @74 (gas: 1)\n  2662: jump @76 if a0 != 2986437588\n      : @75 (gas: 1)\n  2669: jump @299\n      : @76 (gas: 1)\n  2672: jump @78 if a0 != 3049398615\n      : @77 (gas: 1)\n  2679: jump @268\n      : @78 (gas: 1)\n  2682: jump @112 if a0 == 3134496799\n      : @79 (gas: 1)\n  2690: jump @195 if a0 == 3741391937\n      : @80 (gas: 1)\n  2698: jump @155 if a0 == 3903314574\n      : @81 (gas: 1)\n  2706: jump @238 if a0 != 1628634670\n      : @82 (gas: 10)\n  2714: u64 [a2 + 768] = 0\n  2718: u64 [a2 + 760] = 0\n  2722: u64 [a2 + 752] = 0\n  2726: u64 [a2 + 744] = 0\n  2730: a0 = s1 + 0x2000\n  2734: i32 a0 = a0 + 0x340\n  2738: ra = 0x48\n  2741: ecalli 15 // 'value_transferred'\n  2743: t0 = 0x4a\n  2746: jump @1023\n      : @83 [@dyn 36] (gas: 1)\n  2749: t0 = 74, jump @1023\n      : @84 [@dyn 37] (gas: 8)\n  2754: a0 = u64 [a4 + 0xf8]\n  2758: a1 = u64 [a3 + 0x300]\n  2762: a2 = u64 [a4 + 0xf0]\n  2766: a3 = u64 [a4 + 0xe8]\n  2770: a1 = a1 | a2\n  2773: a0 = a0 | a3\n  2776: a0 = a0 | a1\n  2779: jump @86 if a0 == 0\n      : @85 (gas: 1)\n  2782: jump @820\n      : @86 (gas: 3)\n  2785: a0 = u64 [s1 + 0xd8]\n  2789: a0 = i32 [a0]\n  2791: jump @88 if a0 >u 35\n      : @87 (gas: 1)\n  2795: jump @821\n      : @88 (gas: 5)\n  2798: a0 = s1 + 0x2000\n  2802: i32 a0 = a0 + 0x360\n  2806: a1 = 0x4\n  2809: ecalli 3 // 'call_data_load'\n  2811: fallthrough\n      : @89 (gas: 10)\n  2812: a0 = s1 + 0x2058\n  2816: a1 = a0 + 0x300\n  2820: a2 = u64 [a1 + 0x20]\n  2823: a3 = u64 [a1 + 0x18]\n  2826: a4 = u64 [a1 + 0x10]\n  2829: a5 = u64 [a1 + 0x8]\n  2832: a0 = a4 | a2\n  2835: a1 = a5 | a3\n  2838: a0 = a0 | a1\n  2841: jump @91 if a0 == 0\n      : @90 (gas: 1)\n  2844: jump @448\n      : @91 (gas: 3)\n  2847: a0 = s1 + 0x200\n  2851: a1 = 0x40\n  2854: ra = 76, jump @2\n      : @92 [@dyn 38] (gas: 6)\n  2859: a1 = s1 + 0x200\n  2863: a4 = u64 [a1 + 0x18]\n  2866: a5 = u64 [a1 + 0x10]\n  2869: a3 = u64 [a1 + 0x8]\n  2872: a0 = u64 [a1]\n  2874: t0 = 78, jump @1013\n      : @93 [@dyn 39] (gas: 1)\n  2879: jump @95 if a1 == 0\n      : @94 (gas: 1)\n  2882: jump @533\n      : @95 (gas: 11)\n  2885: u64 [s1 + 496] = 0\n  2889: u64 [s1 + 488] = 0\n  2893: u64 [s1 + 480] = 0\n  2897: a2 = 0x8c379a000000000\n  2907: a1 = s1 + 0x1e0\n  2911: u64 [s1 + 0x1f8] = a2\n  2915: u64 [s1 + 0xd8] = a0\n  2919: u64 [s1 + 0xd0] = a3\n  2923: u64 [s1 + 0xc8] = a4\n  2927: u64 [s1 + 0xc0] = a5\n  2931: ra = 80, jump @4\n      : @96 [@dyn 40] (gas: 5)\n  2936: a1 = u64 [s1 + 0xd8]\n  2940: a0 = u64 [s1 + 0xc8]\n  2944: a3 = u64 [s1 + 0xc0]\n  2948: a3 = a3 | a0\n  2951: t0 = 82, jump @993\n      : @97 [@dyn 41] (gas: 1)\n  2956: jump @99 if a0 != 0\n      : @98 (gas: 1)\n  2959: jump @533\n      : @99 (gas: 9)\n  2962: i32 a0 = a1 + 0x4\n  2965: u64 [s1 + 472] = 0\n  2969: u64 [s1 + 464] = 0\n  2973: u64 [s1 + 448] = 0x20\n  2978: a1 = s1 + 0x1c0\n  2982: u64 [s1 + 456] = 0\n  2986: u64 [s1 + 0xc8] = a3\n  2990: u64 [s1 + 0xc0] = a4\n  2994: ra = 84, jump @4\n      : @100 [@dyn 42] (gas: 1)\n  2999: t0 = 86, jump @994\n      : @101 [@dyn 43] (gas: 1)\n  3004: jump @103 if a0 != 0\n      : @102 (gas: 1)\n  3007: jump @533\n      : @103 (gas: 7)\n  3010: i32 a0 = a1 + 0x24\n  3013: u64 [s1 + 440] = 0\n  3017: u64 [s1 + 432] = 0\n  3021: u64 [s1 + 416] = 0x2b\n  3026: a1 = s1 + 0x1a0\n  3030: u64 [s1 + 424] = 0\n  3034: ra = 88, jump @4\n      : @104 [@dyn 44] (gas: 1)\n  3039: t0 = 90, jump @1014\n      : @105 [@dyn 45] (gas: 1)\n  3044: jump @107 if a0 != 0\n      : @106 (gas: 1)\n  3047: jump @533\n      : @107 (gas: 13)\n  3050: i32 a0 = a1 + 0x44\n  3053: a1 = u64 [0x20220]\n  3058: a4 = s1 + 0x100\n  3062: u64 [a4 + 0x98] = a1\n  3066: a1 = u64 [0x20228]\n  3071: u64 [s1 + 0xc0] = a2\n  3075: a2 = u64 [0x20230]\n  3080: a3 = u64 [0x200d8]\n  3085: u64 [a4 + 0x90] = a1\n  3089: u64 [a4 + 0x88] = a2\n  3093: a1 = s1 + 0x180\n  3097: u64 [a4 + 0x80] = a3\n  3101: ra = 92, jump @4\n      : @108 [@dyn 46] (gas: 1)\n  3106: t0 = 94, jump @995\n      : @109 [@dyn 47] (gas: 1)\n  3111: jump @111 if a0 != 0\n      : @110 (gas: 1)\n  3114: jump @533\n      : @111 (gas: 10)\n  3117: i32 a0 = a2 + 0x64\n  3120: a1 = u64 [0x200e0]\n  3125: u64 [s1 + 360] = 0\n  3129: u64 [s1 + 0x178] = a1\n  3133: a1 = 0x65726f0000000000\n  3143: u64 [s1 + 0x170] = a1\n  3147: a1 = s1 + 0x160\n  3151: u64 [s1 + 352] = 0\n  3155: ra = 0x216\n  3159: jump @4\n      : @112 (gas: 10)\n  3162: u64 [a3 + 480] = 0\n  3166: u64 [a3 + 472] = 0\n  3170: u64 [a3 + 464] = 0\n  3174: u64 [a3 + 456] = 0\n  3178: a0 = s1 + 0x3000\n  3182: i32 a0 = a0 + 0xfffffffffffffa20\n  3186: ra = 0x60\n  3189: ecalli 15 // 'value_transferred'\n  3191: t0 = 0x62\n  3194: jump @1024\n      : @113 [@dyn 48] (gas: 1)\n  3197: t0 = 98, jump @1024\n      : @114 [@dyn 49] (gas: 1)\n  3202: t0 = 100, jump @1029\n      : @115 [@dyn 50] (gas: 1)\n  3207: jump @117 if a0 == 0\n      : @116 (gas: 1)\n  3210: jump @822\n      : @117 (gas: 3)\n  3213: a0 = u64 [s1 + 0xd8]\n  3217: a0 = i32 [a0]\n  3219: jump @119 if a0 >u 35\n      : @118 (gas: 1)\n  3223: jump @823\n      : @119 (gas: 5)\n  3226: a0 = s1 + 0x3000\n  3230: i32 a0 = a0 + 0xfffffffffffffa40\n  3234: a1 = 0x4\n  3237: ecalli 3 // 'call_data_load'\n  3239: fallthrough\n      : @120 (gas: 10)\n  3240: a0 = s1 + 0x2858\n  3244: a2 = u64 [a0 + 0x200]\n  3248: a1 = a0 + 0x100\n  3252: a3 = u64 [a1 + 0xf8]\n  3256: a4 = u64 [a1 + 0xf0]\n  3260: a5 = u64 [a1 + 0xe8]\n  3264: a0 = a4 | a2\n  3267: a1 = a5 | a3\n  3270: a0 = a0 | a1\n  3273: jump @122 if a0 == 0\n      : @121 (gas: 1)\n  3276: jump @381\n      : @122 (gas: 3)\n  3279: a0 = s1 + 0x1c60\n  3283: a1 = 0x40\n  3286: ra = 102, jump @2\n      : @123 [@dyn 51] (gas: 14)\n  3291: a2 = s1 + 0x1858\n  3295: t0 = u64 [a2 + 0x420]\n  3299: a1 = a2 + 0x400\n  3303: a5 = u64 [a1 + 0x18]\n  3306: a4 = u64 [a1 + 0x10]\n  3309: a0 = u64 [a1 + 0x8]\n  3312: a3 = a4 | t0\n  3315: a1 = a0 | a5\n  3318: a1 = a1 | a3\n  3321: a1 = a1 >> 0x20\n  3324: a3 = a3 | a5\n  3327: a3 = a3 << 0x20\n  3330: a1 = a1 | a3\n  3333: jump @125 if a1 == 0\n      : @124 (gas: 1)\n  3336: jump @533\n      : @125 (gas: 11)\n  3339: u64 [a2 + 1016] = 0\n  3343: u64 [a2 + 1008] = 0\n  3347: u64 [a2 + 1000] = 0\n  3351: a3 = 0x8c379a000000000\n  3361: a1 = s1 + 0x1c40\n  3365: u64 [a2 + 0x400] = a3\n  3369: u64 [s1 + 0xd8] = a0\n  3373: u64 [s1 + 0xd0] = a4\n  3377: u64 [s1 + 0xc0] = t0\n  3381: u64 [s1 + 0xc8] = a5\n  3385: ra = 104, jump @4\n      : @126 [@dyn 52] (gas: 1)\n  3390: t0 = 106, jump @992\n      : @127 [@dyn 53] (gas: 1)\n  3395: jump @129 if a0 != 0\n      : @128 (gas: 1)\n  3398: jump @533\n      : @129 (gas: 1)\n  3401: t0 = 108, jump @1032\n      : @130 [@dyn 54] (gas: 8)\n  3406: u64 [a2 + 992] = 0\n  3410: u64 [a2 + 984] = 0\n  3414: u64 [a2 + 968] = 0x20\n  3419: a1 = s1 + 0x1c20\n  3423: u64 [a2 + 976] = 0\n  3427: u64 [s1 + 0xc8] = a3\n  3431: u64 [s1 + 0xc0] = a4\n  3435: ra = 110, jump @4\n      : @131 [@dyn 55] (gas: 1)\n  3440: t0 = 112, jump @994\n      : @132 [@dyn 56] (gas: 1)\n  3445: jump @134 if a0 != 0\n      : @133 (gas: 1)\n  3448: jump @533\n      : @134 (gas: 1)\n  3451: t0 = 114, jump @1030\n      : @135 [@dyn 57] (gas: 6)\n  3456: u64 [a2 + 960] = 0\n  3460: u64 [a2 + 952] = 0\n  3464: u64 [a2 + 936] = 0x28\n  3469: a1 = s1 + 0x1c00\n  3473: u64 [a2 + 944] = 0\n  3477: ra = 116, jump @4\n      : @136 [@dyn 58] (gas: 1)\n  3482: t0 = 118, jump @996\n      : @137 [@dyn 59] (gas: 1)\n  3487: jump @139 if a0 != 0\n      : @138 (gas: 1)\n  3490: jump @533\n      : @139 (gas: 14)\n  3493: i32 a0 = a1 + 0x44\n  3496: a1 = u64 [0x20060]\n  3501: u64 [s1 + 0xc0] = a2\n  3505: a5 = s1 + 0x1858\n  3509: a4 = a5 + 0x300\n  3513: u64 [a4 + 0xa0] = a1\n  3517: a1 = u64 [0x20068]\n  3522: a2 = u64 [0x20070]\n  3527: a3 = u64 [0x20078]\n  3532: u64 [a4 + 0x98] = a1\n  3536: u64 [a4 + 0x90] = a2\n  3540: a1 = s1 + 0x1be0\n  3544: u64 [a4 + 0x88] = a3\n  3548: ra = 120, jump @4\n      : @140 [@dyn 60] (gas: 1)\n  3553: t0 = 122, jump @995\n      : @141 [@dyn 61] (gas: 1)\n  3558: jump @143 if a0 != 0\n      : @142 (gas: 1)\n  3561: jump @533\n      : @143 (gas: 10)\n  3564: i32 a0 = a2 + 0x64\n  3567: a1 = u64 [0x20080]\n  3572: a3 = s1 + 0x1858\n  3576: u64 [a3 + 888] = 0\n  3580: u64 [a3 + 880] = 0\n  3584: u64 [a3 + 0x380] = a1\n  3588: a1 = s1 + 0x1bc0\n  3592: u64 [a3 + 872] = 0\n  3596: ra = 0x216\n  3600: jump @4\n      : @144 (gas: 8)\n  3603: u64 [a2 + 1920] = 0\n  3607: u64 [a2 + 1912] = 0\n  3611: u64 [a2 + 1904] = 0\n  3615: u64 [a2 + 1896] = 0\n  3619: a0 = s1 + 0x2000\n  3623: i32 a0 = a0 + 0x7c0\n  3627: ecalli 15 // 'value_transferred'\n  3629: fallthrough\n      : @145 (gas: 11)\n  3630: a3 = s1 + 0x2058\n  3634: a5 = a3 + 0x700\n  3638: a0 = u64 [a5 + 0x78]\n  3641: a1 = u64 [a5 + 0x80]\n  3645: a2 = u64 [a5 + 0x70]\n  3648: a4 = a3\n  3650: a3 = u64 [a5 + 0x68]\n  3653: a1 = a1 | a2\n  3656: a0 = a0 | a3\n  3659: a0 = a0 | a1\n  3662: jump @147 if a0 == 0\n      : @146 (gas: 1)\n  3665: jump @824\n      : @147 (gas: 3)\n  3668: a0 = u64 [s1 + 0xd8]\n  3672: a0 = i32 [a0]\n  3674: jump @149 if a0 >u 3\n      : @148 (gas: 1)\n  3678: jump @825\n      : @149 (gas: 7)\n  3681: u64 [a4 + 1952] = 0\n  3685: u64 [a4 + 1944] = 0\n  3689: u64 [a4 + 1936] = 0\n  3693: u64 [a4 + 1928] = 0\n  3697: a0 = s1 + 0x12e0\n  3701: a1 = s1 + 0x27e0\n  3705: ra = 124, jump @6\n      : @150 [@dyn 62] (gas: 11)\n  3710: a1 = s1 + 0x1058\n  3714: a2 = a1 + 0x200\n  3718: a0 = u64 [a2 + 0x98]\n  3722: u64 [s1 + 0xc8] = a0\n  3726: a0 = u64 [a2 + 0x90]\n  3730: u64 [s1 + 0xd8] = a0\n  3734: a0 = u64 [a2 + 0x88]\n  3738: u64 [s1 + 0xd0] = a0\n  3742: a0 = s1 + 0x12c0\n  3746: a1 = 0x40\n  3749: ra = 126, jump @2\n      : @151 [@dyn 63] (gas: 7)\n  3754: a3 = s1 + 0x1058\n  3758: a5 = a3 + 0x200\n  3762: a4 = u64 [a5 + 0x80]\n  3766: a1 = u64 [a5 + 0x78]\n  3769: a2 = u64 [a5 + 0x70]\n  3772: a0 = u64 [a5 + 0x68]\n  3775: t0 = 128, jump @1017\n      : @152 [@dyn 64] (gas: 1)\n  3781: jump @154 if a1 == 0\n      : @153 (gas: 1)\n  3784: jump @533\n      : @154 (gas: 14)\n  3787: a1 = u64 [s1 + 0xc8]\n  3791: a1 = a1 << 0x20\n  3794: a2 = a1 >> 0x20\n  3797: u64 [a3 + 608] = 0\n  3801: a1 = u64 [s1 + 0xd0]\n  3805: a4 = a3 + 0x200\n  3809: u64 [a4 + 0x48] = a1\n  3812: a1 = u64 [s1 + 0xd8]\n  3816: u64 [a4 + 0x50] = a1\n  3819: a1 = s1 + 0x12a0\n  3823: u64 [a4 + 0x58] = a2\n  3826: u64 [s1 + 0xd8] = a0\n  3830: ra = 0x154\n  3834: jump @4\n      : @155 (gas: 8)\n  3837: u64 [a3 + 800] = 0\n  3841: u64 [a3 + 792] = 0\n  3845: u64 [a3 + 784] = 0\n  3849: u64 [a3 + 776] = 0\n  3853: a0 = s1 + 0x3000\n  3857: i32 a0 = a0 + 0xfffffffffffffb60\n  3861: ecalli 15 // 'value_transferred'\n  3863: fallthrough\n      : @156 (gas: 10)\n  3864: a3 = s1 + 0x2858\n  3868: a4 = a3 + 0x300\n  3872: a0 = u64 [a4 + 0x18]\n  3875: a1 = u64 [a4 + 0x20]\n  3878: a2 = u64 [a4 + 0x10]\n  3881: a3 = u64 [a4 + 0x8]\n  3884: a1 = a1 | a2\n  3887: a0 = a0 | a3\n  3890: a0 = a0 | a1\n  3893: jump @158 if a0 == 0\n      : @157 (gas: 1)\n  3896: jump @826\n      : @158 (gas: 3)\n  3899: a0 = u64 [s1 + 0xd8]\n  3903: a0 = i32 [a0]\n  3905: jump @160 if a0 >u 35\n      : @159 (gas: 1)\n  3909: jump @827\n      : @160 (gas: 6)\n  3912: a0 = s1 + 0x3000\n  3916: i32 a0 = a0 + 0xfffffffffffffb80\n  3920: a1 = 0x4\n  3923: ra = 0x82\n  3927: ecalli 3 // 'call_data_load'\n  3929: fallthrough\n      : @161 [@dyn 65] (gas: 4)\n  3930: a4 = s1 + 0x2858\n  3934: a1 = u64 [a4 + 0x338]\n  3938: a0 = u64 [a4 + 0x340]\n  3942: t0 = 132, jump @1007\n      : @162 [@dyn 66] (gas: 1)\n  3948: jump @164 if a3 != 0\n      : @163 (gas: 1)\n  3951: jump @828\n      : @164 (gas: 11)\n  3954: a2 = u64 [a4 + 0x330]\n  3958: a3 = u64 [a4 + 0x328]\n  3962: a4 = s1 + 0x2058\n  3966: a5 = a4 + 0x100\n  3970: u64 [a5 + 0x68] = a3\n  3973: u64 [a5 + 0x70] = a2\n  3976: u64 [a5 + 0x78] = a1\n  3979: a1 = s1 + 0x21c0\n  3983: u64 [a5 + 0x80] = a0\n  3987: a0 = 0\n  3989: ra = 134, jump @4\n      : @165 [@dyn 67] (gas: 2)\n  3995: a1 = s1 + 0x2058\n  3999: t0 = 136, jump @1028\n      : @166 [@dyn 68] (gas: 3)\n  4005: a1 = s1 + 0x21a0\n  4009: u64 [a2 + 336] = 0\n  4013: ra = 138, jump @4\n      : @167 [@dyn 69] (gas: 6)\n  4019: a0 = sp + 0xffffffffffffffe0\n  4022: a0 = a0 & 0xffffffffffffffe0\n  4025: u64 [s1 + 0xd0] = a0\n  4029: sp = a0\n  4031: a1 = i32 [0x2023c]\n  4036: jump @169 if a1 >u 63\n      : @168 (gas: 4)\n  4040: a1 = 0x40\n  4043: u32 [0x2023c] = a1\n  4048: t0 = 0x8c\n  4052: jump @1027\n      : @169 (gas: 1)\n  4055: t0 = 140, jump @1027\n      : @170 [@dyn 70] (gas: 8)\n  4061: a0 = 0x20250\n  4066: i32 a0 = a0 + 0\n  4068: i32 a2 = a2 + 0\n  4070: a1 = 0x40\n  4073: ra = 0x8e\n  4077: ecalli 8 // 'hash_keccak_256'\n  4079: t0 = 0x90\n  4083: jump @1006\n      : @171 [@dyn 71] (gas: 1)\n  4086: t0 = 144, jump @1006\n      : @172 [@dyn 72] (gas: 3)\n  4092: a0 = s1 + 0x2180\n  4096: a1 = 0x40\n  4099: ra = 146, jump @2\n      : @173 [@dyn 73] (gas: 16)\n  4105: a1 = s1 + 0x2058\n  4109: a5 = a1 + 0x100\n  4113: a0 = u64 [a5 + 0x40]\n  4116: u64 [s1 + 0xc0] = a0\n  4120: a2 = u64 [a5 + 0x38]\n  4123: u64 [s1 + 0xb8] = a2\n  4127: a4 = u64 [a5 + 0x30]\n  4130: u64 [s1 + 0xc8] = a4\n  4134: a3 = u64 [a5 + 0x28]\n  4137: u64 [s1 + 0xd8] = a3\n  4141: u64 [a5 + 0x20] = a0\n  4144: u64 [a5 + 0x18] = a2\n  4147: u64 [a5 + 0x10] = a4\n  4150: a0 = s1 + 0x2160\n  4154: u64 [a5 + 0x8] = a3\n  4157: ra = 148, jump @923\n      : @174 [@dyn 74] (gas: 3)\n  4163: a0 = s1 + 0x2140\n  4167: a1 = u64 [s1 + 0xd0]\n  4171: ra = 150, jump @6\n      : @175 [@dyn 75] (gas: 1)\n  4177: t0 = 152, jump @1011\n      : @176 [@dyn 76] (gas: 1)\n  4183: jump @178 if a0 == 0\n      : @177 (gas: 1)\n  4186: jump @533\n      : @178 (gas: 16)\n  4189: a0 = s1 + 0x2058\n  4193: a4 = u64 [a0 + 0x100]\n  4197: a3 = u64 [a0 + 0xf8]\n  4201: a2 = u64 [a0 + 0xf0]\n  4205: a1 = u64 [a0 + 0xe8]\n  4209: u64 [s1 + 0xd0] = a1\n  4213: u64 [a0 + 0xc8] = a1\n  4217: u64 [s1 + 0x90] = a2\n  4221: u64 [a0 + 0xd0] = a2\n  4225: u64 [s1 + 0x88] = a3\n  4229: u64 [a0 + 0xd8] = a3\n  4233: a1 = s1 + 0x2120\n  4237: u64 [s1 + 0x80] = a4\n  4241: u64 [a0 + 0xe0] = a4\n  4245: a0 = u64 [s1 + 0xd8]\n  4249: ra = 154, jump @4\n      : @179 [@dyn 77] (gas: 1)\n  4255: t0 = 156, jump @1012\n      : @180 [@dyn 78] (gas: 9)\n  4261: a4 = s1 + 0x2858\n  4265: a5 = a4 + 0x300\n  4269: u64 [a5 + 0x50] = a1\n  4272: u64 [a5 + 0x48] = a0\n  4275: u64 [a5 + 0x58] = a2\n  4278: u64 [a5 + 0x60] = a3\n  4281: a0 = s1 + 0x2100\n  4285: a1 = s1 + 0x2ba0\n  4289: ra = 158, jump @6\n      : @181 [@dyn 79] (gas: 1)\n  4295: t0 = 160, jump @1003\n      : @182 [@dyn 80] (gas: 1)\n  4301: jump @184 if a0 != 0\n      : @183 (gas: 1)\n  4304: jump @533\n      : @184 (gas: 21)\n  4307: a0 = s1 + 0x2058\n  4311: u64 [s1 + 0xc0] = a2\n  4315: a2 = a0\n  4317: t0 = u64 [a0 + 0xc0]\n  4321: a4 = u64 [a0 + 0xb8]\n  4325: u64 [s1 + 0xb8] = a3\n  4329: a3 = u64 [a0 + 0xb0]\n  4333: a1 = u64 [a0 + 0xa8]\n  4337: a0 = u64 [s1 + 0xd8]\n  4341: i32 a0 = a0 + 0x20\n  4344: u64 [s1 + 0x78] = a1\n  4347: u64 [a2 + 0x88] = a1\n  4351: u64 [s1 + 0x70] = a3\n  4354: u64 [a2 + 0x90] = a3\n  4358: u64 [s1 + 0x68] = a4\n  4361: u64 [a2 + 0x98] = a4\n  4365: a1 = s1 + 0x20e0\n  4369: a3 = t0\n  4371: u64 [s1 + 0x60] = a3\n  4374: u64 [a2 + 0xa0] = a3\n  4378: ra = 162, jump @4\n      : @185 [@dyn 81] (gas: 1)\n  4384: t0 = 164, jump @1009\n      : @186 [@dyn 82] (gas: 9)\n  4390: a4 = s1 + 0x2858\n  4394: a5 = a4 + 0x300\n  4398: u64 [a5 + 0x70] = a2\n  4401: u64 [a5 + 0x68] = a0\n  4404: u64 [a5 + 0x78] = a3\n  4407: u64 [a5 + 0x80] = a1\n  4411: a0 = s1 + 0x20c0\n  4415: a1 = s1 + 0x2bc0\n  4419: ra = 166, jump @6\n      : @187 [@dyn 83] (gas: 9)\n  4425: a0 = u64 [s1 + 0xb8]\n  4429: a0 = a0 + 0xffffffffffffffc0\n  4432: a1 = u64 [s1 + 0xd8]\n  4436: a0 = a1 <u a0\n  4439: a1 = u64 [s1 + 0xc8]\n  4443: a0 = 0 if a1 != 0\n  4445: a1 = u64 [s1 + 0xc0]\n  4449: a0 = 0 if a1 != 0\n  4451: jump @189 if a0 != 0\n      : @188 (gas: 1)\n  4454: jump @533\n      : @189 (gas: 13)\n  4457: a3 = s1 + 0x2058\n  4461: a0 = u64 [a3 + 0x68]\n  4464: a0 = a0 & 0xff\n  4468: a2 = a0 >u 0\n  4470: u64 [s1 + 0xc8] = a2\n  4474: a0 = u64 [s1 + 0xd8]\n  4478: i32 a0 = a0 + 0x40\n  4481: u64 [a3 + 96] = 0\n  4484: u64 [a3 + 88] = 0\n  4487: u64 [a3 + 80] = 0\n  4490: a1 = s1 + 0x20a0\n  4494: u64 [a3 + 0x48] = a2\n  4497: ra = 168, jump @4\n      : @190 [@dyn 84] (gas: 3)\n  4503: a0 = s1 + 0x2080\n  4507: a1 = 0x40\n  4510: ra = 170, jump @2\n      : @191 [@dyn 85] (gas: 41)\n  4516: a5 = s1 + 0x2058\n  4520: a3 = u64 [a5 + 0x40]\n  4523: u64 [s1 + 0xd8] = a3\n  4527: a2 = u64 [a5 + 0x38]\n  4530: u64 [s1 + 0xc0] = a2\n  4534: a4 = u64 [a5 + 0x30]\n  4537: u64 [s1 + 0xb8] = a4\n  4541: t0 = u64 [a5 + 0x28]\n  4544: u64 [s1 + 0xb0] = t0\n  4548: a0 = s1 + 0x1858\n  4552: a1 = u64 [s1 + 0xc8]\n  4556: u64 [a0 + 0x788] = a1\n  4560: a1 = u64 [s1 + 0x60]\n  4563: u64 [a0 + 0x7c0] = a1\n  4567: a1 = u64 [s1 + 0x68]\n  4570: u64 [a0 + 0x7b8] = a1\n  4574: a1 = u64 [s1 + 0x70]\n  4577: u64 [a0 + 0x7b0] = a1\n  4581: a1 = u64 [s1 + 0x78]\n  4584: u64 [a0 + 0x7a8] = a1\n  4588: u64 [a0 + 1952] = 0\n  4592: u64 [a0 + 1944] = 0\n  4596: u64 [a0 + 1936] = 0\n  4600: a1 = u64 [s1 + 0x80]\n  4604: u64 [a0 + 0x7e0] = a1\n  4608: a1 = u64 [s1 + 0x88]\n  4612: u64 [a0 + 0x7d8] = a1\n  4616: a1 = u64 [s1 + 0x90]\n  4620: u64 [a0 + 0x7d0] = a1\n  4624: a1 = u64 [s1 + 0xd0]\n  4628: u64 [a0 + 0x7c8] = a1\n  4632: u64 [a5] = a3\n  4634: u64 [a5 + 0xfffffffffffffff8] = a2\n  4637: u64 [a5 + 0xfffffffffffffff0] = a4\n  4640: a0 = s1 + 0x2060\n  4644: a1 = s1 + 0x2040\n  4648: a2 = s1 + 0x2020\n  4652: a3 = s1 + 0x2000\n  4656: a4 = s1 + 0x1fe0\n  4660: u64 [a5 + 0xffffffffffffffe8] = t0\n  4663: ra = 172, jump @915\n      : @192 [@dyn 86] (gas: 12)\n  4669: a4 = u64 [s1 + 0xb8]\n  4673: a2 = u64 [s1 + 0xb0]\n  4677: a0 = u64 [s1 + 0xd8]\n  4681: a0 = a0 | a4\n  4684: a3 = u64 [s1 + 0xc0]\n  4688: a1 = a2 | a3\n  4691: a1 = a1 | a0\n  4694: a1 = a1 >> 0x20\n  4697: a0 = a0 | a3\n  4700: a0 = a0 << 0x20\n  4703: a0 = a0 | a1\n  4706: jump @194 if a0 == 0\n      : @193 (gas: 1)\n  4709: jump @533\n      : @194 (gas: 8)\n  4712: t0 = a3\n  4714: a1 = s1 + 0x2058\n  4718: a0 = u64 [a1 + 0x10]\n  4721: a3 = u64 [a1 + 0x20]\n  4724: u64 [s1 + 0xd0] = a3\n  4728: t1 = u64 [a1 + 0x8]\n  4731: a3 = u64 [a1 + 0x18]\n  4734: jump @264\n      : @195 (gas: 9)\n  4737: u64 [a3 + 736] = 0\n  4741: u64 [a3 + 728] = 0\n  4745: u64 [a3 + 720] = 0\n  4749: u64 [a3 + 712] = 0\n  4753: a0 = s1 + 0x3000\n  4757: i32 a0 = a0 + 0xfffffffffffffb20\n  4761: ra = 0xae\n  4765: ecalli 15 // 'value_transferred'\n  4767: fallthrough\n      : @196 [@dyn 87] (gas: 3)\n  4768: a3 = s1 + 0x2858\n  4772: a4 = a3 + 0x200\n  4776: t0 = 176, jump @1029\n      : @197 [@dyn 88] (gas: 1)\n  4782: jump @199 if a0 == 0\n      : @198 (gas: 1)\n  4785: jump @829\n      : @199 (gas: 3)\n  4788: a0 = u64 [s1 + 0xd8]\n  4792: a1 = i32 [a0]\n  4794: jump @201 if a1 >u 3\n      : @200 (gas: 1)\n  4798: jump @830\n      : @201 (gas: 8)\n  4801: a1 = s1 + 0x2858\n  4805: u64 [a1 + 768] = 0\n  4809: u64 [a1 + 760] = 0\n  4813: u64 [a1 + 752] = 0\n  4817: u64 [a1 + 744] = 0x3\n  4822: a0 = s1 + 0x1fc0\n  4826: a1 = s1 + 0x2b40\n  4830: ra = 178, jump @6\n      : @202 [@dyn 89] (gas: 3)\n  4836: t0 = 0xb4\n  4840: a1 = s1 + 0x1858\n  4844: fallthrough\n      : @203 [@dyn 90] (gas: 12)\n  4845: a2 = a1 + 0x700\n  4849: a0 = u64 [a2 + 0x80]\n  4853: u64 [s1 + 0xd8] = a0\n  4857: a0 = u64 [a2 + 0x78]\n  4860: u64 [s1 + 0xd0] = a0\n  4864: a0 = u64 [a2 + 0x70]\n  4867: u64 [s1 + 0xc8] = a0\n  4871: a0 = u64 [a2 + 0x68]\n  4874: u64 [s1 + 0xc0] = a0\n  4878: a0 = s1 + 0x1fa0\n  4882: a1 = 0x40\n  4885: ra = 182, jump @2\n      : @204 [@dyn 91] (gas: 7)\n  4891: a3 = s1 + 0x1858\n  4895: a5 = a3 + 0x700\n  4899: a0 = u64 [a5 + 0x60]\n  4902: a1 = u64 [a5 + 0x58]\n  4905: a2 = u64 [a5 + 0x50]\n  4908: a4 = u64 [a5 + 0x48]\n  4911: t0 = 184, jump @1008\n      : @205 [@dyn 92] (gas: 1)\n  4917: jump @207 if a0 == 0\n      : @206 (gas: 1)\n  4920: jump @533\n      : @207 (gas: 14)\n  4923: a0 = u64 [s1 + 0xc0]\n  4927: a2 = a3 + 0x700\n  4931: u64 [a2 + 0x28] = a0\n  4934: a0 = u64 [s1 + 0xc8]\n  4938: u64 [a2 + 0x30] = a0\n  4941: a0 = u64 [s1 + 0xd0]\n  4945: u64 [a2 + 0x38] = a0\n  4948: a1 = s1 + 0x1f80\n  4952: a0 = u64 [s1 + 0xd8]\n  4956: u64 [a2 + 0x40] = a0\n  4959: a0 = a4\n  4961: u64 [s1 + 0xd8] = a4\n  4965: ra = 0x154\n  4969: jump @4\n      : @208 (gas: 8)\n  4972: u64 [a3 + 0] = 0\n  4974: u64 [a3 + 4294967288] = 0\n  4977: u64 [a3 + 4294967280] = 0\n  4980: u64 [a3 + 4294967272] = 0\n  4983: a0 = s1 + 0x3000\n  4987: i32 a0 = a0 + 0xfffffffffffff840\n  4991: ecalli 15 // 'value_transferred'\n  4993: fallthrough\n      : @209 (gas: 10)\n  4994: a3 = s1 + 0x2858\n  4998: a4 = a3 + 0xffffffffffffff00\n  5002: a0 = u64 [a4 + 0xf8]\n  5006: a1 = u64 [a3]\n  5008: a2 = u64 [a4 + 0xf0]\n  5012: a3 = u64 [a4 + 0xe8]\n  5016: a1 = a1 | a2\n  5019: a0 = a0 | a3\n  5022: a0 = a0 | a1\n  5025: jump @211 if a0 == 0\n      : @210 (gas: 1)\n  5028: jump @831\n      : @211 (gas: 3)\n  5031: a0 = u64 [s1 + 0xd8]\n  5035: a0 = i32 [a0]\n  5037: jump @213 if a0 >u 35\n      : @212 (gas: 1)\n  5041: jump @832\n      : @213 (gas: 5)\n  5044: a0 = s1 + 0x3000\n  5048: i32 a0 = a0 + 0xfffffffffffff860\n  5052: a1 = 0x4\n  5055: ecalli 3 // 'call_data_load'\n  5057: fallthrough\n      : @214 (gas: 9)\n  5058: a0 = s1 + 0x2858\n  5062: a2 = u64 [a0 + 0x20]\n  5065: a3 = u64 [a0 + 0x18]\n  5068: a4 = u64 [a0 + 0x10]\n  5071: a5 = u64 [a0 + 0x8]\n  5074: a0 = a4 | a2\n  5077: a1 = a5 | a3\n  5080: a0 = a0 | a1\n  5083: jump @216 if a0 == 0\n      : @215 (gas: 1)\n  5086: jump @423\n      : @216 (gas: 3)\n  5089: a0 = s1 + 0x1400\n  5093: a1 = 0x40\n  5096: ra = 186, jump @2\n      : @217 [@dyn 93] (gas: 14)\n  5102: a2 = s1 + 0x1058\n  5106: t0 = u64 [a2 + 0x3c0]\n  5110: a1 = a2 + 0x300\n  5114: a5 = u64 [a1 + 0xb8]\n  5118: a4 = u64 [a1 + 0xb0]\n  5122: a0 = u64 [a1 + 0xa8]\n  5126: a3 = a4 | t0\n  5129: a1 = a0 | a5\n  5132: a1 = a1 | a3\n  5135: a1 = a1 >> 0x20\n  5138: a3 = a3 | a5\n  5141: a3 = a3 << 0x20\n  5144: a1 = a1 | a3\n  5147: jump @219 if a1 == 0\n      : @218 (gas: 1)\n  5150: jump @533\n      : @219 (gas: 11)\n  5153: u64 [a2 + 920] = 0\n  5157: u64 [a2 + 912] = 0\n  5161: u64 [a2 + 904] = 0\n  5165: a3 = 0x8c379a000000000\n  5175: a1 = s1 + 0x13e0\n  5179: u64 [a2 + 0x3a0] = a3\n  5183: u64 [s1 + 0xd8] = a0\n  5187: u64 [s1 + 0xd0] = a4\n  5191: u64 [s1 + 0xc0] = t0\n  5195: u64 [s1 + 0xc8] = a5\n  5199: ra = 188, jump @4\n      : @220 [@dyn 94] (gas: 1)\n  5205: t0 = 190, jump @992\n      : @221 [@dyn 95] (gas: 1)\n  5211: jump @223 if a0 != 0\n      : @222 (gas: 1)\n  5214: jump @533\n      : @223 (gas: 1)\n  5217: t0 = 192, jump @1033\n      : @224 [@dyn 96] (gas: 8)\n  5223: u64 [a2 + 896] = 0\n  5227: u64 [a2 + 888] = 0\n  5231: u64 [a2 + 872] = 0x20\n  5236: a1 = s1 + 0x13c0\n  5240: u64 [a2 + 880] = 0\n  5244: u64 [s1 + 0xc8] = a3\n  5248: u64 [s1 + 0xc0] = a4\n  5252: ra = 194, jump @4\n      : @225 [@dyn 97] (gas: 1)\n  5258: t0 = 196, jump @994\n      : @226 [@dyn 98] (gas: 1)\n  5264: jump @228 if a0 != 0\n      : @227 (gas: 1)\n  5267: jump @533\n      : @228 (gas: 1)\n  5270: t0 = 198, jump @1031\n      : @229 [@dyn 99] (gas: 6)\n  5276: u64 [a2 + 864] = 0\n  5280: u64 [a2 + 856] = 0\n  5284: u64 [a2 + 840] = 0x2a\n  5289: a1 = s1 + 0x13a0\n  5293: u64 [a2 + 848] = 0\n  5297: ra = 200, jump @4\n      : @230 [@dyn 100] (gas: 1)\n  5303: t0 = 202, jump @996\n      : @231 [@dyn 101] (gas: 1)\n  5309: jump @233 if a0 != 0\n      : @232 (gas: 1)\n  5312: jump @533\n      : @233 (gas: 14)\n  5315: i32 a0 = a1 + 0x44\n  5318: a1 = u64 [0x20108]\n  5323: u64 [s1 + 0xc0] = a2\n  5327: a5 = s1 + 0x1058\n  5331: a4 = a5 + 0x300\n  5335: u64 [a4 + 0x40] = a1\n  5338: a1 = u64 [0x20110]\n  5343: a2 = u64 [0x20140]\n  5348: a3 = u64 [0x20148]\n  5353: u64 [a4 + 0x38] = a1\n  5356: u64 [a4 + 0x30] = a2\n  5359: a1 = s1 + 0x1380\n  5363: u64 [a4 + 0x28] = a3\n  5366: ra = 204, jump @4\n      : @234 [@dyn 102] (gas: 1)\n  5372: t0 = 206, jump @995\n      : @235 [@dyn 103] (gas: 1)\n  5378: jump @237 if a0 != 0\n      : @236 (gas: 1)\n  5381: jump @533\n      : @237 (gas: 11)\n  5384: i32 a0 = a2 + 0x64\n  5387: a1 = u64 [0x20150]\n  5392: a3 = s1 + 0x1058\n  5396: u64 [a3 + 784] = 0\n  5400: u64 [a3 + 0x320] = a1\n  5404: a1 = 0x726f000000000000\n  5414: u64 [a3 + 0x318] = a1\n  5418: a1 = s1 + 0x1360\n  5422: u64 [a3 + 776] = 0\n  5426: ra = 0x216\n  5430: jump @4\n      : @238 (gas: 1)\n  5433: jump @240 if a0 == 1941178475\n      : @239 (gas: 1)\n  5440: jump @833\n      : @240 (gas: 9)\n  5443: u64 [a2 + 1248] = 0\n  5447: u64 [a2 + 1240] = 0\n  5451: u64 [a2 + 1232] = 0\n  5455: u64 [a2 + 1224] = 0\n  5459: a0 = s1 + 0x2000\n  5463: i32 a0 = a0 + 0x520\n  5467: ra = 0xd0\n  5471: ecalli 15 // 'value_transferred'\n  5473: fallthrough\n      : @241 [@dyn 104] (gas: 3)\n  5474: a3 = s1 + 0x2058\n  5478: a4 = a3 + 0x400\n  5482: t0 = 210, jump @1029\n      : @242 [@dyn 105] (gas: 1)\n  5488: jump @244 if a0 == 0\n      : @243 (gas: 1)\n  5491: jump @837\n      : @244 (gas: 3)\n  5494: a0 = u64 [s1 + 0xd8]\n  5498: a0 = i32 [a0]\n  5500: jump @246 if a0 >u 35\n      : @245 (gas: 1)\n  5504: jump @838\n      : @246 (gas: 6)\n  5507: a0 = s1 + 0x2000\n  5511: i32 a0 = a0 + 0x540\n  5515: a1 = 0x4\n  5518: ra = 0xd4\n  5522: ecalli 3 // 'call_data_load'\n  5524: fallthrough\n      : @247 [@dyn 106] (gas: 4)\n  5525: a4 = s1 + 0x2058\n  5529: a1 = u64 [a4 + 0x4f8]\n  5533: a0 = u64 [a4 + 0x500]\n  5537: t0 = 214, jump @1007\n      : @248 [@dyn 107] (gas: 1)\n  5543: jump @250 if a3 != 0\n      : @249 (gas: 1)\n  5546: jump @839\n      : @250 (gas: 13)\n  5549: a2 = u64 [a4 + 0x4f0]\n  5553: a3 = u64 [a4 + 0x4e8]\n  5557: a4 = s1 + 0x7ff\n  5561: a4 = a4 + 0x59\n  5564: a5 = a4 + 0x100\n  5568: u64 [a5 + 0x68] = a3\n  5571: u64 [a5 + 0x70] = a2\n  5574: u64 [a5 + 0x78] = a1\n  5577: a1 = s1 + 0x7ff\n  5581: a1 = a1 + 0x1c1\n  5585: u64 [a5 + 0x80] = a0\n  5589: a0 = 0\n  5591: ra = 216, jump @4\n      : @251 [@dyn 108] (gas: 3)\n  5597: a1 = s1 + 0x7ff\n  5601: a1 = a1 + 0x59\n  5604: t0 = 218, jump @1028\n      : @252 [@dyn 109] (gas: 4)\n  5610: a1 = s1 + 0x7ff\n  5614: a1 = a1 + 0x1a1\n  5618: u64 [a2 + 336] = 0\n  5622: ra = 220, jump @4\n      : @253 [@dyn 110] (gas: 6)\n  5628: a0 = sp + 0xffffffffffffffe0\n  5631: a0 = a0 & 0xffffffffffffffe0\n  5634: u64 [s1 + 0xb8] = a0\n  5638: sp = a0\n  5640: a1 = i32 [0x2023c]\n  5645: jump @255 if a1 >u 63\n      : @254 (gas: 4)\n  5649: a1 = 0x40\n  5652: u32 [0x2023c] = a1\n  5657: t0 = 0xde\n  5661: jump @1027\n      : @255 (gas: 1)\n  5664: t0 = 222, jump @1027\n      : @256 [@dyn 111] (gas: 26)\n  5670: a0 = 0x20250\n  5675: i32 a0 = a0 + 0\n  5677: i32 a2 = a2 + 0\n  5679: a1 = 0x40\n  5682: ecalli 8 // 'hash_keccak_256'\n  5684: a3 = u64 [s1 + 0xd8]\n  5688: a0 = u64 [a3 + 0x18]\n  5691: a1 = u64 [a3 + 0x10]\n  5694: a2 = u64 [a3 + 0x8]\n  5697: a3 = u64 [a3]\n  5699: a5 = reverse a0\n  5701: u64 [s1 + 0xc8] = a5\n  5705: a4 = reverse a1\n  5707: u64 [s1 + 0xd0] = a4\n  5711: a2 = reverse a2\n  5713: u64 [s1 + 0xc0] = a2\n  5717: a0 = reverse a3\n  5719: u64 [s1 + 0xd8] = a0\n  5723: a1 = u64 [s1 + 0xb8]\n  5727: u64 [a1 + 0x18] = a0\n  5730: u64 [a1 + 0x10] = a2\n  5733: u64 [a1 + 0x8] = a4\n  5736: u64 [a1] = a5\n  5738: a0 = s1 + 0x7ff\n  5742: a0 = a0 + 0x181\n  5746: ra = 224, jump @6\n      : @257 [@dyn 112] (gas: 33)\n  5752: a1 = s1 + 0x7ff\n  5756: a1 = a1 + 0x59\n  5759: a2 = a1 + 0x100\n  5763: a0 = u64 [a2 + 0x28]\n  5766: u64 [s1 + 0xb8] = a0\n  5770: a0 = u64 [a2 + 0x30]\n  5773: u64 [s1 + 0xb0] = a0\n  5777: a0 = u64 [a2 + 0x38]\n  5780: u64 [s1 + 0xa8] = a0\n  5784: a0 = u64 [a2 + 0x40]\n  5787: u64 [s1 + 0xa0] = a0\n  5791: a0 = u64 [s1 + 0xc8]\n  5795: a0 = a0 + 0x1\n  5798: a1 = a0 <u 0x1\n  5801: a2 = u64 [s1 + 0xd0]\n  5805: a1 = a1 + a2\n  5808: a2 = s1 + 0x2058\n  5812: a3 = a2 + 0x500\n  5816: u64 [a3 + 0x10] = a1\n  5819: a1 = a1 | a0\n  5822: u64 [a3 + 0x8] = a0\n  5825: a0 = a1 <u 0x1\n  5828: a1 = u64 [s1 + 0xc0]\n  5832: a0 = a0 + a1\n  5835: u64 [a3 + 0x18] = a0\n  5838: a0 = a0 <u a1\n  5841: a1 = u64 [s1 + 0xd8]\n  5845: a0 = a0 + a1\n  5848: u64 [a3 + 0x20] = a0\n  5851: a0 = s1 + 0x7ff\n  5855: a0 = a0 + 0x161\n  5859: a1 = s1 + 0x2560\n  5863: ra = 226, jump @6\n      : @258 [@dyn 113] (gas: 32)\n  5869: a4 = s1 + 0x7ff\n  5873: a4 = a4 + 0x59\n  5876: a0 = u64 [a4 + 0x108]\n  5880: u64 [s1 + 0x98] = a0\n  5884: a0 = u64 [a4 + 0x110]\n  5888: u64 [s1 + 0x90] = a0\n  5892: a1 = u64 [s1 + 0xc8]\n  5896: a0 = a1 + 0x2\n  5899: a1 = a0 <u a1\n  5902: a3 = u64 [s1 + 0xd0]\n  5906: a2 = a3 + a1\n  5909: a3 = a2 <u a3\n  5912: a3 = a1 if a1 == 0\n  5915: a1 = u64 [a4 + 0x118]\n  5919: u64 [s1 + 0xd0] = a1\n  5923: a1 = u64 [s1 + 0xc0]\n  5927: a3 = a3 + a1\n  5930: a1 = a3 <u a1\n  5933: a5 = u64 [s1 + 0xd8]\n  5937: a1 = a1 + a5\n  5940: a5 = u64 [a4 + 0x120]\n  5944: u64 [s1 + 0xc8] = a5\n  5948: a4 = s1 + 0x2058\n  5952: a5 = a4 + 0x500\n  5956: u64 [a5 + 0x40] = a1\n  5959: u64 [a5 + 0x38] = a3\n  5962: u64 [a5 + 0x30] = a2\n  5965: u64 [a5 + 0x28] = a0\n  5968: a0 = s1 + 0x7ff\n  5972: a0 = a0 + 0x141\n  5976: a1 = s1 + 0x2580\n  5980: ra = 228, jump @6\n      : @259 [@dyn 114] (gas: 8)\n  5986: a0 = s1 + 0x7ff\n  5990: a0 = a0 + 0x59\n  5993: a0 = u8 [a0 + 0xe8]\n  5997: u64 [s1 + 0xc0] = a0\n  6001: a0 = s1 + 0x7ff\n  6005: a0 = a0 + 0x121\n  6009: a1 = 0x40\n  6012: ra = 230, jump @2\n      : @260 [@dyn 115] (gas: 47)\n  6018: a0 = s1 + 0x7ff\n  6022: a0 = a0 + 0x59\n  6025: a3 = u64 [a0 + 0xe0]\n  6029: u64 [s1 + 0xd8] = a3\n  6033: a2 = u64 [a0 + 0xd8]\n  6037: u64 [s1 + 0x88] = a2\n  6041: a4 = u64 [a0 + 0xd0]\n  6045: u64 [s1 + 0x80] = a4\n  6049: a5 = u64 [a0 + 0xc8]\n  6053: u64 [s1 + 0x78] = a5\n  6056: a1 = u64 [s1 + 0xc0]\n  6060: u64 [a0 + 0x28] = a1\n  6063: a1 = u64 [s1 + 0xc8]\n  6067: u64 [a0 + 0x60] = a1\n  6070: a1 = u64 [s1 + 0xd0]\n  6074: u64 [a0 + 0x58] = a1\n  6077: a1 = u64 [s1 + 0x90]\n  6081: u64 [a0 + 0x50] = a1\n  6084: u64 [a0 + 64] = 0\n  6087: u64 [a0 + 56] = 0\n  6090: u64 [a0 + 48] = 0\n  6093: a1 = u64 [s1 + 0x98]\n  6097: u64 [a0 + 0x48] = a1\n  6100: a1 = u64 [s1 + 0xa0]\n  6104: u64 [a0 + 0x80] = a1\n  6108: a1 = u64 [s1 + 0xa8]\n  6112: u64 [a0 + 0x78] = a1\n  6115: a1 = u64 [s1 + 0xb0]\n  6119: u64 [a0 + 0x70] = a1\n  6122: a1 = u64 [s1 + 0xb8]\n  6126: u64 [a0 + 0x68] = a1\n  6129: u64 [a0 + 0xa0] = a3\n  6133: u64 [a0 + 0x98] = a2\n  6137: u64 [a0 + 0x90] = a4\n  6141: t0 = a0\n  6143: a0 = s1 + 0x7ff\n  6147: a0 = a0 + 0x101\n  6151: a1 = s1 + 0x7ff\n  6155: a1 = a1 + 0xe1\n  6159: a2 = s1 + 0x7ff\n  6163: a2 = a2 + 0xc1\n  6167: a3 = s1 + 0x7ff\n  6171: a3 = a3 + 0xa1\n  6175: a4 = s1 + 0x7ff\n  6179: a4 = a4 + 0x81\n  6183: u64 [t0 + 0x88] = a5\n  6187: ra = 232, jump @915\n      : @261 [@dyn 116] (gas: 12)\n  6193: a4 = u64 [s1 + 0x80]\n  6197: a2 = u64 [s1 + 0x78]\n  6200: a0 = u64 [s1 + 0xd8]\n  6204: a0 = a0 | a4\n  6207: a3 = u64 [s1 + 0x88]\n  6211: a1 = a2 | a3\n  6214: a1 = a1 | a0\n  6217: a1 = a1 >> 0x20\n  6220: a0 = a0 | a3\n  6223: a0 = a0 << 0x20\n  6226: a0 = a0 | a1\n  6229: jump @263 if a0 == 0\n      : @262 (gas: 1)\n  6232: jump @533\n      : @263 (gas: 9)\n  6235: t0 = a3\n  6237: a1 = s1 + 0x7ff\n  6241: a1 = a1 + 0x59\n  6244: a0 = u64 [a1 + 0xb0]\n  6248: a3 = u64 [a1 + 0xc0]\n  6252: u64 [s1 + 0xd0] = a3\n  6256: t1 = u64 [a1 + 0xa8]\n  6260: a3 = u64 [a1 + 0xb8]\n  6264: fallthrough\n      : @264 (gas: 26)\n  6265: t2 = a0 ^ a4\n  6268: a5 = a0 <u a4\n  6271: ra = t1 <u a2\n  6274: a5 = ra if t2 == 0\n  6277: a1 = a3 - t0\n  6280: t2 = a1 - a5\n  6283: a1 = a1 <u a5\n  6286: u64 [s1 + 0xc8] = a1\n  6290: a3 = a3 <u t0\n  6293: a5 = u64 [s1 + 0xd8]\n  6297: a1 = u64 [s1 + 0xd0]\n  6301: a5 = a1 - a5\n  6304: a5 = a5 - a3\n  6307: a1 = u64 [s1 + 0xc8]\n  6311: a5 = a5 - a1\n  6314: a0 = a0 - a4\n  6317: a0 = a0 - ra\n  6320: a1 = t1 - a2\n  6323: a0 = a0 | a5\n  6326: a3 = a1 | t2\n  6329: a3 = a3 | a0\n  6332: a0 = a0 | t2\n  6335: a3 = a3 >> 0x20\n  6338: a0 = a0 << 0x20\n  6341: a0 = a0 | a3\n  6344: jump @266 if a0 == 0\n      : @265 (gas: 1)\n  6347: jump @533\n      : @266 (gas: 3)\n  6350: a0 = a2\n  6352: u64 [s1 + 0xd8] = a1\n  6356: ra = 234, jump @16\n      : @267 [@dyn 117] (gas: 5)\n  6362: i32 a1 = a0 + 0\n  6364: a2 = i32 [s1 + 0xd8]\n  6368: a0 = 0\n  6370: ecalli 12 // 'seal_return'\n  6372: jump @381\n      : @268 (gas: 10)\n  6375: u64 [a3 + 384] = 0\n  6379: u64 [a3 + 376] = 0\n  6383: u64 [a3 + 368] = 0\n  6387: u64 [a3 + 360] = 0\n  6391: a0 = s1 + 0x3000\n  6395: i32 a0 = a0 + 0xfffffffffffff9c0\n  6399: ra = 0xec\n  6403: ecalli 15 // 'value_transferred'\n  6405: t0 = 0xee\n  6409: jump @1024\n      : @269 [@dyn 118] (gas: 1)\n  6412: t0 = 238, jump @1024\n      : @270 [@dyn 119] (gas: 8)\n  6418: a0 = u64 [a4 + 0x78]\n  6421: a1 = u64 [a4 + 0x80]\n  6425: a2 = u64 [a4 + 0x70]\n  6428: a3 = u64 [a4 + 0x68]\n  6431: a1 = a1 | a2\n  6434: a0 = a0 | a3\n  6437: a0 = a0 | a1\n  6440: jump @272 if a0 == 0\n      : @271 (gas: 1)\n  6443: jump @840\n      : @272 (gas: 3)\n  6446: a0 = u64 [s1 + 0xd8]\n  6450: a0 = i32 [a0]\n  6452: jump @274 if a0 >u 35\n      : @273 (gas: 1)\n  6456: jump @841\n      : @274 (gas: 24)\n  6459: a0 = sp + 0xffffffffffffffe0\n  6462: a0 = a0 & 0xffffffffffffffe0\n  6465: u64 [s1 + 0xd8] = a0\n  6469: sp = a0\n  6471: a0 = s1 + 0x3000\n  6475: i32 a0 = a0 + 0xfffffffffffff9e0\n  6479: a1 = 0x4\n  6482: ecalli 3 // 'call_data_load'\n  6484: a0 = s1 + 0x2858\n  6488: a5 = a0 + 0x100\n  6492: a1 = u64 [a5 + 0xa0]\n  6496: u64 [s1 + 0xd0] = a1\n  6500: a2 = u64 [a5 + 0x98]\n  6504: u64 [s1 + 0xc8] = a2\n  6508: a3 = u64 [a5 + 0x90]\n  6512: u64 [s1 + 0xc0] = a3\n  6516: a4 = u64 [a5 + 0x88]\n  6520: u64 [s1 + 0xb8] = a4\n  6524: a0 = u64 [s1 + 0xd8]\n  6528: u64 [a0 + 0x18] = a1\n  6531: u64 [a0 + 0x10] = a2\n  6534: u64 [a0 + 0x8] = a3\n  6537: u64 [a0] = a4\n  6539: ra = 240, jump @979\n      : @275 [@dyn 120] (gas: 8)\n  6545: a5 = u64 [s1 + 0xb8]\n  6549: a4 = u64 [s1 + 0xc0]\n  6553: a3 = u64 [s1 + 0xc8]\n  6557: a2 = u64 [s1 + 0xd0]\n  6561: a0 = a4 | a2\n  6564: a1 = a5 | a3\n  6567: a0 = a0 | a1\n  6570: jump @277 if a0 == 0\n      : @276 (gas: 1)\n  6573: jump @488\n      : @277 (gas: 3)\n  6576: a0 = s1 + 0x1a80\n  6580: a1 = 0x40\n  6583: ra = 242, jump @2\n      : @278 [@dyn 121] (gas: 14)\n  6589: a2 = s1 + 0x1858\n  6593: t0 = u64 [a2 + 0x240]\n  6597: a1 = a2 + 0x200\n  6601: a5 = u64 [a1 + 0x38]\n  6604: a4 = u64 [a1 + 0x30]\n  6607: a0 = u64 [a1 + 0x28]\n  6610: a3 = a4 | t0\n  6613: a1 = a0 | a5\n  6616: a1 = a1 | a3\n  6619: a1 = a1 >> 0x20\n  6622: a3 = a3 | a5\n  6625: a3 = a3 << 0x20\n  6628: a1 = a1 | a3\n  6631: jump @280 if a1 == 0\n      : @279 (gas: 1)\n  6634: jump @533\n      : @280 (gas: 11)\n  6637: u64 [a2 + 536] = 0\n  6641: u64 [a2 + 528] = 0\n  6645: u64 [a2 + 520] = 0\n  6649: a3 = 0x8c379a000000000\n  6659: a1 = s1 + 0x1a60\n  6663: u64 [a2 + 0x220] = a3\n  6667: u64 [s1 + 0xd8] = a0\n  6671: u64 [s1 + 0xd0] = a4\n  6675: u64 [s1 + 0xc0] = t0\n  6679: u64 [s1 + 0xc8] = a5\n  6683: ra = 244, jump @4\n      : @281 [@dyn 122] (gas: 1)\n  6689: t0 = 246, jump @992\n      : @282 [@dyn 123] (gas: 1)\n  6695: jump @284 if a0 != 0\n      : @283 (gas: 1)\n  6698: jump @533\n      : @284 (gas: 1)\n  6701: t0 = 248, jump @1032\n      : @285 [@dyn 124] (gas: 8)\n  6707: u64 [a2 + 512] = 0\n  6711: u64 [a2 + 504] = 0\n  6715: u64 [a2 + 488] = 0x20\n  6720: a1 = s1 + 0x1a40\n  6724: u64 [a2 + 496] = 0\n  6728: u64 [s1 + 0xc8] = a3\n  6732: u64 [s1 + 0xc0] = a4\n  6736: ra = 250, jump @4\n      : @286 [@dyn 125] (gas: 1)\n  6742: t0 = 252, jump @994\n      : @287 [@dyn 126] (gas: 1)\n  6748: jump @289 if a0 != 0\n      : @288 (gas: 1)\n  6751: jump @533\n      : @289 (gas: 1)\n  6754: t0 = 254, jump @1030\n      : @290 [@dyn 127] (gas: 6)\n  6760: u64 [a2 + 480] = 0\n  6764: u64 [a2 + 472] = 0\n  6768: u64 [a2 + 456] = 0x2b\n  6773: a1 = s1 + 0x1a20\n  6777: u64 [a2 + 464] = 0\n  6781: ra = 256, jump @4\n      : @291 [@dyn 128] (gas: 1)\n  6787: t0 = 258, jump @996\n      : @292 [@dyn 129] (gas: 1)\n  6793: jump @294 if a0 != 0\n      : @293 (gas: 1)\n  6796: jump @533\n      : @294 (gas: 14)\n  6799: i32 a0 = a1 + 0x44\n  6802: a1 = u64 [0x200a8]\n  6807: u64 [s1 + 0xc0] = a2\n  6811: a5 = s1 + 0x1858\n  6815: a4 = a5 + 0x100\n  6819: u64 [a4 + 0xc0] = a1\n  6823: a1 = u64 [0x200b0]\n  6828: a2 = u64 [0x200d0]\n  6833: a3 = u64 [0x200d8]\n  6838: u64 [a4 + 0xb8] = a1\n  6842: u64 [a4 + 0xb0] = a2\n  6846: a1 = s1 + 0x1a00\n  6850: u64 [a4 + 0xa8] = a3\n  6854: ra = 260, jump @4\n      : @295 [@dyn 130] (gas: 1)\n  6860: t0 = 262, jump @995\n      : @296 [@dyn 131] (gas: 1)\n  6866: jump @298 if a0 != 0\n      : @297 (gas: 1)\n  6869: jump @533\n      : @298 (gas: 11)\n  6872: i32 a0 = a2 + 0x64\n  6875: a1 = u64 [0x200e0]\n  6880: a3 = s1 + 0x1858\n  6884: u64 [a3 + 400] = 0\n  6888: u64 [a3 + 0x1a0] = a1\n  6892: a1 = 0x65726f0000000000\n  6902: u64 [a3 + 0x198] = a1\n  6906: a1 = s1 + 0x19e0\n  6910: u64 [a3 + 392] = 0\n  6914: ra = 0x216\n  6918: jump @4\n      : @299 (gas: 10)\n  6921: u64 [a3 + 320] = 0\n  6925: u64 [a3 + 312] = 0\n  6929: u64 [a3 + 304] = 0\n  6933: u64 [a3 + 296] = 0\n  6937: a0 = s1 + 0x3000\n  6941: i32 a0 = a0 + 0xfffffffffffff980\n  6945: ra = 0x108\n  6949: ecalli 15 // 'value_transferred'\n  6951: t0 = 0x10a\n  6955: jump @1024\n      : @300 [@dyn 132] (gas: 1)\n  6958: t0 = 266, jump @1024\n      : @301 [@dyn 133] (gas: 8)\n  6964: a0 = u64 [a4 + 0x38]\n  6967: a1 = u64 [a4 + 0x40]\n  6970: a2 = u64 [a4 + 0x30]\n  6973: a3 = u64 [a4 + 0x28]\n  6976: a1 = a1 | a2\n  6979: a0 = a0 | a3\n  6982: a0 = a0 | a1\n  6985: jump @303 if a0 == 0\n      : @302 (gas: 1)\n  6988: jump @842\n      : @303 (gas: 3)\n  6991: a0 = u64 [s1 + 0xd8]\n  6995: a0 = i32 [a0]\n  6997: jump @305 if a0 >u 3\n      : @304 (gas: 1)\n  7001: jump @843\n      : @305 (gas: 8)\n  7004: a1 = s1 + 0x2858\n  7008: u64 [a1 + 352] = 0\n  7012: u64 [a1 + 344] = 0\n  7016: u64 [a1 + 336] = 0\n  7020: u64 [a1 + 328] = 0x1\n  7025: a0 = s1 + 0x19c0\n  7029: a1 = s1 + 0x29a0\n  7033: ra = 268, jump @6\n      : @306 [@dyn 134] (gas: 3)\n  7039: t0 = 0x10e\n  7043: a1 = s1 + 0x1858\n  7047: fallthrough\n      : @307 [@dyn 135] (gas: 10)\n  7048: a2 = a1 + 0x100\n  7052: a0 = u64 [a2 + 0x78]\n  7055: u64 [s1 + 0xc8] = a0\n  7059: a0 = u64 [a2 + 0x70]\n  7062: u64 [s1 + 0xd8] = a0\n  7066: a0 = u64 [a2 + 0x68]\n  7069: u64 [s1 + 0xd0] = a0\n  7073: a0 = s1 + 0x19a0\n  7077: a1 = 0x40\n  7080: ra = 272, jump @2\n      : @308 [@dyn 136] (gas: 7)\n  7086: a3 = s1 + 0x1858\n  7090: a5 = a3 + 0x100\n  7094: a4 = u64 [a5 + 0x60]\n  7097: a1 = u64 [a5 + 0x58]\n  7100: a2 = u64 [a5 + 0x50]\n  7103: a0 = u64 [a5 + 0x48]\n  7106: t0 = 274, jump @1017\n      : @309 [@dyn 137] (gas: 1)\n  7112: jump @311 if a1 == 0\n      : @310 (gas: 1)\n  7115: jump @533\n      : @311 (gas: 14)\n  7118: a1 = u64 [s1 + 0xc8]\n  7122: a1 = a1 << 0x20\n  7125: a2 = a1 >> 0x20\n  7128: u64 [a3 + 320] = 0\n  7132: a1 = u64 [s1 + 0xd0]\n  7136: a4 = a3 + 0x100\n  7140: u64 [a4 + 0x28] = a1\n  7143: a1 = u64 [s1 + 0xd8]\n  7147: u64 [a4 + 0x30] = a1\n  7150: a1 = s1 + 0x1980\n  7154: u64 [a4 + 0x38] = a2\n  7157: u64 [s1 + 0xd8] = a0\n  7161: ra = 0x154\n  7165: jump @4\n      : @312 (gas: 8)\n  7168: u64 [a2 + 1376] = 0\n  7172: u64 [a2 + 1368] = 0\n  7176: u64 [a2 + 1360] = 0\n  7180: u64 [a2 + 1352] = 0\n  7184: a0 = s1 + 0x2000\n  7188: i32 a0 = a0 + 0x5a0\n  7192: ecalli 15 // 'value_transferred'\n  7194: fallthrough\n      : @313 (gas: 10)\n  7195: a3 = s1 + 0x2058\n  7199: a4 = a3 + 0x500\n  7203: a0 = u64 [a4 + 0x58]\n  7206: a1 = u64 [a4 + 0x60]\n  7209: a2 = u64 [a4 + 0x50]\n  7212: a3 = u64 [a4 + 0x48]\n  7215: a1 = a1 | a2\n  7218: a0 = a0 | a3\n  7221: a0 = a0 | a1\n  7224: jump @315 if a0 == 0\n      : @314 (gas: 1)\n  7227: jump @844\n      : @315 (gas: 3)\n  7230: a0 = u64 [s1 + 0xd8]\n  7234: a0 = i32 [a0]\n  7236: jump @317 if a0 >u 35\n      : @316 (gas: 1)\n  7240: jump @845\n      : @317 (gas: 22)\n  7243: a0 = s1 + 0x2000\n  7247: i32 a0 = a0 + 0x5c0\n  7251: a1 = 0x4\n  7254: ecalli 3 // 'call_data_load'\n  7256: a0 = s1 + 0x2058\n  7260: a2 = a0 + 0x500\n  7264: a1 = u64 [a2 + 0x80]\n  7268: u64 [s1 + 0x58] = a1\n  7271: a1 = u64 [a2 + 0x78]\n  7274: u64 [s1 + 0x50] = a1\n  7277: a1 = u64 [a2 + 0x70]\n  7280: u64 [s1 + 0x48] = a1\n  7283: a0 = u64 [a2 + 0x68]\n  7286: u64 [s1 + 0x40] = a0\n  7289: a0 = 0x30250\n  7294: u64 [s1 + 0x60] = a0\n  7297: i32 a0 = a0 + 0\n  7299: u64 [s1 + 0x38] = a0\n  7302: ra = 0x114\n  7306: ecalli 5 // 'caller'\n  7308: t0 = 0x116\n  7312: jump @998\n      : @318 [@dyn 138] (gas: 1)\n  7315: t0 = 278, jump @998\n      : @319 [@dyn 139] (gas: 8)\n  7321: u64 [a2 + 576] = 0\n  7325: a4 = a2 + 0x200\n  7329: u64 [a4 + 0x38] = a1\n  7332: u64 [a4 + 0x30] = a0\n  7335: a1 = s1 + 0x1280\n  7339: u64 [a4 + 0x28] = a3\n  7342: a0 = 0\n  7344: ra = 280, jump @4\n      : @320 [@dyn 140] (gas: 9)\n  7350: a1 = s1 + 0x1058\n  7354: u64 [a1 + 544] = 0\n  7358: u64 [a1 + 536] = 0\n  7362: u64 [a1 + 520] = 0x5\n  7367: a2 = a1\n  7369: a0 = 0x20\n  7372: a1 = s1 + 0x1260\n  7376: u64 [a2 + 528] = 0\n  7380: ra = 282, jump @4\n      : @321 [@dyn 141] (gas: 8)\n  7386: a0 = sp + 0xffffffffffffffe0\n  7389: a0 = a0 & 0xffffffffffffffe0\n  7392: u64 [s1 + 0xd0] = a0\n  7396: sp = a0\n  7398: a2 = 0x2023c\n  7403: a0 = i32 [0x2023c]\n  7408: a1 = 0x3f\n  7411: jump @323 if a1 <u a0\n      : @322 (gas: 4)\n  7414: u32 [0x2023c] = 0x40\n  7420: u64 [s1 + 0x28] = a2\n  7423: t0 = 0x11c\n  7427: jump @1027\n      : @323 (gas: 2)\n  7430: u64 [s1 + 0x28] = a2\n  7433: t0 = 284, jump @1027\n      : @324 [@dyn 142] (gas: 9)\n  7439: a0 = 0x20250\n  7444: i32 a0 = a0 + 0\n  7446: i32 a2 = a2 + 0\n  7448: a1 = 0x40\n  7451: u64 [s1 + 0x30] = a0\n  7454: ra = 0x11e\n  7458: ecalli 8 // 'hash_keccak_256'\n  7460: t0 = 0x120\n  7464: jump @1006\n      : @325 [@dyn 143] (gas: 1)\n  7467: t0 = 288, jump @1006\n      : @326 [@dyn 144] (gas: 3)\n  7473: a0 = s1 + 0x1240\n  7477: a1 = 0x40\n  7480: ra = 290, jump @2\n      : @327 [@dyn 145] (gas: 16)\n  7486: a1 = s1 + 0x1058\n  7490: a0 = u64 [a1 + 0x200]\n  7494: u64 [s1 + 0xc0] = a0\n  7498: a5 = a1 + 0x100\n  7502: a2 = u64 [a5 + 0xf8]\n  7506: u64 [s1 + 0xb8] = a2\n  7510: a4 = u64 [a5 + 0xf0]\n  7514: u64 [s1 + 0xc8] = a4\n  7518: a3 = u64 [a5 + 0xe8]\n  7522: u64 [s1 + 0xd8] = a3\n  7526: u64 [a5 + 0xe0] = a0\n  7530: u64 [a5 + 0xd8] = a2\n  7534: u64 [a5 + 0xd0] = a4\n  7538: a0 = s1 + 0x1220\n  7542: u64 [a5 + 0xc8] = a3\n  7546: ra = 292, jump @923\n      : @328 [@dyn 146] (gas: 3)\n  7552: a0 = s1 + 0x1200\n  7556: a1 = u64 [s1 + 0xd0]\n  7560: ra = 294, jump @6\n      : @329 [@dyn 147] (gas: 1)\n  7566: t0 = 296, jump @1011\n      : @330 [@dyn 148] (gas: 1)\n  7572: jump @332 if a0 == 0\n      : @331 (gas: 1)\n  7575: jump @533\n      : @332 (gas: 13)\n  7578: a4 = s1 + 0x1058\n  7582: a5 = a4 + 0x100\n  7586: a0 = u64 [a5 + 0xc0]\n  7590: a1 = u64 [a5 + 0xb8]\n  7594: a2 = u64 [a5 + 0xb0]\n  7598: a3 = u64 [a5 + 0xa8]\n  7602: u64 [a5 + 0x88] = a3\n  7606: u64 [a5 + 0x90] = a2\n  7610: u64 [a5 + 0x98] = a1\n  7614: a1 = s1 + 0x11e0\n  7618: u64 [a5 + 0xa0] = a0\n  7622: a0 = u64 [s1 + 0xd8]\n  7626: ra = 298, jump @4\n      : @333 [@dyn 149] (gas: 1)\n  7632: t0 = 300, jump @1012\n      : @334 [@dyn 150] (gas: 9)\n  7638: a4 = s1 + 0x2058\n  7642: a5 = a4 + 0x500\n  7646: u64 [a5 + 0x90] = a1\n  7650: u64 [a5 + 0x88] = a0\n  7654: u64 [a5 + 0x98] = a2\n  7658: u64 [a5 + 0xa0] = a3\n  7662: a0 = s1 + 0x11c0\n  7666: a1 = s1 + 0x25e0\n  7670: ra = 302, jump @6\n      : @335 [@dyn 151] (gas: 1)\n  7676: t0 = 304, jump @1003\n      : @336 [@dyn 152] (gas: 1)\n  7682: jump @338 if a0 != 0\n      : @337 (gas: 1)\n  7685: jump @533\n      : @338 (gas: 16)\n  7688: a5 = s1 + 0x1058\n  7692: u64 [s1 + 0xd0] = a2\n  7696: t0 = u64 [a5 + 0x180]\n  7700: a2 = a5 + 0x100\n  7704: a1 = u64 [a2 + 0x78]\n  7707: u64 [s1 + 0xc0] = a3\n  7711: a3 = u64 [a2 + 0x70]\n  7714: a4 = u64 [a2 + 0x68]\n  7717: a0 = u64 [s1 + 0xd8]\n  7721: i32 a0 = a0 + 0x20\n  7724: u64 [a2 + 0x48] = a4\n  7727: u64 [a2 + 0x50] = a3\n  7730: u64 [a2 + 0x58] = a1\n  7733: a1 = s1 + 0x11a0\n  7737: u64 [a5 + 0x160] = t0\n  7741: ra = 306, jump @4\n      : @339 [@dyn 153] (gas: 1)\n  7747: t0 = 308, jump @1009\n      : @340 [@dyn 154] (gas: 9)\n  7753: a4 = s1 + 0x2058\n  7757: a5 = a4 + 0x500\n  7761: u64 [a5 + 0xb0] = a2\n  7765: u64 [a5 + 0xa8] = a0\n  7769: u64 [a5 + 0xb8] = a3\n  7773: u64 [a5 + 0xc0] = a1\n  7777: a0 = s1 + 0x1180\n  7781: a1 = s1 + 0x2600\n  7785: ra = 310, jump @6\n      : @341 [@dyn 155] (gas: 1)\n  7791: t0 = 312, jump @1019\n      : @342 [@dyn 156] (gas: 1)\n  7797: jump @344 if a0 != 0\n      : @343 (gas: 1)\n  7800: jump @533\n      : @344 (gas: 13)\n  7803: a2 = s1 + 0x1058\n  7807: a0 = u64 [a2 + 0x128]\n  7811: a0 = a0 & 0xff\n  7815: u64 [s1 + 0xd0] = a0\n  7819: a1 = a0 >u 0\n  7821: a0 = u64 [s1 + 0xd8]\n  7825: i32 a0 = a0 + 0x40\n  7828: u64 [a2 + 288] = 0\n  7832: u64 [a2 + 280] = 0\n  7836: u64 [a2 + 0x108] = a1\n  7840: a1 = s1 + 0x1160\n  7844: u64 [a2 + 272] = 0\n  7848: ra = 314, jump @4\n      : @345 [@dyn 157] (gas: 2)\n  7854: a0 = u64 [s1 + 0xd0]\n  7858: jump @347 if a0 != 0\n      : @346 (gas: 1)\n  7861: jump @593\n      : @347 (gas: 4)\n  7864: a0 = s1 + 0x7ff\n  7868: a0 = a0 + 0x281\n  7872: a1 = 0x40\n  7875: ra = 316, jump @2\n      : @348 [@dyn 158] (gas: 15)\n  7881: a2 = s1 + 0x7ff\n  7885: a2 = a2 + 0x59\n  7888: t0 = u64 [a2 + 0x240]\n  7892: a1 = a2 + 0x200\n  7896: a5 = u64 [a1 + 0x38]\n  7899: a4 = u64 [a1 + 0x30]\n  7902: a0 = u64 [a1 + 0x28]\n  7905: a3 = a4 | t0\n  7908: a1 = a0 | a5\n  7911: a1 = a1 | a3\n  7914: a1 = a1 >> 0x20\n  7917: a3 = a3 | a5\n  7920: a3 = a3 << 0x20\n  7923: a1 = a1 | a3\n  7926: jump @350 if a1 == 0\n      : @349 (gas: 1)\n  7929: jump @533\n      : @350 (gas: 12)\n  7932: u64 [a2 + 536] = 0\n  7936: u64 [a2 + 528] = 0\n  7940: u64 [a2 + 520] = 0\n  7944: a3 = 0x8c379a000000000\n  7954: a1 = s1 + 0x7ff\n  7958: a1 = a1 + 0x261\n  7962: u64 [a2 + 0x220] = a3\n  7966: u64 [s1 + 0xd8] = a0\n  7970: u64 [s1 + 0xd0] = a4\n  7974: u64 [s1 + 0xc0] = t0\n  7978: u64 [s1 + 0xc8] = a5\n  7982: ra = 318, jump @4\n      : @351 [@dyn 159] (gas: 1)\n  7988: t0 = 320, jump @992\n      : @352 [@dyn 160] (gas: 1)\n  7994: jump @354 if a0 != 0\n      : @353 (gas: 1)\n  7997: jump @533\n      : @354 (gas: 12)\n  8000: i32 a0 = a1 + 0x4\n  8003: a2 = s1 + 0x7ff\n  8007: a2 = a2 + 0x59\n  8010: u64 [a2 + 512] = 0\n  8014: u64 [a2 + 504] = 0\n  8018: u64 [a2 + 488] = 0x20\n  8023: a1 = s1 + 0x7ff\n  8027: a1 = a1 + 0x241\n  8031: u64 [a2 + 496] = 0\n  8035: u64 [s1 + 0xc8] = a3\n  8039: u64 [s1 + 0xc0] = a4\n  8043: ra = 322, jump @4\n      : @355 [@dyn 161] (gas: 1)\n  8049: t0 = 324, jump @994\n      : @356 [@dyn 162] (gas: 1)\n  8055: jump @358 if a0 != 0\n      : @357 (gas: 1)\n  8058: jump @533\n      : @358 (gas: 10)\n  8061: i32 a0 = a1 + 0x24\n  8064: a2 = s1 + 0x7ff\n  8068: a2 = a2 + 0x59\n  8071: u64 [a2 + 480] = 0\n  8075: u64 [a2 + 472] = 0\n  8079: u64 [a2 + 456] = 0x22\n  8084: a1 = s1 + 0x7ff\n  8088: a1 = a1 + 0x221\n  8092: u64 [a2 + 464] = 0\n  8096: ra = 326, jump @4\n      : @359 [@dyn 163] (gas: 1)\n  8102: t0 = 328, jump @996\n      : @360 [@dyn 164] (gas: 1)\n  8108: jump @362 if a0 != 0\n      : @361 (gas: 1)\n  8111: jump @533\n      : @362 (gas: 16)\n  8114: i32 a0 = a1 + 0x44\n  8117: a1 = u64 [0x201b8]\n  8122: u64 [s1 + 0xc0] = a2\n  8126: a5 = s1 + 0x7ff\n  8130: a5 = a5 + 0x59\n  8133: a4 = a5 + 0x100\n  8137: u64 [a4 + 0xc0] = a1\n  8141: a1 = u64 [0x201c0]\n  8146: a2 = u64 [0x201c8]\n  8151: a3 = u64 [0x201d0]\n  8156: u64 [a4 + 0xb8] = a1\n  8160: u64 [a4 + 0xb0] = a2\n  8164: a1 = s1 + 0x7ff\n  8168: a1 = a1 + 0x201\n  8172: u64 [a4 + 0xa8] = a3\n  8176: ra = 330, jump @4\n      : @363 [@dyn 165] (gas: 1)\n  8182: t0 = 332, jump @995\n      : @364 [@dyn 166] (gas: 1)\n  8188: jump @366 if a0 != 0\n      : @365 (gas: 1)\n  8191: jump @533\n      : @366 (gas: 12)\n  8194: i32 a0 = a2 + 0x64\n  8197: a3 = s1 + 0x7ff\n  8201: a3 = a3 + 0x59\n  8204: u64 [a3 + 408] = 0\n  8208: u64 [a3 + 400] = 0\n  8212: a1 = 0x7374000000000000\n  8222: u64 [a3 + 0x1a0] = a1\n  8226: a1 = s1 + 0x7ff\n  8230: a1 = a1 + 0x1e1\n  8234: u64 [a3 + 392] = 0\n  8238: ra = 0x216\n  8242: jump @4\n      : @367 (gas: 8)\n  8245: u64 [a2 + 1984] = 0\n  8249: u64 [a2 + 1976] = 0\n  8253: u64 [a2 + 1968] = 0\n  8257: u64 [a2 + 1960] = 0\n  8261: a0 = s1 + 0x3000\n  8265: i32 a0 = a0 + 0xfffffffffffff800\n  8269: ecalli 15 // 'value_transferred'\n  8271: fallthrough\n      : @368 (gas: 11)\n  8272: a3 = s1 + 0x2058\n  8276: a5 = a3 + 0x700\n  8280: a0 = u64 [a5 + 0xb8]\n  8284: a1 = u64 [a5 + 0xc0]\n  8288: a2 = u64 [a5 + 0xb0]\n  8292: a4 = a3\n  8294: a3 = u64 [a5 + 0xa8]\n  8298: a1 = a1 | a2\n  8301: a0 = a0 | a3\n  8304: a0 = a0 | a1\n  8307: jump @370 if a0 == 0\n      : @369 (gas: 1)\n  8310: jump @846\n      : @370 (gas: 3)\n  8313: a0 = u64 [s1 + 0xd8]\n  8317: a0 = i32 [a0]\n  8319: jump @372 if a0 >u 3\n      : @371 (gas: 1)\n  8323: jump @847\n      : @372 (gas: 7)\n  8326: u64 [a4 + 2016] = 0\n  8330: u64 [a4 + 2008] = 0\n  8334: u64 [a4 + 2000] = 0\n  8338: u64 [a4 + 1992] = 0x2\n  8343: a0 = s1 + 0x1340\n  8347: a1 = s1 + 0x2820\n  8351: ra = 334, jump @6\n      : @373 [@dyn 167] (gas: 11)\n  8357: a1 = s1 + 0x1058\n  8361: a2 = a1 + 0x200\n  8365: a0 = u64 [a2 + 0xf8]\n  8369: u64 [s1 + 0xc8] = a0\n  8373: a0 = u64 [a2 + 0xf0]\n  8377: u64 [s1 + 0xd8] = a0\n  8381: a0 = u64 [a2 + 0xe8]\n  8385: u64 [s1 + 0xd0] = a0\n  8389: a0 = s1 + 0x1320\n  8393: a1 = 0x40\n  8396: ra = 336, jump @2\n      : @374 [@dyn 168] (gas: 7)\n  8402: a3 = s1 + 0x1058\n  8406: a5 = a3 + 0x200\n  8410: a4 = u64 [a5 + 0xe0]\n  8414: a1 = u64 [a5 + 0xd8]\n  8418: a2 = u64 [a5 + 0xd0]\n  8422: a0 = u64 [a5 + 0xc8]\n  8426: t0 = 338, jump @1017\n      : @375 [@dyn 169] (gas: 1)\n  8432: jump @377 if a1 == 0\n      : @376 (gas: 1)\n  8435: jump @533\n      : @377 (gas: 13)\n  8438: a1 = u64 [s1 + 0xc8]\n  8442: a1 = a1 << 0x20\n  8445: a2 = a1 >> 0x20\n  8448: u64 [a3 + 704] = 0\n  8452: a1 = u64 [s1 + 0xd0]\n  8456: a4 = a3 + 0x200\n  8460: u64 [a4 + 0xa8] = a1\n  8464: a1 = u64 [s1 + 0xd8]\n  8468: u64 [a4 + 0xb0] = a1\n  8472: a1 = s1 + 0x1300\n  8476: u64 [a4 + 0xb8] = a2\n  8480: u64 [s1 + 0xd8] = a0\n  8484: ra = 340, jump @4\n      : @378 [@dyn 170] (gas: 3)\n  8490: a1 = 0x20\n  8493: a0 = u64 [s1 + 0xd8]\n  8497: ra = 342, jump @16\n      : @379 [@dyn 171] (gas: 5)\n  8503: i32 a1 = a0 + 0\n  8505: a2 = 0x20\n  8508: a0 = 0\n  8510: ecalli 12 // 'seal_return'\n  8512: jump @381\n      : @380 (gas: 4)\n  8514: a2 = 0x20\n  8517: a0 = 0\n  8519: ecalli 12 // 'seal_return'\n  8521: fallthrough\n      : @381 (gas: 13)\n  8522: u64 [s1 + 0xb0] = a5\n  8526: u64 [s1 + 0xb8] = a4\n  8530: u64 [s1 + 0xc0] = a3\n  8534: u64 [s1 + 0xc8] = a2\n  8538: a0 = 0x30250\n  8543: u64 [s1 + 0xd8] = a0\n  8547: i32 a0 = a0 + 0\n  8549: u64 [s1 + 0xa8] = a0\n  8553: ra = 0x158\n  8557: ecalli 5 // 'caller'\n  8559: a2 = u64 [s1 + 0xd8]\n  8563: t0 = 0x15a\n  8567: jump @999\n      : @382 [@dyn 172] (gas: 2)\n  8570: a2 = u64 [s1 + 0xd8]\n  8574: t0 = 346, jump @999\n      : @383 [@dyn 173] (gas: 8)\n  8580: u64 [a2 + 1824] = 0\n  8584: a4 = a2 + 0x700\n  8588: u64 [a4 + 0x18] = a1\n  8591: u64 [a4 + 0x10] = a0\n  8594: a1 = s1 + 0x1f60\n  8598: u64 [a4 + 0x8] = a3\n  8601: a0 = 0\n  8603: ra = 348, jump @4\n      : @384 [@dyn 174] (gas: 3)\n  8609: t0 = 0x15e\n  8613: a1 = s1 + 0x1858\n  8617: fallthrough\n      : @385 [@dyn 175] (gas: 8)\n  8618: u64 [a1 + 1792] = 0\n  8622: u64 [a1 + 1784] = 0\n  8626: u64 [a1 + 1768] = 0x4\n  8631: a2 = a1\n  8633: a0 = 0x20\n  8636: a1 = s1 + 0x1f40\n  8640: u64 [a2 + 1776] = 0\n  8644: ra = 352, jump @4\n      : @386 [@dyn 176] (gas: 6)\n  8650: a0 = sp + 0xffffffffffffffe0\n  8653: a0 = a0 & 0xffffffffffffffe0\n  8656: u64 [s1 + 0xd0] = a0\n  8660: sp = a0\n  8662: a1 = i32 [0x2023c]\n  8667: jump @388 if a1 >u 63\n      : @387 (gas: 2)\n  8671: u32 [0x2023c] = 0x40\n  8677: fallthrough\n      : @388 (gas: 26)\n  8678: a0 = sp + 0xffffffffffffffe0\n  8681: a2 = a0 & 0xffffffffffffffe0\n  8684: u64 [s1 + 0xa0] = a2\n  8688: sp = a2\n  8690: a0 = 0x20250\n  8695: i32 a0 = a0 + 0\n  8697: i32 a2 = a2 + 0\n  8699: a1 = 0x40\n  8702: u64 [s1 + 0x68] = a0\n  8705: ecalli 8 // 'hash_keccak_256'\n  8707: a3 = u64 [s1 + 0xa0]\n  8711: a0 = u64 [a3 + 0x18]\n  8714: a1 = u64 [a3 + 0x10]\n  8717: a2 = u64 [a3 + 0x8]\n  8720: a3 = u64 [a3]\n  8722: a0 = reverse a0\n  8724: a4 = reverse a1\n  8726: a2 = reverse a2\n  8728: a3 = reverse a3\n  8730: a1 = u64 [s1 + 0xd0]\n  8734: u64 [a1 + 0x18] = a3\n  8737: u64 [a1 + 0x10] = a2\n  8740: u64 [a1 + 0x8] = a4\n  8743: u64 [a1] = a0\n  8745: a0 = s1 + 0x1f20\n  8749: ra = 354, jump @6\n      : @389 [@dyn 177] (gas: 22)\n  8755: a5 = s1 + 0x1858\n  8759: a3 = u64 [a5 + 0x6c8]\n  8763: a0 = u64 [a5 + 0x6d0]\n  8767: a1 = u64 [a5 + 0x6d8]\n  8771: a2 = u64 [a5 + 0x6e0]\n  8775: a4 = u64 [s1 + 0xc8]\n  8779: u64 [a5 + 0x680] = a4\n  8783: a4 = u64 [s1 + 0xc0]\n  8787: u64 [a5 + 0x678] = a4\n  8791: a4 = u64 [s1 + 0xb8]\n  8795: u64 [a5 + 0x670] = a4\n  8799: a4 = u64 [s1 + 0xb0]\n  8803: u64 [a5 + 0x668] = a4\n  8807: a4 = a5 + 0x600\n  8811: u64 [a4 + 0xa0] = a2\n  8815: u64 [a4 + 0x98] = a1\n  8819: u64 [a4 + 0x90] = a0\n  8823: a0 = s1 + 0x1f00\n  8827: a1 = s1 + 0x1ee0\n  8831: a2 = s1 + 0x1ec0\n  8835: u64 [a4 + 0x88] = a3\n  8839: ra = 356, jump @963\n      : @390 [@dyn 178] (gas: 15)\n  8845: a3 = s1 + 0x1858\n  8849: a4 = a3 + 0x600\n  8853: a0 = u64 [a4 + 0xc0]\n  8857: a1 = u64 [a4 + 0xb8]\n  8861: a2 = u64 [a4 + 0xb0]\n  8865: a3 = u64 [a4 + 0xa8]\n  8869: a4 = s1 + 0x2858\n  8873: a5 = a4 + 0x200\n  8877: u64 [a5 + 0x20] = a0\n  8880: u64 [a5 + 0x18] = a1\n  8883: u64 [a5 + 0x10] = a2\n  8886: u64 [a5 + 0x8] = a3\n  8889: a1 = s1 + 0x2a60\n  8893: a0 = u64 [s1 + 0xd0]\n  8897: ra = 358, jump @7\n      : @391 [@dyn 179] (gas: 9)\n  8903: a0 = s1 + 0x2858\n  8907: u64 [a0 + 576] = 0\n  8911: u64 [a0 + 568] = 0\n  8915: u64 [a0 + 560] = 0\n  8919: a1 = a0\n  8921: u64 [a1 + 552] = 0x1\n  8926: a0 = s1 + 0x1ea0\n  8930: a1 = s1 + 0x2a80\n  8934: ra = 360, jump @6\n      : @392 [@dyn 180] (gas: 3)\n  8940: t0 = 0x16a\n  8944: a1 = s1 + 0x1858\n  8948: fallthrough\n      : @393 [@dyn 181] (gas: 10)\n  8949: a2 = a1 + 0x600\n  8953: a0 = u64 [a2 + 0x58]\n  8956: u64 [s1 + 0x80] = a0\n  8960: a0 = u64 [a2 + 0x50]\n  8963: u64 [s1 + 0x78] = a0\n  8966: a0 = u64 [a2 + 0x48]\n  8969: u64 [s1 + 0x88] = a0\n  8973: a0 = s1 + 0x1e80\n  8977: a1 = 0x40\n  8980: ra = 364, jump @2\n      : @394 [@dyn 182] (gas: 14)\n  8986: a2 = s1 + 0x1858\n  8990: t0 = u64 [a2 + 0x640]\n  8994: a1 = a2 + 0x600\n  8998: a5 = u64 [a1 + 0x38]\n  9001: a4 = u64 [a1 + 0x30]\n  9004: a0 = u64 [a1 + 0x28]\n  9007: a3 = a4 | t0\n  9010: a1 = a0 | a5\n  9013: a1 = a1 | a3\n  9016: a1 = a1 >> 0x20\n  9019: a3 = a3 | a5\n  9022: a3 = a3 << 0x20\n  9025: a1 = a1 | a3\n  9028: jump @396 if a1 == 0\n      : @395 (gas: 1)\n  9031: jump @533\n      : @396 (gas: 11)\n  9034: u64 [a2 + 1560] = 0\n  9038: u64 [a2 + 1552] = 0\n  9042: u64 [a2 + 1544] = 0\n  9046: a3 = 0x23b872dd00000000\n  9056: a1 = s1 + 0x1e60\n  9060: u64 [a2 + 0x620] = a3\n  9064: u64 [s1 + 0xd0] = a0\n  9068: u64 [s1 + 0xa0] = a4\n  9072: u64 [s1 + 0x98] = a5\n  9076: u64 [s1 + 0x90] = t0\n  9080: ra = 366, jump @4\n      : @397 [@dyn 183] (gas: 6)\n  9086: a0 = u64 [s1 + 0xa8]\n  9090: ra = 0x170\n  9094: ecalli 0 // 'address'\n  9095: a2 = u64 [s1 + 0xd8]\n  9099: t0 = 0x172\n  9103: jump @1010\n      : @398 [@dyn 184] (gas: 2)\n  9106: a2 = u64 [s1 + 0xd8]\n  9110: t0 = 370, jump @1010\n      : @399 [@dyn 185] (gas: 14)\n  9116: u64 [s1 + 0x70] = a1\n  9119: a0 = a0 >> 0x20\n  9122: a1 = reverse a2\n  9124: a2 = a1 << 0x20\n  9127: a0 = a0 | a2\n  9130: u64 [s1 + 0x60] = a0\n  9133: a1 = a1 >> 0x20\n  9136: u64 [s1 + 0x58] = a1\n  9139: a0 = u64 [s1 + 0xa8]\n  9143: ra = 0x174\n  9147: ecalli 5 // 'caller'\n  9149: a2 = u64 [s1 + 0xd8]\n  9153: t0 = 0x176\n  9157: jump @997\n      : @400 [@dyn 186] (gas: 2)\n  9160: a2 = u64 [s1 + 0xd8]\n  9164: t0 = 374, jump @997\n      : @401 [@dyn 187] (gas: 50)\n  9170: t0 = a1 | a0\n  9173: a3 = a3 >> 0x20\n  9176: a2 = reverse a2\n  9178: a1 = a2 << 0x20\n  9181: t1 = a1 | a3\n  9184: t2 = a2 >> 0x20\n  9187: a0 = u64 [s1 + 0xd0]\n  9191: a3 = a0 + 0x4\n  9194: a5 = a3 <u a0\n  9197: a0 = u64 [s1 + 0xa0]\n  9201: a4 = a0 + a5\n  9204: a0 = a4 <u a0\n  9207: a0 = a5 if a5 == 0\n  9210: a1 = u64 [s1 + 0x98]\n  9214: a0 = a0 + a1\n  9217: a5 = a0 <u a1\n  9220: a1 = u64 [s1 + 0x90]\n  9224: a5 = a5 + a1\n  9227: a1 = s1 + 0x1858\n  9231: a2 = u64 [s1 + 0x58]\n  9234: u64 [a1 + 0x598] = a2\n  9238: a2 = u64 [s1 + 0x60]\n  9241: u64 [a1 + 0x590] = a2\n  9245: a2 = u64 [s1 + 0x70]\n  9248: u64 [a1 + 0x588] = a2\n  9252: a2 = a1 + 0x500\n  9256: u64 [a2 + 0xe0] = a5\n  9260: u64 [a2 + 0xd8] = a0\n  9264: a0 = u64 [s1 + 0xc8]\n  9268: u64 [a2 + 0x80] = a0\n  9272: a0 = u64 [s1 + 0xc0]\n  9276: u64 [a2 + 0x78] = a0\n  9279: a0 = u64 [s1 + 0xb8]\n  9283: u64 [a2 + 0x70] = a0\n  9286: a0 = u64 [s1 + 0xb0]\n  9290: u64 [a2 + 0x68] = a0\n  9293: u64 [a1 + 1440] = 0\n  9297: u64 [a2 + 0xd0] = a4\n  9301: u64 [a2 + 0xc8] = a3\n  9305: u64 [a1 + 0x5b8] = t2\n  9309: u64 [a1 + 0x5b0] = t1\n  9313: u64 [a1 + 0x5a8] = t0\n  9317: a5 = a1\n  9319: a0 = s1 + 0x1e40\n  9323: a1 = s1 + 0x1e20\n  9327: a2 = s1 + 0x1e00\n  9331: a3 = s1 + 0x1de0\n  9335: a4 = s1 + 0x1dc0\n  9339: u64 [a5 + 1472] = 0\n  9343: ra = 376, jump @971\n      : @402 [@dyn 188] (gas: 17)\n  9349: a1 = s1 + 0x1858\n  9353: a0 = u64 [a1 + 0x5f0]\n  9357: t0 = u64 [a1 + 0x600]\n  9361: t1 = u64 [a1 + 0x5e8]\n  9365: a3 = u64 [a1 + 0x5f8]\n  9369: a1 = u64 [s1 + 0xa0]\n  9373: a4 = a0 ^ a1\n  9376: a5 = a0 <u a1\n  9379: ra = u64 [s1 + 0xd0]\n  9383: t2 = t1 <u ra\n  9386: a5 = t2 if a4 == 0\n  9389: a2 = u64 [s1 + 0x98]\n  9393: a4 = a3 - a2\n  9396: a3 = a3 <u a2\n  9399: a2 = u64 [s1 + 0x90]\n  9403: a2 = t0 - a2\n  9406: t0 = 378, jump @1016\n      : @403 [@dyn 189] (gas: 3)\n  9412: u64 [s1 + 0x70] = a0\n  9415: ecalli 9 // 'ref_time_left'\n  9417: fallthrough\n      : @404 (gas: 35)\n  9418: a0 = u64 [s1 + 0x78]\n  9421: a0 = reverse a0\n  9423: a1 = a0 << 0x20\n  9426: a2 = u64 [s1 + 0x80]\n  9430: a2 = reverse a2\n  9432: a2 = a2 >> 0x20\n  9435: a1 = a1 | a2\n  9438: a2 = u64 [s1 + 0x88]\n  9442: a2 = reverse a2\n  9444: a3 = a2 << 0x20\n  9447: a0 = a0 >> 0x20\n  9450: a0 = a0 | a3\n  9453: a3 = u64 [s1 + 0xd8]\n  9457: a2 = a2 >> 0x20\n  9460: u64 [a3 + 0x8] = a0\n  9463: u64 [a3] = a1\n  9465: u32 [a3 + 0x10] = a2\n  9468: a2 = s1 + 0x2858\n  9472: u64 [a2 + 608] = 0\n  9476: u64 [a2 + 600] = 0\n  9480: u64 [a2 + 592] = 0\n  9484: a0 = u64 [s1 + 0x70]\n  9487: t0 = a0\n  9489: a5 = u64 [s1 + 0x58]\n  9492: a0 = a0 | a5\n  9495: a1 = u64 [s1 + 0x60]\n  9498: a4 = u64 [s1 + 0x50]\n  9501: a1 = a1 | a4\n  9504: a0 = a0 | a1\n  9507: a0 = a0 >> 0x20\n  9510: a1 = a1 | a5\n  9513: a1 = a1 << 0x20\n  9516: a0 = a0 | a1\n  9519: u64 [a2 + 584] = 0\n  9523: jump @533 if a0 != 0\n      : @405 (gas: 3)\n  9527: a0 = u64 [s1 + 0xd0]\n  9531: a1 = t0\n  9533: ra = 380, jump @16\n      : @406 [@dyn 190] (gas: 4)\n  9539: u64 [s1 + 0x88] = a0\n  9543: a1 = 0x20\n  9546: a0 = u64 [s1 + 0xd0]\n  9550: ra = 382, jump @16\n      : @407 [@dyn 191] (gas: 34)\n  9556: a2 = s1 + 0x2858\n  9560: a3 = a2 + 0x200\n  9564: u32 [a3 + 104] = 0x20\n  9568: u64 [a3 + 160] = 0xffffffffffffffff\n  9573: u64 [a3 + 152] = 0xffffffffffffffff\n  9578: u64 [a3 + 144] = 0xffffffffffffffff\n  9583: u64 [a3 + 136] = 0xffffffffffffffff\n  9588: a1 = u64 [s1 + 0xd8]\n  9592: a1 = a1 << 0x20\n  9595: a1 = a1 >> 0x20\n  9598: a2 = 0x800000000\n  9608: t0 = a1 | a2\n  9611: a1 = s1 + 0x2aa0\n  9615: a1 = a1 << 0x20\n  9618: a1 = a1 >> 0x20\n  9621: a2 = s1 + 0x2ae0\n  9625: a2 = a2 << 0x20\n  9628: a3 = a2 | a1\n  9631: a1 = u64 [s1 + 0x88]\n  9635: a1 = a1 << 0x20\n  9638: a1 = a1 >> 0x20\n  9641: a4 = u64 [s1 + 0x70]\n  9644: a4 = a4 << 0x20\n  9647: a4 = a4 | a1\n  9650: a0 = a0 << 0x20\n  9653: a0 = a0 >> 0x20\n  9656: a1 = s1 + 0x2ac0\n  9660: a1 = a1 << 0x20\n  9663: a5 = a1 | a0\n  9666: a1 = 0xffffffffffffffff\n  9669: a2 = 0xffffffffffffffff\n  9672: a0 = t0\n  9674: ecalli 1 // 'call'\n  9676: fallthrough\n      : @408 (gas: 1)\n  9677: jump @410 if a0 == 0\n      : @409 (gas: 1)\n  9680: jump @581\n      : @410 (gas: 2)\n  9683: ecalli 11 // 'return_data_size'\n  9685: fallthrough\n      : @411 (gas: 2)\n  9686: a1 = 0x20\n  9689: jump @413 if a0 >=u a1\n      : @412 (gas: 3)\n  9692: ecalli 11 // 'return_data_size'\n  9694: a1 = a0\n  9696: fallthrough\n      : @413 (gas: 18)\n  9697: a2 = s1 + 0x1858\n  9701: t0 = u64 [s1 + 0xd0]\n  9705: a4 = u64 [s1 + 0xa0]\n  9709: a5 = u64 [s1 + 0x98]\n  9713: a3 = u64 [s1 + 0x90]\n  9717: u64 [s1 + 0x80] = a1\n  9721: u64 [s1 + 136] = 0\n  9725: u64 [a2 + 0x508] = a1\n  9729: u64 [a2 + 0x528] = t0\n  9733: u64 [a2 + 1296] = 0\n  9737: u64 [a2 + 0x530] = a4\n  9741: u64 [a2 + 1304] = 0\n  9745: u64 [a2 + 0x538] = a5\n  9749: u64 [a2 + 1312] = 0\n  9753: a0 = s1 + 0x1d80\n  9757: a1 = s1 + 0x1d60\n  9761: u64 [a2 + 0x540] = a3\n  9765: ra = 384, jump @931\n      : @414 [@dyn 192] (gas: 40)\n  9771: t0 = u64 [s1 + 0xd0]\n  9775: a1 = u64 [s1 + 0x80]\n  9779: a0 = a1 + t0\n  9782: a1 = a0 <u a1\n  9785: t1 = u64 [s1 + 0xa0]\n  9789: a5 = u64 [s1 + 0x88]\n  9793: a2 = a5 + t1\n  9796: a2 = a2 + a1\n  9799: a3 = a2 ^ a5\n  9802: a4 = a2 <u a5\n  9805: a4 = a1 if a3 == 0\n  9808: ra = u64 [s1 + 0x98]\n  9812: a1 = a5 + ra\n  9815: a4 = a4 + a1\n  9818: t2 = a4 <u a1\n  9821: a1 = a1 <u a5\n  9824: a3 = u64 [s1 + 0x90]\n  9828: a5 = a5 + a3\n  9831: a1 = a1 + a5\n  9834: t2 = t2 + a1\n  9837: a1 = s1 + 0x1858\n  9841: u64 [a1 + 0x4b8] = a4\n  9845: a1 = s1 + 0x1858\n  9849: u64 [a1 + 0x4b0] = a2\n  9853: a1 = s1 + 0x1858\n  9857: u64 [a1 + 0x4a8] = a0\n  9861: a0 = s1 + 0x1858\n  9865: u64 [a0 + 0x4e0] = a3\n  9869: a0 = s1 + 0x1858\n  9873: u64 [a0 + 0x4d8] = ra\n  9877: a0 = s1 + 0x1858\n  9881: u64 [a0 + 0x4d0] = t1\n  9885: a0 = s1 + 0x1858\n  9889: u64 [a0 + 0x4c8] = t0\n  9893: a0 = s1 + 0x1d40\n  9897: a1 = s1 + 0x1d20\n  9901: a2 = s1 + 0x1d00\n  9905: a4 = s1 + 0x1858\n  9909: u64 [a4 + 0x4c0] = t2\n  9913: ra = 386, jump @948\n      : @415 [@dyn 193] (gas: 3)\n  9919: a0 = s1 + 0x1ce0\n  9923: a1 = 0x40\n  9926: ra = 388, jump @2\n      : @416 [@dyn 194] (gas: 7)\n  9932: a3 = s1 + 0x1858\n  9936: a5 = a3 + 0x400\n  9940: a0 = u64 [a5 + 0xa0]\n  9944: a1 = u64 [a5 + 0x98]\n  9948: a2 = u64 [a5 + 0x90]\n  9952: a4 = u64 [a5 + 0x88]\n  9956: t0 = 390, jump @1008\n      : @417 [@dyn 195] (gas: 1)\n  9962: jump @533 if a0 != 0\n      : @418 (gas: 13)\n  9966: a0 = u64 [s1 + 0xb0]\n  9970: a2 = a3 + 0x400\n  9974: u64 [a2 + 0x68] = a0\n  9977: a0 = u64 [s1 + 0xb8]\n  9981: u64 [a2 + 0x70] = a0\n  9984: a0 = u64 [s1 + 0xc0]\n  9988: u64 [a2 + 0x78] = a0\n  9991: a1 = s1 + 0x1cc0\n  9995: a0 = u64 [s1 + 0xc8]\n  9999: u64 [a2 + 0x80] = a0\n 10003: a0 = a4\n 10005: u64 [s1 + 0xd0] = a4\n 10009: ra = 392, jump @4\n      : @419 [@dyn 196] (gas: 6)\n 10015: a0 = u64 [s1 + 0xa8]\n 10019: ra = 0x18a\n 10023: ecalli 5 // 'caller'\n 10025: a2 = u64 [s1 + 0xd8]\n 10029: t0 = 0x18c\n 10033: jump @997\n      : @420 [@dyn 197] (gas: 2)\n 10036: a2 = u64 [s1 + 0xd8]\n 10040: t0 = 396, jump @997\n      : @421 [@dyn 198] (gas: 25)\n 10046: t0 = a1 | a0\n 10049: a3 = a3 >> 0x20\n 10052: a2 = reverse a2\n 10054: a1 = a2 << 0x20\n 10057: a1 = a1 | a3\n 10060: a2 = a2 >> 0x20\n 10063: a3 = u64 [0x20040]\n 10068: a0 = s1 + 0x1858\n 10072: u64 [a0 + 0x460] = a3\n 10076: a3 = u64 [0x20048]\n 10081: a4 = u64 [0x20050]\n 10086: a5 = u64 [0x20058]\n 10091: u64 [a0 + 0x458] = a3\n 10095: a3 = a0 + 0x400\n 10099: u64 [a3 + 0x50] = a4\n 10102: u64 [a0 + 1088] = 0\n 10106: u64 [a3 + 0x48] = a5\n 10109: u64 [a3 + 0x38] = a2\n 10112: u64 [a3 + 0x30] = a1\n 10115: a1 = 0x20\n 10118: a2 = s1 + 0x1ca0\n 10122: a3 = s1 + 0x1c80\n 10126: u64 [a0 + 0x428] = t0\n 10130: a0 = u64 [s1 + 0xd0]\n 10134: ra = 398, jump @10\n      : @422 [@dyn 199] (gas: 5)\n 10140: a0 = 0\n 10142: a1 = u64 [s1 + 0x68]\n 10145: a2 = 0\n 10147: ecalli 12 // 'seal_return'\n 10149: jump @863\n      : @423 (gas: 13)\n 10152: u64 [s1 + 0xc0] = a5\n 10156: u64 [s1 + 0xa8] = a4\n 10160: u64 [s1 + 0xb0] = a3\n 10164: u64 [s1 + 0xb8] = a2\n 10168: a0 = 0x30250\n 10173: u64 [s1 + 0xd0] = a0\n 10177: i32 a0 = a0 + 0\n 10179: u64 [s1 + 0xa0] = a0\n 10183: ra = 0x190\n 10187: ecalli 5 // 'caller'\n 10189: a2 = u64 [s1 + 0xd0]\n 10193: t0 = 0x192\n 10197: jump @999\n      : @424 [@dyn 200] (gas: 2)\n 10200: a2 = u64 [s1 + 0xd0]\n 10204: t0 = 402, jump @999\n      : @425 [@dyn 201] (gas: 8)\n 10210: u64 [a2 + 288] = 0\n 10214: a4 = a2 + 0x100\n 10218: u64 [a4 + 0x18] = a1\n 10221: u64 [a4 + 0x10] = a0\n 10224: a1 = s1 + 0x1960\n 10228: u64 [a4 + 0x8] = a3\n 10231: a0 = 0\n 10233: ra = 404, jump @4\n      : @426 [@dyn 202] (gas: 3)\n 10239: t0 = 0x196\n 10243: a1 = s1 + 0x1858\n 10247: fallthrough\n      : @427 [@dyn 203] (gas: 8)\n 10248: u64 [a1 + 256] = 0\n 10252: u64 [a1 + 248] = 0\n 10256: u64 [a1 + 232] = 0x5\n 10261: a2 = a1\n 10263: a0 = 0x20\n 10266: a1 = s1 + 0x1940\n 10270: u64 [a2 + 240] = 0\n 10274: ra = 408, jump @4\n      : @428 [@dyn 204] (gas: 7)\n 10280: a0 = sp + 0xffffffffffffffe0\n 10283: a0 = a0 & 0xffffffffffffffe0\n 10286: u64 [s1 + 0xd8] = a0\n 10290: sp = a0\n 10292: a2 = 0x2023c\n 10297: a0 = i32 [0x2023c]\n 10302: jump @430 if a0 >u 63\n      : @429 (gas: 2)\n 10306: u32 [0x2023c] = 0x40\n 10312: fallthrough\n      : @430 (gas: 47)\n 10313: u64 [s1 + 0x90] = a2\n 10317: a0 = sp + 0xffffffffffffffe0\n 10320: a2 = a0 & 0xffffffffffffffe0\n 10323: u64 [s1 + 0xc8] = a2\n 10327: sp = a2\n 10329: a0 = 0x20250\n 10334: i32 a0 = a0 + 0\n 10336: i32 a2 = a2 + 0\n 10338: a1 = 0x40\n 10341: u64 [s1 + 0x98] = a0\n 10345: ecalli 8 // 'hash_keccak_256'\n 10347: a1 = u64 [s1 + 0xc8]\n 10351: a0 = u64 [a1 + 0x18]\n 10354: a2 = u64 [a1 + 0x10]\n 10357: a4 = u64 [a1 + 0x8]\n 10360: a1 = u64 [a1]\n 10362: a3 = reverse a0\n 10364: a2 = reverse a2\n 10366: a4 = reverse a4\n 10368: a5 = reverse a1\n 10370: a0 = u64 [s1 + 0xd8]\n 10374: u64 [a0 + 0x18] = a5\n 10377: u64 [a0 + 0x10] = a4\n 10380: u64 [a0 + 0x8] = a2\n 10383: u64 [a0] = a3\n 10385: a0 = sp + 0xffffffffffffffe0\n 10388: a1 = a0 & 0xffffffffffffffe0\n 10391: sp = a1\n 10393: t0 = a3 + 0x2\n 10396: u64 [s1 + 0x78] = a3\n 10399: a0 = t0 <u a3\n 10402: t1 = a2 + a0\n 10405: u64 [s1 + 0x80] = a2\n 10409: a3 = t1 <u a2\n 10412: a3 = a0 if a0 == 0\n 10415: a3 = a3 + a4\n 10418: u64 [s1 + 0xc8] = a4\n 10422: a0 = a3 <u a4\n 10425: u64 [s1 + 0x88] = a5\n 10429: a0 = a0 + a5\n 10432: u64 [a1 + 0x10] = a3\n 10435: u64 [a1 + 0x8] = t1\n 10438: u64 [a1] = t0\n 10440: u64 [a1 + 0x18] = a0\n 10443: a0 = s1 + 0x1920\n 10447: u64 [s1 + 0x70] = a1\n 10450: ra = 410, jump @6\n      : @431 [@dyn 205] (gas: 4)\n 10456: a2 = s1 + 0x1858\n 10460: a1 = u64 [a2 + 0xc8]\n 10464: a0 = a1 & 0xff\n 10468: jump @506 if a0 != 0\n      : @432 (gas: 3)\n 10472: a0 = s1 + 0x14a0\n 10476: a1 = 0x40\n 10479: ra = 412, jump @2\n      : @433 [@dyn 206] (gas: 14)\n 10485: a2 = s1 + 0x1058\n 10489: t0 = u64 [a2 + 0x460]\n 10493: a1 = a2 + 0x400\n 10497: a5 = u64 [a1 + 0x58]\n 10500: a4 = u64 [a1 + 0x50]\n 10503: a0 = u64 [a1 + 0x48]\n 10506: a3 = a4 | t0\n 10509: a1 = a0 | a5\n 10512: a1 = a1 | a3\n 10515: a1 = a1 >> 0x20\n 10518: a3 = a3 | a5\n 10521: a3 = a3 << 0x20\n 10524: a1 = a1 | a3\n 10527: jump @533 if a1 != 0\n      : @434 (gas: 11)\n 10531: u64 [a2 + 1080] = 0\n 10535: u64 [a2 + 1072] = 0\n 10539: u64 [a2 + 1064] = 0\n 10543: a3 = 0x8c379a000000000\n 10553: a1 = s1 + 0x1480\n 10557: u64 [a2 + 0x440] = a3\n 10561: u64 [s1 + 0xd8] = a0\n 10565: u64 [s1 + 0xd0] = a4\n 10569: u64 [s1 + 0xc0] = t0\n 10573: u64 [s1 + 0xc8] = a5\n 10577: ra = 414, jump @4\n      : @435 [@dyn 207] (gas: 1)\n 10583: t0 = 416, jump @992\n      : @436 [@dyn 208] (gas: 1)\n 10589: jump @533 if a0 == 0\n      : @437 (gas: 1)\n 10593: t0 = 418, jump @1033\n      : @438 [@dyn 209] (gas: 8)\n 10599: u64 [a2 + 1056] = 0\n 10603: u64 [a2 + 1048] = 0\n 10607: u64 [a2 + 1032] = 0x20\n 10612: a1 = s1 + 0x1460\n 10616: u64 [a2 + 1040] = 0\n 10620: u64 [s1 + 0xc8] = a3\n 10624: u64 [s1 + 0xc0] = a4\n 10628: ra = 420, jump @4\n      : @439 [@dyn 210] (gas: 1)\n 10634: t0 = 422, jump @1018\n      : @440 [@dyn 211] (gas: 1)\n 10640: jump @533 if a0 == 0\n      : @441 (gas: 1)\n 10644: t0 = 424, jump @1031\n      : @442 [@dyn 212] (gas: 6)\n 10650: u64 [a2 + 1024] = 0\n 10654: u64 [a2 + 1016] = 0\n 10658: u64 [a2 + 1000] = 0x1d\n 10663: a1 = s1 + 0x1440\n 10667: u64 [a2 + 1008] = 0\n 10671: ra = 426, jump @4\n      : @443 [@dyn 213] (gas: 1)\n 10677: t0 = 428, jump @1015\n      : @444 [@dyn 214] (gas: 1)\n 10683: jump @533 if a0 == 0\n      : @445 (gas: 13)\n 10687: i32 a0 = a3 + 0x44\n 10690: a1 = u64 [0x20128]\n 10695: a2 = u64 [0x20130]\n 10700: a3 = u64 [0x20138]\n 10705: a4 = s1 + 0x1058\n 10709: a5 = a4 + 0x300\n 10713: u64 [a5 + 0xe0] = a1\n 10717: u64 [a5 + 0xd8] = a2\n 10721: u64 [a5 + 0xd0] = a3\n 10725: a2 = 0x2075736572000000\n 10735: a1 = s1 + 0x1420\n 10739: u64 [a5 + 0xc8] = a2\n 10743: ra = 430, jump @4\n      : @446 [@dyn 215] (gas: 3)\n 10749: a1 = 0x64\n 10752: a0 = u64 [s1 + 0xd8]\n 10756: ra = 432, jump @16\n      : @447 [@dyn 216] (gas: 5)\n 10762: i32 a1 = a0 + 0\n 10764: a0 = 0x1\n 10767: a2 = 0x64\n 10770: ecalli 12 // 'seal_return'\n 10772: fallthrough\n      : @448 (gas: 11)\n 10773: u64 [s1 + 0x68] = a5\n 10776: u64 [s1 + 0x78] = a4\n 10779: u64 [s1 + 0x80] = a3\n 10783: u64 [s1 + 0x88] = a2\n 10787: a0 = 0x30250\n 10792: u64 [s1 + 0xb0] = a0\n 10796: i32 a0 = a0 + 0\n 10798: u64 [s1 + 0x70] = a0\n 10801: ra = 0x1b2\n 10805: ecalli 5 // 'caller'\n 10807: fallthrough\n      : @449 [@dyn 217] (gas: 5)\n 10808: a2 = u64 [s1 + 0xb0]\n 10812: a0 = u64 [a2 + 0x8]\n 10815: a1 = i32 [a2 + 0x10]\n 10818: a2 = u64 [a2]\n 10820: t0 = 436, jump @1001\n      : @450 [@dyn 218] (gas: 7)\n 10826: u64 [s1 + 2040] = 0\n 10830: u64 [s1 + 0x7f0] = a1\n 10834: u64 [s1 + 0x7e8] = a0\n 10838: a1 = s1 + 0x7e0\n 10842: u64 [s1 + 0x7e0] = a3\n 10846: a0 = 0\n 10848: ra = 438, jump @4\n      : @451 [@dyn 219] (gas: 7)\n 10854: u64 [s1 + 2008] = 0\n 10858: u64 [s1 + 2000] = 0\n 10862: u64 [s1 + 1984] = 0x5\n 10867: a0 = 0x20\n 10870: a1 = s1 + 0x7c0\n 10874: u64 [s1 + 1992] = 0\n 10878: ra = 440, jump @4\n      : @452 [@dyn 220] (gas: 8)\n 10884: a0 = sp + 0xffffffffffffffe0\n 10887: a0 = a0 & 0xffffffffffffffe0\n 10890: u64 [s1 + 0xd0] = a0\n 10894: sp = a0\n 10896: a2 = 0x2023c\n 10901: a0 = i32 [0x2023c]\n 10906: a1 = 0x3f\n 10909: jump @454 if a1 <u a0\n      : @453 (gas: 4)\n 10912: u32 [0x2023c] = 0x40\n 10918: u64 [s1 + 0x58] = a2\n 10921: t0 = 0x1ba\n 10925: jump @1027\n      : @454 (gas: 2)\n 10928: u64 [s1 + 0x58] = a2\n 10931: t0 = 442, jump @1027\n      : @455 [@dyn 221] (gas: 27)\n 10937: a0 = 0x20250\n 10942: i32 a0 = a0 + 0\n 10944: i32 a2 = a2 + 0\n 10946: a1 = 0x40\n 10949: u64 [s1 + 0x60] = a0\n 10952: ecalli 8 // 'hash_keccak_256'\n 10954: a3 = u64 [s1 + 0xd8]\n 10958: a0 = u64 [a3 + 0x18]\n 10961: a1 = u64 [a3 + 0x10]\n 10964: a2 = u64 [a3 + 0x8]\n 10967: a3 = u64 [a3]\n 10969: a5 = reverse a0\n 10971: a4 = reverse a1\n 10973: a0 = reverse a2\n 10975: a1 = reverse a3\n 10977: u64 [s1 + 0xa0] = a1\n 10981: a2 = u64 [s1 + 0xd0]\n 10985: u64 [a2 + 0x18] = a1\n 10988: u64 [s1 + 0xa8] = a0\n 10992: u64 [a2 + 0x10] = a0\n 10995: u64 [s1 + 0x98] = a4\n 10999: u64 [a2 + 0x8] = a4\n 11002: u64 [s1 + 0x90] = a5\n 11006: u64 [a2] = a5\n 11008: a0 = s1 + 0x7a0\n 11012: a1 = 0x40\n 11015: ra = 444, jump @2\n      : @456 [@dyn 222] (gas: 15)\n 11021: a4 = s1 + 0x700\n 11025: a0 = u64 [a4 + 0xb8]\n 11029: u64 [s1 + 0xc0] = a0\n 11033: a1 = u64 [a4 + 0xb0]\n 11037: u64 [s1 + 0xb8] = a1\n 11041: a3 = u64 [a4 + 0xa8]\n 11045: u64 [s1 + 0xc8] = a3\n 11049: a2 = u64 [a4 + 0xa0]\n 11053: u64 [s1 + 0xd8] = a2\n 11057: u64 [a4 + 0x98] = a0\n 11061: u64 [a4 + 0x90] = a1\n 11065: u64 [a4 + 0x88] = a3\n 11069: a0 = s1 + 0x780\n 11073: u64 [a4 + 0x80] = a2\n 11077: ra = 446, jump @923\n      : @457 [@dyn 223] (gas: 3)\n 11083: a0 = s1 + 0x760\n 11087: a1 = u64 [s1 + 0xd0]\n 11091: ra = 448, jump @6\n      : @458 [@dyn 224] (gas: 1)\n 11097: t0 = 450, jump @1011\n      : @459 [@dyn 225] (gas: 1)\n 11103: jump @533 if a0 != 0\n      : @460 (gas: 12)\n 11107: a4 = s1 + 0x700\n 11111: a0 = u64 [a4 + 0x78]\n 11114: a1 = u64 [a4 + 0x70]\n 11117: a2 = u64 [a4 + 0x68]\n 11120: a3 = u64 [a4 + 0x60]\n 11123: u64 [a4 + 0x40] = a3\n 11126: u64 [a4 + 0x48] = a2\n 11129: u64 [a4 + 0x50] = a1\n 11132: a1 = s1 + 0x740\n 11136: u64 [a4 + 0x58] = a0\n 11139: a0 = u64 [s1 + 0xd8]\n 11143: ra = 452, jump @4\n      : @461 [@dyn 226] (gas: 21)\n 11149: a0 = u64 [s1 + 0x90]\n 11153: a0 = a0 + 0x1\n 11156: a1 = a0 <u 0x1\n 11159: a2 = u64 [s1 + 0x98]\n 11163: a1 = a1 + a2\n 11166: a2 = a0 | a1\n 11169: a2 = a2 <u 0x1\n 11172: a3 = u64 [s1 + 0xa8]\n 11176: a2 = a2 + a3\n 11179: a3 = a2 <u a3\n 11182: a4 = u64 [s1 + 0xa0]\n 11186: a3 = a3 + a4\n 11189: a4 = s1 + 0x2058\n 11193: a5 = a4 + 0x300\n 11197: u64 [a5 + 0x30] = a1\n 11200: u64 [a5 + 0x28] = a0\n 11203: u64 [a5 + 0x38] = a2\n 11206: u64 [a5 + 0x40] = a3\n 11209: a0 = s1 + 0x720\n 11213: a1 = s1 + 0x2380\n 11217: ra = 454, jump @6\n      : @462 [@dyn 227] (gas: 1)\n 11223: t0 = 456, jump @1003\n      : @463 [@dyn 228] (gas: 1)\n 11229: jump @533 if a0 == 0\n      : @464 (gas: 15)\n 11233: u64 [s1 + 0xd0] = a2\n 11237: a5 = s1 + 0x700\n 11241: a2 = u64 [a5 + 0x38]\n 11244: a1 = u64 [a5 + 0x30]\n 11247: u64 [s1 + 0xc0] = a3\n 11251: a3 = u64 [a5 + 0x28]\n 11254: a4 = u64 [a5 + 0x20]\n 11257: a0 = u64 [s1 + 0xd8]\n 11261: i32 a0 = a0 + 0x20\n 11264: u64 [a5] = a4\n 11266: u64 [a5 + 0x8] = a3\n 11269: u64 [a5 + 0x10] = a1\n 11272: a1 = s1 + 0x700\n 11276: u64 [a5 + 0x18] = a2\n 11279: ra = 458, jump @4\n      : @465 [@dyn 229] (gas: 5)\n 11285: a1 = u64 [s1 + 0x90]\n 11289: a0 = a1 + 0x2\n 11292: a1 = a0 <u a1\n 11295: a3 = u64 [s1 + 0x98]\n 11299: t0 = 460, jump @1025\n      : @466 [@dyn 230] (gas: 11)\n 11305: a4 = u64 [s1 + 0xa0]\n 11309: a1 = a1 + a4\n 11312: a4 = s1 + 0x2058\n 11316: a5 = a4 + 0x300\n 11320: u64 [a5 + 0x50] = a2\n 11323: u64 [a5 + 0x48] = a0\n 11326: u64 [a5 + 0x58] = a3\n 11329: u64 [a5 + 0x60] = a1\n 11332: a0 = s1 + 0x6e0\n 11336: a1 = s1 + 0x23a0\n 11340: ra = 462, jump @6\n      : @467 [@dyn 231] (gas: 1)\n 11346: t0 = 464, jump @1019\n      : @468 [@dyn 232] (gas: 1)\n 11352: jump @533 if a0 == 0\n      : @469 (gas: 12)\n 11356: a0 = u64 [s1 + 0x6e0]\n 11360: a0 = a0 & 0xff\n 11364: u64 [s1 + 0xd0] = a0\n 11368: a1 = a0 >u 0\n 11370: a0 = u64 [s1 + 0xd8]\n 11374: i32 a0 = a0 + 0x40\n 11377: u64 [s1 + 1752] = 0\n 11381: u64 [s1 + 1744] = 0\n 11385: u64 [s1 + 0x6c0] = a1\n 11389: a1 = s1 + 0x6c0\n 11393: u64 [s1 + 1736] = 0\n 11397: ra = 466, jump @4\n      : @470 [@dyn 233] (gas: 2)\n 11403: a0 = u64 [s1 + 0xd0]\n 11407: jump @472 if a0 != 0\n      : @471 (gas: 1)\n 11410: jump @609\n      : @472 (gas: 3)\n 11413: a0 = s1 + 0x2c0\n 11417: a1 = 0x40\n 11420: ra = 468, jump @2\n      : @473 [@dyn 234] (gas: 6)\n 11426: a1 = s1 + 0x200\n 11430: a4 = u64 [a1 + 0xd8]\n 11434: a5 = u64 [a1 + 0xd0]\n 11438: a3 = u64 [a1 + 0xc8]\n 11442: a0 = u64 [a1 + 0xc0]\n 11446: t0 = 470, jump @1013\n      : @474 [@dyn 235] (gas: 1)\n 11452: jump @533 if a1 != 0\n      : @475 (gas: 11)\n 11456: u64 [s1 + 688] = 0\n 11460: u64 [s1 + 680] = 0\n 11464: u64 [s1 + 672] = 0\n 11468: a2 = 0x8c379a000000000\n 11478: a1 = s1 + 0x2a0\n 11482: u64 [s1 + 0x2b8] = a2\n 11486: u64 [s1 + 0xd8] = a0\n 11490: u64 [s1 + 0xd0] = a3\n 11494: u64 [s1 + 0xc8] = a4\n 11498: u64 [s1 + 0xc0] = a5\n 11502: ra = 472, jump @4\n      : @476 [@dyn 236] (gas: 5)\n 11508: a1 = u64 [s1 + 0xd8]\n 11512: a0 = u64 [s1 + 0xc8]\n 11516: a3 = u64 [s1 + 0xc0]\n 11520: a3 = a3 | a0\n 11523: t0 = 474, jump @993\n      : @477 [@dyn 237] (gas: 1)\n 11529: jump @533 if a0 == 0\n      : @478 (gas: 9)\n 11533: i32 a0 = a1 + 0x4\n 11536: u64 [s1 + 664] = 0\n 11540: u64 [s1 + 656] = 0\n 11544: u64 [s1 + 640] = 0x20\n 11549: a1 = s1 + 0x280\n 11553: u64 [s1 + 648] = 0\n 11557: u64 [s1 + 0xc8] = a3\n 11561: u64 [s1 + 0xc0] = a4\n 11565: ra = 476, jump @4\n      : @479 [@dyn 238] (gas: 1)\n 11571: t0 = 478, jump @994\n      : @480 [@dyn 239] (gas: 1)\n 11577: jump @533 if a0 == 0\n      : @481 (gas: 7)\n 11581: i32 a0 = a1 + 0x24\n 11584: u64 [s1 + 632] = 0\n 11588: u64 [s1 + 624] = 0\n 11592: u64 [s1 + 608] = 0x21\n 11597: a1 = s1 + 0x260\n 11601: u64 [s1 + 616] = 0\n 11605: ra = 480, jump @4\n      : @482 [@dyn 240] (gas: 1)\n 11611: t0 = 482, jump @1014\n      : @483 [@dyn 241] (gas: 1)\n 11617: jump @533 if a0 == 0\n      : @484 (gas: 13)\n 11621: i32 a0 = a1 + 0x44\n 11624: a1 = u64 [0x20200]\n 11629: a4 = s1 + 0x200\n 11633: u64 [a4 + 0x58] = a1\n 11636: a1 = u64 [0x20208]\n 11641: u64 [s1 + 0xc0] = a2\n 11645: a2 = u64 [0x20210]\n 11650: a3 = u64 [0x20218]\n 11655: u64 [a4 + 0x50] = a1\n 11658: u64 [a4 + 0x48] = a2\n 11661: a1 = s1 + 0x240\n 11665: u64 [a4 + 0x40] = a3\n 11668: ra = 484, jump @4\n      : @485 [@dyn 242] (gas: 1)\n 11674: t0 = 486, jump @995\n      : @486 [@dyn 243] (gas: 1)\n 11680: jump @533 if a0 == 0\n      : @487 (gas: 9)\n 11684: i32 a0 = a2 + 0x64\n 11687: u64 [s1 + 560] = 0\n 11691: u64 [s1 + 552] = 0\n 11695: a1 = 0x6c00000000000000\n 11705: u64 [s1 + 0x238] = a1\n 11709: a1 = s1 + 0x220\n 11713: u64 [s1 + 544] = 0\n 11717: ra = 0x216\n 11721: jump @4\n      : @488 (gas: 5)\n 11724: a0 = a5 <u 0x65\n 11727: a0 = 0 if a4 != 0\n 11729: a1 = a3 | a2\n 11732: a0 = 0 if a1 != 0\n 11734: jump @528 if a0 != 0\n      : @489 (gas: 3)\n 11738: a0 = s1 + 0x1b40\n 11742: a1 = 0x40\n 11745: ra = 488, jump @2\n      : @490 [@dyn 244] (gas: 14)\n 11751: a2 = s1 + 0x1858\n 11755: t0 = u64 [a2 + 0x300]\n 11759: a1 = a2 + 0x200\n 11763: a5 = u64 [a1 + 0xf8]\n 11767: a4 = u64 [a1 + 0xf0]\n 11771: a0 = u64 [a1 + 0xe8]\n 11775: a3 = a4 | t0\n 11778: a1 = a0 | a5\n 11781: a1 = a1 | a3\n 11784: a1 = a1 >> 0x20\n 11787: a3 = a3 | a5\n 11790: a3 = a3 << 0x20\n 11793: a1 = a1 | a3\n 11796: jump @533 if a1 != 0\n      : @491 (gas: 11)\n 11800: u64 [a2 + 728] = 0\n 11804: u64 [a2 + 720] = 0\n 11808: u64 [a2 + 712] = 0\n 11812: a3 = 0x8c379a000000000\n 11822: a1 = s1 + 0x1b20\n 11826: u64 [a2 + 0x2e0] = a3\n 11830: u64 [s1 + 0xd8] = a0\n 11834: u64 [s1 + 0xd0] = a4\n 11838: u64 [s1 + 0xc0] = t0\n 11842: u64 [s1 + 0xc8] = a5\n 11846: ra = 490, jump @4\n      : @492 [@dyn 245] (gas: 1)\n 11852: t0 = 492, jump @992\n      : @493 [@dyn 246] (gas: 1)\n 11858: jump @533 if a0 == 0\n      : @494 (gas: 1)\n 11862: t0 = 494, jump @1032\n      : @495 [@dyn 247] (gas: 8)\n 11868: u64 [a2 + 704] = 0\n 11872: u64 [a2 + 696] = 0\n 11876: u64 [a2 + 680] = 0x20\n 11881: a1 = s1 + 0x1b00\n 11885: u64 [a2 + 688] = 0\n 11889: u64 [s1 + 0xc8] = a3\n 11893: u64 [s1 + 0xc0] = a4\n 11897: ra = 496, jump @4\n      : @496 [@dyn 248] (gas: 1)\n 11903: t0 = 498, jump @994\n      : @497 [@dyn 249] (gas: 1)\n 11909: jump @533 if a0 == 0\n      : @498 (gas: 1)\n 11913: t0 = 500, jump @1030\n      : @499 [@dyn 250] (gas: 6)\n 11919: u64 [a2 + 672] = 0\n 11923: u64 [a2 + 664] = 0\n 11927: u64 [a2 + 648] = 0x26\n 11932: a1 = s1 + 0x1ae0\n 11936: u64 [a2 + 656] = 0\n 11940: ra = 502, jump @4\n      : @500 [@dyn 251] (gas: 1)\n 11946: t0 = 504, jump @996\n      : @501 [@dyn 252] (gas: 1)\n 11952: jump @533 if a0 == 0\n      : @502 (gas: 14)\n 11956: i32 a0 = a1 + 0x44\n 11959: a1 = u64 [0x200a8]\n 11964: u64 [s1 + 0xc0] = a2\n 11968: a5 = s1 + 0x1858\n 11972: a4 = a5 + 0x200\n 11976: u64 [a4 + 0x80] = a1\n 11980: a1 = u64 [0x200b0]\n 11985: a2 = u64 [0x200b8]\n 11990: a3 = u64 [0x200c0]\n 11995: u64 [a4 + 0x78] = a1\n 11998: u64 [a4 + 0x70] = a2\n 12001: a1 = s1 + 0x1ac0\n 12005: u64 [a4 + 0x68] = a3\n 12008: ra = 506, jump @4\n      : @503 [@dyn 253] (gas: 1)\n 12014: t0 = 508, jump @995\n      : @504 [@dyn 254] (gas: 1)\n 12020: jump @533 if a0 == 0\n      : @505 (gas: 10)\n 12024: i32 a0 = a2 + 0x64\n 12027: a1 = u64 [0x200c8]\n 12032: a3 = s1 + 0x1858\n 12036: u64 [a3 + 600] = 0\n 12040: u64 [a3 + 592] = 0\n 12044: u64 [a3 + 0x260] = a1\n 12048: a1 = s1 + 0x1aa0\n 12052: u64 [a3 + 584] = 0\n 12056: ra = 0x216\n 12060: jump @4\n      : @506 (gas: 10)\n 12063: u64 [s1 + 0x60] = a1\n 12066: a0 = u64 [a2 + 0xe0]\n 12070: u64 [s1 + 0x58] = a0\n 12073: a0 = u64 [a2 + 0xd8]\n 12077: u64 [s1 + 0x50] = a0\n 12080: a0 = u64 [a2 + 0xd0]\n 12084: u64 [s1 + 0x48] = a0\n 12087: a0 = s1 + 0x1900\n 12091: a1 = u64 [s1 + 0xd8]\n 12095: ra = 510, jump @6\n      : @507 [@dyn 255] (gas: 2)\n 12101: a1 = s1 + 0x1858\n 12105: fallthrough\n      : @508 (gas: 21)\n 12106: t1 = u64 [a1 + 0xb0]\n 12110: t2 = u64 [a1 + 0xc0]\n 12114: a0 = u64 [a1 + 0xa8]\n 12118: ra = u64 [a1 + 0xb8]\n 12122: t0 = u64 [s1 + 0xa8]\n 12126: a4 = t0 ^ t1\n 12129: a5 = t1 <u t0\n 12132: u64 [s1 + 0x68] = a0\n 12135: a1 = u64 [s1 + 0xc0]\n 12139: a3 = a0 <u a1\n 12142: a3 = a5 if a4 != 0\n 12145: a2 = u64 [s1 + 0xb0]\n 12149: a4 = ra <u a2\n 12152: a1 = u64 [s1 + 0xb8]\n 12156: a5 = a1 ^ t2\n 12159: a0 = t2 <u a1\n 12162: a0 = a4 if a5 == 0\n 12165: a4 = a2 ^ ra\n 12168: a4 = a4 | a5\n 12171: a0 = a3 if a4 == 0\n 12174: jump @534 if a0 == 0\n      : @509 (gas: 3)\n 12178: a0 = s1 + 0x1560\n 12182: a1 = 0x40\n 12185: ra = 512, jump @2\n      : @510 [@dyn 256] (gas: 14)\n 12191: a2 = s1 + 0x1058\n 12195: t0 = u64 [a2 + 0x520]\n 12199: a1 = a2 + 0x500\n 12203: a5 = u64 [a1 + 0x18]\n 12206: a4 = u64 [a1 + 0x10]\n 12209: a0 = u64 [a1 + 0x8]\n 12212: a3 = a4 | t0\n 12215: a1 = a0 | a5\n 12218: a1 = a1 | a3\n 12221: a1 = a1 >> 0x20\n 12224: a3 = a3 | a5\n 12227: a3 = a3 << 0x20\n 12230: a1 = a1 | a3\n 12233: jump @533 if a1 != 0\n      : @511 (gas: 11)\n 12237: u64 [a2 + 1272] = 0\n 12241: u64 [a2 + 1264] = 0\n 12245: u64 [a2 + 1256] = 0\n 12249: a3 = 0x8c379a000000000\n 12259: a1 = s1 + 0x1540\n 12263: u64 [a2 + 0x500] = a3\n 12267: u64 [s1 + 0xd8] = a0\n 12271: u64 [s1 + 0xd0] = a4\n 12275: u64 [s1 + 0xc0] = t0\n 12279: u64 [s1 + 0xc8] = a5\n 12283: ra = 514, jump @4\n      : @512 [@dyn 257] (gas: 1)\n 12289: t0 = 516, jump @992\n      : @513 [@dyn 258] (gas: 1)\n 12295: jump @533 if a0 == 0\n      : @514 (gas: 1)\n 12299: t0 = 518, jump @1033\n      : @515 [@dyn 259] (gas: 8)\n 12305: u64 [a2 + 1248] = 0\n 12309: u64 [a2 + 1240] = 0\n 12313: u64 [a2 + 1224] = 0x20\n 12318: a1 = s1 + 0x1520\n 12322: u64 [a2 + 1232] = 0\n 12326: u64 [s1 + 0xc8] = a3\n 12330: u64 [s1 + 0xc0] = a4\n 12334: ra = 520, jump @4\n      : @516 [@dyn 260] (gas: 1)\n 12340: t0 = 522, jump @994\n      : @517 [@dyn 261] (gas: 1)\n 12346: jump @533 if a0 == 0\n      : @518 (gas: 1)\n 12350: t0 = 524, jump @1031\n      : @519 [@dyn 262] (gas: 6)\n 12356: u64 [a2 + 1216] = 0\n 12360: u64 [a2 + 1208] = 0\n 12364: u64 [a2 + 1192] = 0x24\n 12369: a1 = s1 + 0x1500\n 12373: u64 [a2 + 1200] = 0\n 12377: ra = 526, jump @4\n      : @520 [@dyn 263] (gas: 1)\n 12383: t0 = 528, jump @996\n      : @521 [@dyn 264] (gas: 1)\n 12389: jump @533 if a0 == 0\n      : @522 (gas: 14)\n 12393: i32 a0 = a1 + 0x44\n 12396: a1 = u64 [0x20108]\n 12401: u64 [s1 + 0xc0] = a2\n 12405: a5 = s1 + 0x1058\n 12409: a4 = a5 + 0x400\n 12413: u64 [a4 + 0xa0] = a1\n 12417: a1 = u64 [0x20110]\n 12422: a2 = u64 [0x20118]\n 12427: a3 = u64 [0x20120]\n 12432: u64 [a4 + 0x98] = a1\n 12436: u64 [a4 + 0x90] = a2\n 12440: a1 = s1 + 0x14e0\n 12444: u64 [a4 + 0x88] = a3\n 12448: ra = 530, jump @4\n      : @523 [@dyn 265] (gas: 1)\n 12454: t0 = 532, jump @995\n      : @524 [@dyn 266] (gas: 1)\n 12460: jump @533 if a0 == 0\n      : @525 (gas: 9)\n 12464: i32 a0 = a2 + 0x64\n 12467: a3 = s1 + 0x1058\n 12471: u64 [a3 + 1144] = 0\n 12475: u64 [a3 + 1136] = 0\n 12479: a1 = 0x6f756e7400000000\n 12489: u64 [a3 + 0x480] = a1\n 12493: a1 = s1 + 0x14c0\n 12497: u64 [a3 + 1128] = 0\n 12501: ra = 534, jump @4\n      : @526 [@dyn 267] (gas: 3)\n 12507: a1 = 0x84\n 12511: a0 = u64 [s1 + 0xd8]\n 12515: ra = 536, jump @16\n      : @527 [@dyn 268] (gas: 5)\n 12521: i32 a1 = a0 + 0\n 12523: a0 = 0x1\n 12526: a2 = 0x84\n 12530: ecalli 12 // 'seal_return'\n 12532: fallthrough\n      : @528 (gas: 8)\n 12533: a1 = s1 + 0x2858\n 12537: u64 [a1 + 448] = 0\n 12541: u64 [a1 + 440] = 0\n 12545: u64 [a1 + 432] = 0\n 12549: u64 [a1 + 424] = 0x3\n 12554: a0 = s1 + 0x2a00\n 12558: a1 = u64 [s1 + 0xd8]\n 12562: ra = 538, jump @7\n      : @529 [@dyn 269] (gas: 3)\n 12568: a0 = s1 + 0x1ba0\n 12572: a1 = 0x40\n 12575: ra = 540, jump @2\n      : @530 [@dyn 270] (gas: 7)\n 12581: a3 = s1 + 0x1858\n 12585: a5 = a3 + 0x300\n 12589: a0 = u64 [a5 + 0x60]\n 12592: a1 = u64 [a5 + 0x58]\n 12595: a2 = u64 [a5 + 0x50]\n 12598: a4 = u64 [a5 + 0x48]\n 12601: t0 = 542, jump @1008\n      : @531 [@dyn 271] (gas: 1)\n 12607: jump @533 if a0 != 0\n      : @532 (gas: 1)\n 12610: jump @853\n      : @533 (gas: 1)\n 12613: trap\n      : @534 (gas: 20)\n 12614: a0 = sp + 0xffffffffffffffe0\n 12617: a0 = a0 & 0xffffffffffffffe0\n 12620: u64 [s1 + 0x40] = a0\n 12623: sp = a0\n 12625: a3 = s1 + 0x1858\n 12629: u64 [a3 + 0x60] = a1\n 12632: u64 [a3 + 0x58] = a2\n 12635: u64 [a3 + 0x50] = t0\n 12638: a0 = u64 [s1 + 0xc0]\n 12642: u64 [a3 + 0x48] = a0\n 12645: u64 [a3 + 0x80] = t2\n 12649: u64 [a3 + 0x78] = ra\n 12652: u64 [a3 + 0x70] = t1\n 12655: a4 = a3\n 12657: a0 = s1 + 0x18e0\n 12661: a1 = s1 + 0x18c0\n 12665: a2 = s1 + 0x18a0\n 12669: a3 = u64 [s1 + 0x68]\n 12672: u64 [a4 + 0x68] = a3\n 12675: ra = 544, jump @941\n      : @535 [@dyn 272] (gas: 16)\n 12681: a0 = s1 + 0x1858\n 12685: a2 = u64 [a0 + 0x98]\n 12689: u64 [s1 + 0x68] = a2\n 12692: a4 = u64 [a0 + 0xa0]\n 12696: u64 [s1 + 0x30] = a4\n 12699: a3 = u64 [a0 + 0x88]\n 12703: u64 [s1 + 0x38] = a3\n 12706: a0 = u64 [a0 + 0x90]\n 12710: u64 [s1 + 0x28] = a0\n 12713: a1 = u64 [s1 + 0x40]\n 12716: u64 [a1 + 0x10] = a2\n 12719: u64 [a1 + 0x18] = a4\n 12722: u64 [a1] = a3\n 12724: u64 [a1 + 0x8] = a0\n 12727: a0 = u64 [s1 + 0xd8]\n 12731: ra = 546, jump @7\n      : @536 [@dyn 273] (gas: 8)\n 12737: a0 = u64 [s1 + 0x30]\n 12740: a1 = u64 [s1 + 0x28]\n 12743: a0 = a0 | a1\n 12746: a1 = u64 [s1 + 0x68]\n 12749: a2 = u64 [s1 + 0x38]\n 12752: a1 = a1 | a2\n 12755: a0 = a0 | a1\n 12758: jump @552 if a0 != 0\n      : @537 (gas: 13)\n 12762: a0 = u64 [s1 + 0x60]\n 12765: a0 = a0 & 0xffffffffffffff00\n 12769: a1 = s1 + 0x2858\n 12773: a2 = u64 [s1 + 0x48]\n 12776: u64 [a1 + 0x30] = a2\n 12779: u64 [a1 + 0x28] = a0\n 12782: a0 = u64 [s1 + 0x50]\n 12785: u64 [a1 + 0x38] = a0\n 12788: a0 = u64 [s1 + 0x58]\n 12791: u64 [a1 + 0x40] = a0\n 12794: a1 = s1 + 0x2880\n 12798: a0 = u64 [s1 + 0x70]\n 12801: ra = 548, jump @7\n      : @538 [@dyn 274] (gas: 22)\n 12807: a0 = sp + 0xffffffffffffffe0\n 12810: a1 = a0 & 0xffffffffffffffe0\n 12813: sp = a1\n 12815: a0 = u64 [s1 + 0x78]\n 12818: a0 = a0 + 0x1\n 12821: a2 = a0 <u 0x1\n 12824: a4 = u64 [s1 + 0x80]\n 12828: a4 = a4 + a2\n 12831: a2 = a0 | a4\n 12834: a2 = a2 <u 0x1\n 12837: a3 = u64 [s1 + 0xc8]\n 12841: a2 = a2 + a3\n 12844: a3 = a2 <u a3\n 12847: a5 = u64 [s1 + 0x88]\n 12851: a3 = a3 + a5\n 12854: u64 [a1 + 0x18] = a3\n 12857: u64 [a1 + 0x10] = a2\n 12860: u64 [a1 + 0x8] = a4\n 12863: u64 [a1] = a0\n 12865: a0 = s1 + 0x1880\n 12869: u64 [s1 + 0xc8] = a1\n 12873: ra = 550, jump @6\n      : @539 [@dyn 275] (gas: 15)\n 12879: a1 = s1 + 0x1858\n 12883: a0 = u64 [a1 + 0x40]\n 12886: u64 [s1 + 0x70] = a0\n 12889: a0 = u64 [a1 + 0x38]\n 12892: u64 [s1 + 0x78] = a0\n 12895: a0 = u64 [a1 + 0x30]\n 12898: u64 [s1 + 0x80] = a0\n 12902: a0 = u64 [a1 + 0x28]\n 12905: u64 [s1 + 0x88] = a0\n 12909: a0 = u64 [s1 + 0xa0]\n 12913: ra = 0x228\n 12917: ecalli 5 // 'caller'\n 12919: a2 = u64 [s1 + 0xd0]\n 12923: t0 = 0x22a\n 12927: jump @999\n      : @540 [@dyn 276] (gas: 2)\n 12930: a2 = u64 [s1 + 0xd0]\n 12934: t0 = 554, jump @999\n      : @541 [@dyn 277] (gas: 7)\n 12940: u64 [a2 + 32] = 0\n 12943: u64 [a2 + 0x18] = a1\n 12946: u64 [a2 + 0x10] = a0\n 12949: a1 = s1 + 0x1860\n 12953: u64 [a2 + 0x8] = a3\n 12956: a0 = 0\n 12958: ra = 556, jump @4\n      : @542 [@dyn 278] (gas: 3)\n 12964: t0 = 0x22e\n 12968: a1 = s1 + 0x1858\n 12972: fallthrough\n      : @543 [@dyn 279] (gas: 8)\n 12973: u64 [a1 + 0] = 0\n 12975: u64 [a1 + 4294967288] = 0\n 12978: u64 [a1 + 4294967272] = 0x4\n 12982: a2 = a1\n 12984: a0 = 0x20\n 12987: a1 = s1 + 0x1840\n 12991: u64 [a2 + 4294967280] = 0\n 12994: ra = 560, jump @4\n      : @544 [@dyn 280] (gas: 7)\n 13000: a0 = sp + 0xffffffffffffffe0\n 13003: a0 = a0 & 0xffffffffffffffe0\n 13006: u64 [s1 + 0xd8] = a0\n 13010: sp = a0\n 13012: a2 = u64 [s1 + 0x90]\n 13016: a0 = i32 [a2]\n 13018: jump @546 if a0 >u 63\n      : @545 (gas: 2)\n 13022: u32 [a2 + 0] = 0x40\n 13025: fallthrough\n      : @546 (gas: 12)\n 13026: a0 = sp + 0xffffffffffffffe0\n 13029: a0 = a0 & 0xffffffffffffffe0\n 13032: u64 [s1 + 0x90] = a0\n 13036: sp = a0\n 13038: i32 a2 = a0 + 0\n 13040: a1 = 0x40\n 13043: a0 = u64 [s1 + 0x98]\n 13047: ra = 0x232\n 13051: ecalli 8 // 'hash_keccak_256'\n 13053: a3 = u64 [s1 + 0x90]\n 13057: t0 = 0x234\n 13061: jump @1002\n      : @547 [@dyn 281] (gas: 2)\n 13064: a3 = u64 [s1 + 0x90]\n 13068: t0 = 564, jump @1002\n      : @548 [@dyn 282] (gas: 2)\n 13074: a0 = s1 + 0x1820\n 13078: ra = 566, jump @6\n      : @549 [@dyn 283] (gas: 22)\n 13084: a5 = s1 + 0x1058\n 13088: a3 = u64 [a5 + 0x7c8]\n 13092: a0 = u64 [a5 + 0x7d0]\n 13096: a1 = u64 [a5 + 0x7d8]\n 13100: a2 = u64 [a5 + 0x7e0]\n 13104: a4 = u64 [s1 + 0x70]\n 13107: u64 [a5 + 0x780] = a4\n 13111: a4 = u64 [s1 + 0x78]\n 13114: u64 [a5 + 0x778] = a4\n 13118: a4 = u64 [s1 + 0x80]\n 13122: u64 [a5 + 0x770] = a4\n 13126: a4 = u64 [s1 + 0x88]\n 13130: u64 [a5 + 0x768] = a4\n 13134: a4 = a5 + 0x700\n 13138: u64 [a4 + 0xa0] = a2\n 13142: u64 [a4 + 0x98] = a1\n 13146: u64 [a4 + 0x90] = a0\n 13150: a0 = s1 + 0x1800\n 13154: a1 = s1 + 0x17e0\n 13158: a2 = s1 + 0x17c0\n 13162: u64 [a4 + 0x88] = a3\n 13166: ra = 568, jump @963\n      : @550 [@dyn 284] (gas: 14)\n 13172: a3 = s1 + 0x1058\n 13176: a4 = a3 + 0x700\n 13180: a0 = u64 [a4 + 0xc0]\n 13184: a1 = u64 [a4 + 0xb8]\n 13188: a2 = u64 [a4 + 0xb0]\n 13192: a3 = u64 [a4 + 0xa8]\n 13196: a4 = s1 + 0x2858\n 13200: u64 [a4 + 0x60] = a0\n 13203: u64 [a4 + 0x58] = a1\n 13206: u64 [a4 + 0x50] = a2\n 13209: u64 [a4 + 0x48] = a3\n 13212: a1 = s1 + 0x28a0\n 13216: a0 = u64 [s1 + 0xd8]\n 13220: ra = 570, jump @7\n      : @551 [@dyn 285] (gas: 8)\n 13226: a0 = s1 + 0x2858\n 13230: u64 [a0 + 128] = 0\n 13234: u64 [a0 + 120] = 0\n 13237: u64 [a0 + 112] = 0\n 13240: u64 [a0 + 104] = 0\n 13243: a1 = s1 + 0x28c0\n 13247: a0 = u64 [s1 + 0xc8]\n 13251: ra = 572, jump @7\n      : @552 [@dyn 286] (gas: 8)\n 13257: a1 = s1 + 0x2858\n 13261: u64 [a1 + 160] = 0\n 13265: u64 [a1 + 152] = 0\n 13269: u64 [a1 + 144] = 0\n 13273: u64 [a1 + 136] = 0x2\n 13278: a0 = s1 + 0x17a0\n 13282: a1 = s1 + 0x28e0\n 13286: ra = 574, jump @6\n      : @553 [@dyn 287] (gas: 11)\n 13292: a1 = s1 + 0x1058\n 13296: a2 = a1 + 0x700\n 13300: a0 = u64 [a2 + 0x58]\n 13303: u64 [s1 + 0x78] = a0\n 13306: a0 = u64 [a2 + 0x50]\n 13309: u64 [s1 + 0x70] = a0\n 13312: a0 = u64 [a2 + 0x48]\n 13315: u64 [s1 + 0x80] = a0\n 13319: a0 = s1 + 0x1780\n 13323: a1 = 0x40\n 13326: ra = 576, jump @2\n      : @554 [@dyn 288] (gas: 14)\n 13332: a2 = s1 + 0x1058\n 13336: t0 = u64 [a2 + 0x740]\n 13340: a1 = a2 + 0x700\n 13344: a5 = u64 [a1 + 0x38]\n 13347: a4 = u64 [a1 + 0x30]\n 13350: a0 = u64 [a1 + 0x28]\n 13353: a3 = a4 | t0\n 13356: a1 = a0 | a5\n 13359: a1 = a1 | a3\n 13362: a1 = a1 >> 0x20\n 13365: a3 = a3 | a5\n 13368: a3 = a3 << 0x20\n 13371: a1 = a1 | a3\n 13374: jump @533 if a1 != 0\n      : @555 (gas: 11)\n 13378: u64 [a2 + 1816] = 0\n 13382: u64 [a2 + 1808] = 0\n 13386: u64 [a2 + 1800] = 0\n 13390: a3 = 0x23b872dd00000000\n 13400: a1 = s1 + 0x1760\n 13404: u64 [a2 + 0x720] = a3\n 13408: u64 [s1 + 0xd8] = a0\n 13412: u64 [s1 + 0xc8] = a4\n 13416: u64 [s1 + 0x90] = a5\n 13420: u64 [s1 + 0x88] = t0\n 13424: ra = 578, jump @4\n      : @556 [@dyn 289] (gas: 6)\n 13430: a0 = u64 [s1 + 0xa0]\n 13434: ra = 0x244\n 13438: ecalli 0 // 'address'\n 13439: a2 = u64 [s1 + 0xd0]\n 13443: t0 = 0x246\n 13447: jump @1010\n      : @557 [@dyn 290] (gas: 2)\n 13450: a2 = u64 [s1 + 0xd0]\n 13454: t0 = 582, jump @1010\n      : @558 [@dyn 291] (gas: 14)\n 13460: u64 [s1 + 0x68] = a1\n 13463: a0 = a0 >> 0x20\n 13466: a1 = reverse a2\n 13468: a2 = a1 << 0x20\n 13471: a0 = a0 | a2\n 13474: u64 [s1 + 0x60] = a0\n 13477: a1 = a1 >> 0x20\n 13480: u64 [s1 + 0x58] = a1\n 13483: a0 = u64 [s1 + 0xa0]\n 13487: ra = 0x248\n 13491: ecalli 5 // 'caller'\n 13493: a2 = u64 [s1 + 0xd0]\n 13497: t0 = 0x24a\n 13501: jump @997\n      : @559 [@dyn 292] (gas: 2)\n 13504: a2 = u64 [s1 + 0xd0]\n 13508: t0 = 586, jump @997\n      : @560 [@dyn 293] (gas: 50)\n 13514: t0 = a1 | a0\n 13517: a3 = a3 >> 0x20\n 13520: a2 = reverse a2\n 13522: a1 = a2 << 0x20\n 13525: t1 = a1 | a3\n 13528: t2 = a2 >> 0x20\n 13531: a0 = u64 [s1 + 0xd8]\n 13535: a3 = a0 + 0x4\n 13538: a5 = a3 <u a0\n 13541: a0 = u64 [s1 + 0xc8]\n 13545: a4 = a0 + a5\n 13548: a0 = a4 <u a0\n 13551: a0 = a5 if a5 == 0\n 13554: a1 = u64 [s1 + 0x90]\n 13558: a0 = a0 + a1\n 13561: a5 = a0 <u a1\n 13564: a1 = u64 [s1 + 0x88]\n 13568: a5 = a5 + a1\n 13571: a1 = s1 + 0x1058\n 13575: a2 = u64 [s1 + 0x58]\n 13578: u64 [a1 + 0x698] = a2\n 13582: a2 = u64 [s1 + 0x60]\n 13585: u64 [a1 + 0x690] = a2\n 13589: a2 = u64 [s1 + 0x68]\n 13592: u64 [a1 + 0x688] = a2\n 13596: a2 = a1 + 0x600\n 13600: u64 [a2 + 0xe0] = a5\n 13604: u64 [a2 + 0xd8] = a0\n 13608: a0 = u64 [s1 + 0xb8]\n 13612: u64 [a2 + 0x80] = a0\n 13616: a0 = u64 [s1 + 0xb0]\n 13620: u64 [a2 + 0x78] = a0\n 13623: a0 = u64 [s1 + 0xa8]\n 13627: u64 [a2 + 0x70] = a0\n 13630: a0 = u64 [s1 + 0xc0]\n 13634: u64 [a2 + 0x68] = a0\n 13637: u64 [a1 + 1696] = 0\n 13641: u64 [a2 + 0xd0] = a4\n 13645: u64 [a2 + 0xc8] = a3\n 13649: u64 [a1 + 0x6b8] = t2\n 13653: u64 [a1 + 0x6b0] = t1\n 13657: u64 [a1 + 0x6a8] = t0\n 13661: a5 = a1\n 13663: a0 = s1 + 0x1740\n 13667: a1 = s1 + 0x1720\n 13671: a2 = s1 + 0x1700\n 13675: a3 = s1 + 0x16e0\n 13679: a4 = s1 + 0x16c0\n 13683: u64 [a5 + 1728] = 0\n 13687: ra = 588, jump @971\n      : @561 [@dyn 294] (gas: 17)\n 13693: a1 = s1 + 0x1058\n 13697: a0 = u64 [a1 + 0x6f0]\n 13701: t0 = u64 [a1 + 0x700]\n 13705: t1 = u64 [a1 + 0x6e8]\n 13709: a3 = u64 [a1 + 0x6f8]\n 13713: a1 = u64 [s1 + 0xc8]\n 13717: a4 = a0 ^ a1\n 13720: a5 = a0 <u a1\n 13723: ra = u64 [s1 + 0xd8]\n 13727: t2 = t1 <u ra\n 13730: a5 = t2 if a4 == 0\n 13733: a2 = u64 [s1 + 0x90]\n 13737: a4 = a3 - a2\n 13740: a3 = a3 <u a2\n 13743: a2 = u64 [s1 + 0x88]\n 13747: a2 = t0 - a2\n 13750: t0 = 590, jump @1016\n      : @562 [@dyn 295] (gas: 3)\n 13756: u64 [s1 + 0x68] = a0\n 13759: ecalli 9 // 'ref_time_left'\n 13761: fallthrough\n      : @563 (gas: 35)\n 13762: a0 = u64 [s1 + 0x70]\n 13765: a0 = reverse a0\n 13767: a1 = a0 << 0x20\n 13770: a2 = u64 [s1 + 0x78]\n 13773: a2 = reverse a2\n 13775: a2 = a2 >> 0x20\n 13778: a1 = a1 | a2\n 13781: a2 = u64 [s1 + 0x80]\n 13785: a2 = reverse a2\n 13787: a3 = a2 << 0x20\n 13790: a0 = a0 >> 0x20\n 13793: a0 = a0 | a3\n 13796: a3 = u64 [s1 + 0xd0]\n 13800: a2 = a2 >> 0x20\n 13803: u64 [a3 + 0x8] = a0\n 13806: u64 [a3] = a1\n 13808: u32 [a3 + 0x10] = a2\n 13811: a2 = s1 + 0x2858\n 13815: u64 [a2 + 192] = 0\n 13819: u64 [a2 + 184] = 0\n 13823: u64 [a2 + 176] = 0\n 13827: a0 = u64 [s1 + 0x68]\n 13830: t0 = a0\n 13832: a5 = u64 [s1 + 0x58]\n 13835: a0 = a0 | a5\n 13838: a1 = u64 [s1 + 0x60]\n 13841: a4 = u64 [s1 + 0x50]\n 13844: a1 = a1 | a4\n 13847: a0 = a0 | a1\n 13850: a0 = a0 >> 0x20\n 13853: a1 = a1 | a5\n 13856: a1 = a1 << 0x20\n 13859: a0 = a0 | a1\n 13862: u64 [a2 + 168] = 0\n 13866: jump @533 if a0 != 0\n      : @564 (gas: 3)\n 13870: a0 = u64 [s1 + 0xd8]\n 13874: a1 = t0\n 13876: ra = 592, jump @16\n      : @565 [@dyn 296] (gas: 4)\n 13882: u64 [s1 + 0x80] = a0\n 13886: a1 = 0x20\n 13889: a0 = u64 [s1 + 0xd8]\n 13893: ra = 594, jump @16\n      : @566 [@dyn 297] (gas: 33)\n 13899: a2 = s1 + 0x2858\n 13903: u32 [a2 + 200] = 0x20\n 13908: u64 [a2 + 256] = 0xffffffffffffffff\n 13913: u64 [a2 + 248] = 0xffffffffffffffff\n 13918: u64 [a2 + 240] = 0xffffffffffffffff\n 13923: u64 [a2 + 232] = 0xffffffffffffffff\n 13928: a1 = u64 [s1 + 0xd0]\n 13932: a1 = a1 << 0x20\n 13935: a1 = a1 >> 0x20\n 13938: a2 = 0x800000000\n 13948: t0 = a1 | a2\n 13951: a1 = s1 + 0x2900\n 13955: a1 = a1 << 0x20\n 13958: a1 = a1 >> 0x20\n 13961: a2 = s1 + 0x2940\n 13965: a2 = a2 << 0x20\n 13968: a3 = a2 | a1\n 13971: a1 = u64 [s1 + 0x80]\n 13975: a1 = a1 << 0x20\n 13978: a1 = a1 >> 0x20\n 13981: a4 = u64 [s1 + 0x68]\n 13984: a4 = a4 << 0x20\n 13987: a4 = a4 | a1\n 13990: a0 = a0 << 0x20\n 13993: a0 = a0 >> 0x20\n 13996: a1 = s1 + 0x2920\n 14000: a1 = a1 << 0x20\n 14003: a5 = a1 | a0\n 14006: a1 = 0xffffffffffffffff\n 14009: a2 = 0xffffffffffffffff\n 14012: a0 = t0\n 14014: ecalli 1 // 'call'\n 14016: fallthrough\n      : @567 (gas: 1)\n 14017: jump @652 if a0 != 0\n      : @568 (gas: 2)\n 14021: ecalli 11 // 'return_data_size'\n 14023: fallthrough\n      : @569 (gas: 2)\n 14024: a1 = 0x20\n 14027: jump @571 if a0 >=u a1\n      : @570 (gas: 3)\n 14030: ecalli 11 // 'return_data_size'\n 14032: a1 = a0\n 14034: fallthrough\n      : @571 (gas: 18)\n 14035: a2 = s1 + 0x1058\n 14039: t0 = u64 [s1 + 0xd8]\n 14043: a4 = u64 [s1 + 0xc8]\n 14047: a5 = u64 [s1 + 0x90]\n 14051: a3 = u64 [s1 + 0x88]\n 14055: u64 [s1 + 0x78] = a1\n 14058: u64 [s1 + 128] = 0\n 14062: u64 [a2 + 0x608] = a1\n 14066: u64 [a2 + 0x628] = t0\n 14070: u64 [a2 + 1552] = 0\n 14074: u64 [a2 + 0x630] = a4\n 14078: u64 [a2 + 1560] = 0\n 14082: u64 [a2 + 0x638] = a5\n 14086: u64 [a2 + 1568] = 0\n 14090: a0 = s1 + 0x1680\n 14094: a1 = s1 + 0x1660\n 14098: u64 [a2 + 0x640] = a3\n 14102: ra = 596, jump @931\n      : @572 [@dyn 298] (gas: 40)\n 14108: t0 = u64 [s1 + 0xd8]\n 14112: a1 = u64 [s1 + 0x78]\n 14115: a0 = a1 + t0\n 14118: a1 = a0 <u a1\n 14121: t1 = u64 [s1 + 0xc8]\n 14125: a5 = u64 [s1 + 0x80]\n 14129: a2 = a5 + t1\n 14132: a2 = a2 + a1\n 14135: a3 = a2 ^ a5\n 14138: a4 = a2 <u a5\n 14141: a4 = a1 if a3 == 0\n 14144: ra = u64 [s1 + 0x90]\n 14148: a1 = a5 + ra\n 14151: a4 = a4 + a1\n 14154: t2 = a4 <u a1\n 14157: a1 = a1 <u a5\n 14160: a3 = u64 [s1 + 0x88]\n 14164: a5 = a5 + a3\n 14167: a1 = a1 + a5\n 14170: t2 = t2 + a1\n 14173: a1 = s1 + 0x1058\n 14177: u64 [a1 + 0x5b8] = a4\n 14181: a1 = s1 + 0x1058\n 14185: u64 [a1 + 0x5b0] = a2\n 14189: a1 = s1 + 0x1058\n 14193: u64 [a1 + 0x5a8] = a0\n 14197: a0 = s1 + 0x1058\n 14201: u64 [a0 + 0x5e0] = a3\n 14205: a0 = s1 + 0x1058\n 14209: u64 [a0 + 0x5d8] = ra\n 14213: a0 = s1 + 0x1058\n 14217: u64 [a0 + 0x5d0] = t1\n 14221: a0 = s1 + 0x1058\n 14225: u64 [a0 + 0x5c8] = t0\n 14229: a0 = s1 + 0x1640\n 14233: a1 = s1 + 0x1620\n 14237: a2 = s1 + 0x1600\n 14241: a4 = s1 + 0x1058\n 14245: u64 [a4 + 0x5c0] = t2\n 14249: ra = 598, jump @948\n      : @573 [@dyn 299] (gas: 3)\n 14255: a0 = s1 + 0x15e0\n 14259: a1 = 0x40\n 14262: ra = 600, jump @2\n      : @574 [@dyn 300] (gas: 7)\n 14268: a3 = s1 + 0x1058\n 14272: a5 = a3 + 0x500\n 14276: a0 = u64 [a5 + 0xa0]\n 14280: a1 = u64 [a5 + 0x98]\n 14284: a2 = u64 [a5 + 0x90]\n 14288: a4 = u64 [a5 + 0x88]\n 14292: t0 = 602, jump @1008\n      : @575 [@dyn 301] (gas: 1)\n 14298: jump @533 if a0 != 0\n      : @576 (gas: 13)\n 14302: a0 = u64 [s1 + 0xc0]\n 14306: a2 = a3 + 0x500\n 14310: u64 [a2 + 0x68] = a0\n 14313: a0 = u64 [s1 + 0xa8]\n 14317: u64 [a2 + 0x70] = a0\n 14320: a0 = u64 [s1 + 0xb0]\n 14324: u64 [a2 + 0x78] = a0\n 14327: a1 = s1 + 0x15c0\n 14331: a0 = u64 [s1 + 0xb8]\n 14335: u64 [a2 + 0x80] = a0\n 14339: a0 = a4\n 14341: u64 [s1 + 0xd8] = a4\n 14345: ra = 604, jump @4\n      : @577 [@dyn 302] (gas: 6)\n 14351: a0 = u64 [s1 + 0xa0]\n 14355: ra = 0x25e\n 14359: ecalli 5 // 'caller'\n 14361: a2 = u64 [s1 + 0xd0]\n 14365: t0 = 0x260\n 14369: jump @997\n      : @578 [@dyn 303] (gas: 2)\n 14372: a2 = u64 [s1 + 0xd0]\n 14376: t0 = 608, jump @997\n      : @579 [@dyn 304] (gas: 25)\n 14382: t0 = a1 | a0\n 14385: a3 = a3 >> 0x20\n 14388: a2 = reverse a2\n 14390: a1 = a2 << 0x20\n 14393: a1 = a1 | a3\n 14396: a2 = a2 >> 0x20\n 14399: a3 = u64 [0x200e8]\n 14404: a0 = s1 + 0x1058\n 14408: u64 [a0 + 0x560] = a3\n 14412: a3 = u64 [0x200f0]\n 14417: a4 = u64 [0x200f8]\n 14422: a5 = u64 [0x20100]\n 14427: u64 [a0 + 0x558] = a3\n 14431: a3 = a0 + 0x500\n 14435: u64 [a3 + 0x50] = a4\n 14438: u64 [a0 + 1344] = 0\n 14442: u64 [a3 + 0x48] = a5\n 14445: u64 [a3 + 0x38] = a2\n 14448: u64 [a3 + 0x30] = a1\n 14451: a1 = 0x20\n 14454: a2 = s1 + 0x15a0\n 14458: a3 = s1 + 0x1580\n 14462: u64 [a0 + 0x528] = t0\n 14466: a0 = u64 [s1 + 0xd8]\n 14470: ra = 610, jump @10\n      : @580 [@dyn 305] (gas: 5)\n 14476: a0 = 0\n 14478: a1 = u64 [s1 + 0x98]\n 14482: a2 = 0\n 14484: ecalli 12 // 'seal_return'\n 14486: jump @863\n      : @581 (gas: 3)\n 14489: a0 = s1 + 0x1da0\n 14493: a1 = 0x40\n 14496: ra = 612, jump @2\n      : @582 [@dyn 306] (gas: 14)\n 14502: a0 = s1 + 0x1858\n 14506: a2 = a0 + 0x500\n 14510: a1 = u64 [a2 + 0x60]\n 14513: u64 [s1 + 0xd0] = a1\n 14517: a1 = u64 [a2 + 0x58]\n 14520: u64 [s1 + 0xc8] = a1\n 14524: a1 = u64 [a2 + 0x50]\n 14527: u64 [s1 + 0xc0] = a1\n 14531: a0 = u64 [a2 + 0x48]\n 14534: u64 [s1 + 0xd8] = a0\n 14538: ra = 0x266\n 14542: ecalli 11 // 'return_data_size'\n 14544: t0 = 0x268\n 14548: jump @1004\n      : @583 [@dyn 307] (gas: 1)\n 14551: t0 = 616, jump @1004\n      : @584 [@dyn 308] (gas: 1)\n 14557: jump @533 if a1 != 0\n      : @585 (gas: 3)\n 14561: a2 = a0\n 14563: a0 = a0 >> 0x20\n 14566: jump @533 if a0 != 0\n      : @586 (gas: 6)\n 14570: i32 a0 = a2 + 0\n 14572: u64 [s1 + 0xd0] = a0\n 14576: a0 = u64 [s1 + 0xd8]\n 14580: a1 = a2\n 14582: u64 [s1 + 0xc8] = a2\n 14586: ra = 618, jump @16\n      : @587 [@dyn 309] (gas: 11)\n 14592: a1 = s1 + 0x2858\n 14596: a2 = u64 [s1 + 0xc8]\n 14600: u32 [a1 + 0x2a8] = a2\n 14604: i32 a0 = a0 + 0\n 14606: a1 = s1 + 0x3000\n 14610: i32 a1 = a1 + 0xfffffffffffffb00\n 14614: a2 = 0\n 14616: ecalli 10 // 'return_data_copy'\n 14618: a0 = s1 + 0x2858\n 14622: a0 = i32 [a0 + 0x2a8]\n 14626: fallthrough\n      : @588 (gas: 2)\n 14627: a1 = u64 [s1 + 0xd0]\n 14631: jump @533 if a0 <u a1\n      : @589 (gas: 2)\n 14635: ecalli 11 // 'return_data_size'\n 14637: fallthrough\n      : @590 (gas: 3)\n 14638: a1 = a0\n 14640: a0 = a0 >> 0x20\n 14643: jump @533 if a0 != 0\n      : @591 (gas: 3)\n 14647: a0 = u64 [s1 + 0xd8]\n 14651: u64 [s1 + 0xd0] = a1\n 14655: ra = 620, jump @16\n      : @592 [@dyn 310] (gas: 5)\n 14661: i32 a1 = a0 + 0\n 14663: a2 = i32 [s1 + 0xd0]\n 14667: a0 = 0x1\n 14670: ecalli 12 // 'seal_return'\n 14672: fallthrough\n      : @593 (gas: 8)\n 14673: a0 = u64 [s1 + 0x50]\n 14676: a1 = u64 [s1 + 0x40]\n 14679: a0 = a0 | a1\n 14682: a1 = u64 [s1 + 0x58]\n 14685: a2 = u64 [s1 + 0x48]\n 14688: a1 = a1 | a2\n 14691: a0 = a0 | a1\n 14694: jump @630 if a0 != 0\n      : @594 (gas: 4)\n 14698: a0 = s1 + 0x7ff\n 14702: a0 = a0 + 0x341\n 14706: a1 = 0x40\n 14709: ra = 622, jump @2\n      : @595 [@dyn 311] (gas: 15)\n 14715: a2 = s1 + 0x7ff\n 14719: a2 = a2 + 0x59\n 14722: t0 = u64 [a2 + 0x300]\n 14726: a1 = a2 + 0x200\n 14730: a5 = u64 [a1 + 0xf8]\n 14734: a4 = u64 [a1 + 0xf0]\n 14738: a0 = u64 [a1 + 0xe8]\n 14742: a3 = a4 | t0\n 14745: a1 = a0 | a5\n 14748: a1 = a1 | a3\n 14751: a1 = a1 >> 0x20\n 14754: a3 = a3 | a5\n 14757: a3 = a3 << 0x20\n 14760: a1 = a1 | a3\n 14763: jump @533 if a1 != 0\n      : @596 (gas: 12)\n 14767: u64 [a2 + 728] = 0\n 14771: u64 [a2 + 720] = 0\n 14775: u64 [a2 + 712] = 0\n 14779: a3 = 0x8c379a000000000\n 14789: a1 = s1 + 0x7ff\n 14793: a1 = a1 + 0x321\n 14797: u64 [a2 + 0x2e0] = a3\n 14801: u64 [s1 + 0xd8] = a0\n 14805: u64 [s1 + 0xd0] = a4\n 14809: u64 [s1 + 0xc0] = t0\n 14813: u64 [s1 + 0xc8] = a5\n 14817: ra = 624, jump @4\n      : @597 [@dyn 312] (gas: 1)\n 14823: t0 = 626, jump @992\n      : @598 [@dyn 313] (gas: 1)\n 14829: jump @533 if a0 == 0\n      : @599 (gas: 12)\n 14833: i32 a0 = a1 + 0x4\n 14836: a2 = s1 + 0x7ff\n 14840: a2 = a2 + 0x59\n 14843: u64 [a2 + 704] = 0\n 14847: u64 [a2 + 696] = 0\n 14851: u64 [a2 + 680] = 0x20\n 14856: a1 = s1 + 0x7ff\n 14860: a1 = a1 + 0x301\n 14864: u64 [a2 + 688] = 0\n 14868: u64 [s1 + 0xc8] = a3\n 14872: u64 [s1 + 0xc0] = a4\n 14876: ra = 628, jump @4\n      : @600 [@dyn 314] (gas: 1)\n 14882: t0 = 630, jump @994\n      : @601 [@dyn 315] (gas: 1)\n 14888: jump @533 if a0 == 0\n      : @602 (gas: 10)\n 14892: i32 a0 = a1 + 0x24\n 14895: a2 = s1 + 0x7ff\n 14899: a2 = a2 + 0x59\n 14902: u64 [a2 + 672] = 0\n 14906: u64 [a2 + 664] = 0\n 14910: u64 [a2 + 648] = 0x25\n 14915: a1 = s1 + 0x7ff\n 14919: a1 = a1 + 0x2e1\n 14923: u64 [a2 + 656] = 0\n 14927: ra = 632, jump @4\n      : @603 [@dyn 316] (gas: 1)\n 14933: t0 = 634, jump @996\n      : @604 [@dyn 317] (gas: 1)\n 14939: jump @533 if a0 == 0\n      : @605 (gas: 16)\n 14943: i32 a0 = a1 + 0x44\n 14946: a1 = u64 [0x20198]\n 14951: u64 [s1 + 0xc0] = a2\n 14955: a5 = s1 + 0x7ff\n 14959: a5 = a5 + 0x59\n 14962: a4 = a5 + 0x200\n 14966: u64 [a4 + 0x80] = a1\n 14970: a1 = u64 [0x201a0]\n 14975: a2 = u64 [0x201a8]\n 14980: a3 = u64 [0x201b0]\n 14985: u64 [a4 + 0x78] = a1\n 14988: u64 [a4 + 0x70] = a2\n 14991: a1 = s1 + 0x7ff\n 14995: a1 = a1 + 0x2c1\n 14999: u64 [a4 + 0x68] = a3\n 15002: ra = 636, jump @4\n      : @606 [@dyn 318] (gas: 1)\n 15008: t0 = 638, jump @995\n      : @607 [@dyn 319] (gas: 1)\n 15014: jump @533 if a0 == 0\n      : @608 (gas: 12)\n 15018: i32 a0 = a2 + 0x64\n 15021: a3 = s1 + 0x7ff\n 15025: a3 = a3 + 0x59\n 15028: u64 [a3 + 600] = 0\n 15032: u64 [a3 + 592] = 0\n 15036: a1 = 0x207a65726f000000\n 15046: u64 [a3 + 0x260] = a1\n 15050: a1 = s1 + 0x7ff\n 15054: a1 = a1 + 0x2a1\n 15058: u64 [a3 + 584] = 0\n 15062: ra = 0x216\n 15066: jump @4\n      : @609 (gas: 4)\n 15069: a0 = u64 [s1 + 0x70]\n 15072: ra = 0x280\n 15076: ecalli 5 // 'caller'\n 15078: fallthrough\n      : @610 [@dyn 320] (gas: 5)\n 15079: a2 = u64 [s1 + 0xb0]\n 15083: a0 = u64 [a2 + 0x8]\n 15086: a1 = i32 [a2 + 0x10]\n 15089: a2 = u64 [a2]\n 15091: t0 = 642, jump @1001\n      : @611 [@dyn 321] (gas: 7)\n 15097: u64 [s1 + 1720] = 0\n 15101: u64 [s1 + 0x6b0] = a1\n 15105: u64 [s1 + 0x6a8] = a0\n 15109: a1 = s1 + 0x6a0\n 15113: u64 [s1 + 0x6a0] = a3\n 15117: a0 = 0\n 15119: ra = 644, jump @4\n      : @612 [@dyn 322] (gas: 7)\n 15125: u64 [s1 + 1688] = 0\n 15129: u64 [s1 + 1680] = 0\n 15133: u64 [s1 + 1664] = 0x4\n 15138: a0 = 0x20\n 15141: a1 = s1 + 0x680\n 15145: u64 [s1 + 1672] = 0\n 15149: ra = 646, jump @4\n      : @613 [@dyn 323] (gas: 3)\n 15155: a2 = u64 [s1 + 0x58]\n 15158: a0 = i32 [a2]\n 15160: jump @615 if a0 >u 63\n      : @614 (gas: 2)\n 15164: u32 [a2 + 0] = 0x40\n 15167: fallthrough\n      : @615 (gas: 12)\n 15168: a0 = sp + 0xffffffffffffffe0\n 15171: a0 = a0 & 0xffffffffffffffe0\n 15174: u64 [s1 + 0xd8] = a0\n 15178: sp = a0\n 15180: i32 a2 = a0 + 0\n 15182: a1 = 0x40\n 15185: a0 = u64 [s1 + 0x60]\n 15188: ra = 0x288\n 15192: ecalli 8 // 'hash_keccak_256'\n 15194: a3 = u64 [s1 + 0xd8]\n 15198: t0 = 0x28a\n 15202: jump @1000\n      : @616 [@dyn 324] (gas: 2)\n 15205: a3 = u64 [s1 + 0xd8]\n 15209: t0 = 650, jump @1000\n      : @617 [@dyn 325] (gas: 8)\n 15215: a5 = a4 + 0x300\n 15219: u64 [a5 + 0x80] = a3\n 15223: u64 [a5 + 0x78] = a2\n 15226: u64 [a5 + 0x70] = a1\n 15229: u64 [a5 + 0x68] = a0\n 15232: a0 = s1 + 0x660\n 15236: a1 = s1 + 0x23c0\n 15240: ra = 652, jump @6\n      : @618 [@dyn 326] (gas: 21)\n 15246: a1 = s1 + 0x600\n 15250: a0 = u64 [a1 + 0x78]\n 15253: t0 = u64 [s1 + 0x660]\n 15257: a2 = u64 [a1 + 0x70]\n 15260: a3 = u64 [a1 + 0x68]\n 15263: a5 = u64 [s1 + 0x88]\n 15267: a4 = a0 ^ a5\n 15270: a1 = a0 <u a5\n 15273: a0 = u64 [s1 + 0x80]\n 15277: a5 = a2 <u a0\n 15280: a5 = a1 if a4 != 0\n 15283: a1 = u64 [s1 + 0x78]\n 15286: t1 = a3 ^ a1\n 15289: a3 = a3 <u a1\n 15292: a1 = u64 [s1 + 0x68]\n 15295: a1 = t0 <u a1\n 15298: a1 = a3 if t1 != 0\n 15301: a0 = a0 ^ a2\n 15304: a0 = a0 | a4\n 15307: a1 = a5 if a0 != 0\n 15310: jump @661 if a1 == 0\n      : @619 (gas: 3)\n 15314: a0 = s1 + 0x360\n 15318: a1 = 0x40\n 15321: ra = 654, jump @2\n      : @620 [@dyn 327] (gas: 6)\n 15327: a1 = s1 + 0x300\n 15331: a4 = u64 [a1 + 0x78]\n 15334: a5 = u64 [a1 + 0x70]\n 15337: a3 = u64 [a1 + 0x68]\n 15340: a0 = u64 [a1 + 0x60]\n 15343: t0 = 656, jump @1013\n      : @621 [@dyn 328] (gas: 1)\n 15349: jump @533 if a1 != 0\n      : @622 (gas: 11)\n 15353: u64 [s1 + 848] = 0\n 15357: u64 [s1 + 840] = 0\n 15361: u64 [s1 + 832] = 0\n 15365: a2 = 0x8c379a000000000\n 15375: a1 = s1 + 0x340\n 15379: u64 [s1 + 0x358] = a2\n 15383: u64 [s1 + 0xd8] = a0\n 15387: u64 [s1 + 0xd0] = a3\n 15391: u64 [s1 + 0xc8] = a4\n 15395: u64 [s1 + 0xc0] = a5\n 15399: ra = 658, jump @4\n      : @623 [@dyn 329] (gas: 5)\n 15405: a1 = u64 [s1 + 0xd8]\n 15409: a0 = u64 [s1 + 0xc8]\n 15413: a3 = u64 [s1 + 0xc0]\n 15417: a3 = a3 | a0\n 15420: t0 = 660, jump @993\n      : @624 [@dyn 330] (gas: 1)\n 15426: jump @533 if a0 == 0\n      : @625 (gas: 9)\n 15430: i32 a0 = a1 + 0x4\n 15433: u64 [s1 + 824] = 0\n 15437: u64 [s1 + 816] = 0\n 15441: u64 [s1 + 800] = 0x20\n 15446: a1 = s1 + 0x320\n 15450: u64 [s1 + 808] = 0\n 15454: u64 [s1 + 0xc8] = a3\n 15458: u64 [s1 + 0xc0] = a4\n 15462: ra = 662, jump @4\n      : @626 [@dyn 331] (gas: 9)\n 15468: a3 = u64 [s1 + 0xc8]\n 15472: a2 = u64 [s1 + 0xd0]\n 15476: a1 = u64 [s1 + 0xd8]\n 15480: a0 = u64 [s1 + 0xc0]\n 15484: a0 = a0 + 0xffffffffffffffdc\n 15487: a0 = a1 <u a0\n 15490: a0 = 0 if a2 != 0\n 15492: a0 = 0 if a3 != 0\n 15494: jump @533 if a0 == 0\n      : @627 (gas: 7)\n 15498: i32 a0 = a1 + 0x24\n 15501: u64 [s1 + 792] = 0\n 15505: u64 [s1 + 784] = 0\n 15509: u64 [s1 + 768] = 0x1f\n 15514: a1 = s1 + 0x300\n 15518: u64 [s1 + 776] = 0\n 15522: ra = 664, jump @4\n      : @628 [@dyn 332] (gas: 8)\n 15528: a2 = u64 [s1 + 0xd8]\n 15532: a0 = 0xffffffbc\n 15542: a0 = a2 <u a0\n 15545: a1 = u64 [s1 + 0xd0]\n 15549: a0 = 0 if a1 != 0\n 15551: a1 = u64 [s1 + 0xc8]\n 15555: a0 = 0 if a1 != 0\n 15557: jump @533 if a0 == 0\n      : @629 (gas: 13)\n 15561: i32 a0 = a2 + 0x44\n 15564: a1 = u64 [0x20178]\n 15569: a4 = s1 + 0x200\n 15573: u64 [a4 + 0xf8] = a1\n 15577: a1 = u64 [0x20180]\n 15582: a2 = u64 [0x20188]\n 15587: a3 = u64 [0x201f8]\n 15592: u64 [a4 + 0xf0] = a1\n 15596: u64 [a4 + 0xe8] = a2\n 15600: a1 = s1 + 0x2e0\n 15604: u64 [a4 + 0xe0] = a3\n 15608: ra = 0x1ae\n 15612: jump @4\n      : @630 (gas: 5)\n 15615: a0 = u64 [s1 + 0x38]\n 15618: ra = 0x29a\n 15622: ecalli 5 // 'caller'\n 15624: t0 = 0x29c\n 15628: jump @998\n      : @631 [@dyn 333] (gas: 1)\n 15631: t0 = 668, jump @998\n      : @632 [@dyn 334] (gas: 7)\n 15637: u64 [a2 + 256] = 0\n 15641: u64 [a2 + 0xf8] = a1\n 15645: u64 [a2 + 0xf0] = a0\n 15649: a1 = s1 + 0x1140\n 15653: u64 [a2 + 0xe8] = a3\n 15657: a0 = 0\n 15659: ra = 670, jump @4\n      : @633 [@dyn 335] (gas: 9)\n 15665: a1 = s1 + 0x1058\n 15669: u64 [a1 + 224] = 0\n 15673: u64 [a1 + 216] = 0\n 15677: u64 [a1 + 200] = 0x4\n 15682: a2 = a1\n 15684: a0 = 0x20\n 15687: a1 = s1 + 0x1120\n 15691: u64 [a2 + 208] = 0\n 15695: ra = 672, jump @4\n      : @634 [@dyn 336] (gas: 3)\n 15701: a2 = u64 [s1 + 0x28]\n 15704: a0 = i32 [a2]\n 15706: jump @636 if a0 >u 63\n      : @635 (gas: 2)\n 15710: u32 [a2 + 0] = 0x40\n 15713: fallthrough\n      : @636 (gas: 4)\n 15714: a0 = sp + 0xffffffffffffffe0\n 15717: a0 = a0 & 0xffffffffffffffe0\n 15720: u64 [s1 + 0xd8] = a0\n 15724: t0 = 674, jump @1026\n      : @637 [@dyn 337] (gas: 5)\n 15730: ra = 0x2a4\n 15734: ecalli 8 // 'hash_keccak_256'\n 15736: a3 = u64 [s1 + 0xd8]\n 15740: t0 = 0x2a6\n 15744: jump @1000\n      : @638 [@dyn 338] (gas: 2)\n 15747: a3 = u64 [s1 + 0xd8]\n 15751: t0 = 678, jump @1000\n      : @639 [@dyn 339] (gas: 8)\n 15757: a5 = a4 + 0x500\n 15761: u64 [a5 + 0xe0] = a3\n 15765: u64 [a5 + 0xd8] = a2\n 15769: u64 [a5 + 0xd0] = a1\n 15773: u64 [a5 + 0xc8] = a0\n 15777: a0 = s1 + 0x1100\n 15781: a1 = s1 + 0x2620\n 15785: ra = 680, jump @6\n      : @640 [@dyn 340] (gas: 18)\n 15791: a1 = s1 + 0x1058\n 15795: a0 = u64 [a1 + 0xc0]\n 15799: u64 [s1 + 0xd0] = a0\n 15803: a0 = u64 [a1 + 0xb8]\n 15807: u64 [s1 + 0xc8] = a0\n 15811: a0 = u64 [a1 + 0xb0]\n 15815: u64 [s1 + 0xc0] = a0\n 15819: a0 = u64 [a1 + 0xa8]\n 15823: u64 [s1 + 0xd8] = a0\n 15827: a0 = s1 + 0x2058\n 15831: u64 [a0 + 1536] = 0\n 15835: u64 [a0 + 1528] = 0\n 15839: u64 [a0 + 1520] = 0\n 15843: a1 = a0\n 15845: u64 [a1 + 1512] = 0x3\n 15850: a0 = s1 + 0x10e0\n 15854: a1 = s1 + 0x2640\n 15858: ra = 682, jump @6\n      : @641 [@dyn 341] (gas: 67)\n 15864: a1 = s1 + 0x1058\n 15868: t2 = u64 [a1 + 0x88]\n 15872: a0 = u64 [a1 + 0xa0]\n 15876: u64 [s1 + 0xb8] = a0\n 15880: a3 = u64 [a1 + 0x98]\n 15884: a5 = u64 [a1 + 0x90]\n 15888: ra = u64 [s1 + 0xd8]\n 15892: a1 = ra mulhu t2\n 15895: a0 = u64 [s1 + 0xc0]\n 15899: a2 = a0 * t2\n 15902: a1 = a1 + a2\n 15905: a2 = a1 <u a2\n 15908: a4 = a0 mulhu t2\n 15911: t1 = a4 + a2\n 15914: a4 = ra * a5\n 15917: a1 = a1 + a4\n 15920: u64 [s1 + 0x98] = a1\n 15924: a1 = a1 <u a4\n 15927: a4 = ra mulhu a5\n 15930: a1 = a1 + a4\n 15933: t0 = t1 + a1\n 15936: a2 = a0 * a5\n 15939: a1 = a2 + t0\n 15942: u64 [s1 + 0xb0] = a1\n 15946: a4 = a1 <u a2\n 15949: a1 = t0 <u t1\n 15952: a2 = a0 mulhu a5\n 15955: a1 = a1 + a2\n 15958: a1 = a1 + a4\n 15961: u64 [s1 + 0xa8] = a1\n 15965: a1 = a0 * a3\n 15968: a2 = u64 [s1 + 0xb8]\n 15972: a2 = a2 * ra\n 15975: a1 = a1 + a2\n 15978: u64 [s1 + 0xa0] = a1\n 15982: t0 = u64 [s1 + 0xc8]\n 15986: u64 [s1 + 0x78] = a5\n 15989: a2 = a5 * t0\n 15992: a4 = u64 [s1 + 0xd0]\n 15996: a5 = a4 * t2\n 15999: a5 = a5 + a2\n 16002: a2 = a3 * ra\n 16005: t1 = t0 * t2\n 16008: a2 = a2 + t1\n 16011: u64 [s1 + 0x88] = a3\n 16015: a3 = a3 mulhu ra\n 16018: u64 [s1 + 0x68] = a3\n 16021: a1 = u64 [s1 + 0xa0]\n 16025: a3 = a3 + a1\n 16028: a1 = t0 mulhu t2\n 16031: u64 [s1 + 0xa0] = a1\n 16035: a1 = a1 + a5\n 16038: a5 = a2 <u t1\n 16041: u64 [s1 + 0x70] = a1\n 16044: a1 = a1 + a3\n 16047: t1 = a1 + a5\n 16050: a5 = a0 | a4\n 16053: a1 = ra | t0\n 16056: a1 = a1 | a5\n 16059: a0 = u64 [s1 + 0xb0]\n 16063: a2 = a2 + a0\n 16066: a4 = a2 <u a0\n 16069: a0 = u64 [s1 + 0xa8]\n 16073: t1 = t1 + a0\n 16076: a5 = t1 + a4\n 16079: u64 [s1 + 0x80] = a2\n 16083: jump @644 if a1 == 0\n      : @642 (gas: 52)\n 16087: a1 = a5 ^ a0\n 16090: a2 = a5 <u a0\n 16093: a4 = a2 if a1 != 0\n 16096: a0 = u64 [s1 + 0x68]\n 16099: a3 = a3 <u a0\n 16102: a1 = u64 [s1 + 0xc0]\n 16106: a2 = a1 >u 0\n 16108: ra = a5\n 16110: t0 = u64 [s1 + 0xb8]\n 16114: a5 = t0 >u 0\n 16116: a2 = a2 & a5\n 16119: a5 = u64 [s1 + 0xd8]\n 16123: a5 = t0 mulhu a5\n 16126: a5 = a5 >u 0\n 16128: a2 = a2 | a5\n 16131: t1 = u64 [s1 + 0x88]\n 16135: a5 = a1 mulhu t1\n 16138: a5 = a5 >u 0\n 16140: a2 = a2 | a5\n 16143: a2 = a2 | a3\n 16146: u64 [s1 + 0xc0] = a2\n 16150: a0 = u64 [s1 + 0xa0]\n 16154: a1 = u64 [s1 + 0x70]\n 16157: a0 = a1 <u a0\n 16160: u64 [s1 + 0xb0] = a0\n 16164: a2 = u64 [s1 + 0xd0]\n 16168: a5 = a2 >u 0\n 16170: a0 = u64 [s1 + 0x78]\n 16173: a1 = a0 >u 0\n 16175: a1 = a1 & a5\n 16178: a5 = a2 mulhu t2\n 16181: a5 = a5 >u 0\n 16183: a1 = a1 | a5\n 16186: a5 = ra\n 16188: ra = u64 [s1 + 0xc8]\n 16192: a3 = a0 mulhu ra\n 16195: a3 = a3 >u 0\n 16197: a1 = a1 | a3\n 16200: a0 = u64 [s1 + 0xb0]\n 16204: a1 = a1 | a0\n 16207: a2 = ra | a2\n 16210: a3 = t1 | t0\n 16213: a2 = a2 >u 0\n 16215: a3 = a3 >u 0\n 16217: a2 = a2 & a3\n 16220: a1 = a1 | a2\n 16223: a2 = u64 [s1 + 0x80]\n 16227: a0 = u64 [s1 + 0xc0]\n 16231: a1 = a1 | a0\n 16234: a1 = a1 | a4\n 16237: a1 = a1 & 0x1\n 16240: jump @644 if a1 == 0\n      : @643 (gas: 1)\n 16243: jump @904\n      : @644 (gas: 56)\n 16246: u64 [s1 + 0x90] = a5\n 16250: a1 = u64 [s1 + 0xd8]\n 16254: t0 = a1 * t2\n 16257: a0 = t0 | a2\n 16260: a1 = u64 [s1 + 0x98]\n 16264: t2 = a2\n 16266: a2 = a1 | a5\n 16269: a0 = a0 | a2\n 16272: a0 = a0 <u 0x1\n 16275: u64 [s1 + 0xd8] = a0\n 16279: a0 = clz t2\n 16281: a0 = a0 + 0x40\n 16284: a2 = clz a5\n 16286: a2 = a0 if a5 == 0\n 16289: a0 = clz t0\n 16291: a0 = a0 + 0x40\n 16294: a3 = clz a1\n 16296: a3 = a0 if a1 == 0\n 16299: a0 = a3 + 0x80\n 16303: a4 = t2 | a5\n 16306: a2 = a0 if a4 == 0\n 16309: a5 = a0 <u a3\n 16312: a5 = 0 if a4 != 0\n 16314: a3 = a5 >u 0\n 16316: a0 = a2 <u 0xfa\n 16320: a4 = a0 ^ 0x1\n 16323: a3 = a4 if a5 == 0\n 16326: a0 = a3 <u 0x1\n 16329: a0 = a0 + 0xffffffffffffffff\n 16332: ra = -a3\n 16334: a5 = -a5\n 16336: t1 = a5 - a4\n 16339: a2 = 0xf9 - a2\n 16343: u64 [s1 + 0xc0] = ra\n 16347: a4 = ra >u 0\n 16349: a5 = a0 >u 0\n 16351: u64 [s1 + 0xc8] = a0\n 16355: a5 = a4 if a0 == 0\n 16358: a0 = t1 >u 0\n 16360: u64 [s1 + 0xd0] = a2\n 16364: a2 = a2 <u 0x100\n 16368: a2 = a2 ^ 0x1\n 16371: a2 = a0 if t1 != 0\n 16374: a2 = a5 if a3 != 0\n 16377: a0 = u64 [s1 + 0xd8]\n 16381: a0 = a0 | a2\n 16384: a2 = u64 [s1 + 0x90]\n 16388: a2 = 0 if a0 != 0\n 16390: a3 = t2\n 16392: a3 = 0 if a0 != 0\n 16394: a5 = a1\n 16396: a5 = 0 if a0 != 0\n 16398: u64 [s1 + 0x88] = t0\n 16402: a4 = t0\n 16404: a4 = 0 if a0 != 0\n 16406: jump @707 if a0 != 0\n      : @645 (gas: 8)\n 16410: a0 = u64 [s1 + 0xd0]\n 16414: a0 = a0 ^ 0xff\n 16418: t2 = u64 [s1 + 0xc0]\n 16422: t0 = a0 | t2\n 16425: ra = u64 [s1 + 0xc8]\n 16429: a0 = t1 | ra\n 16432: a0 = t0 | a0\n 16435: jump @707 if a0 == 0\n      : @646 (gas: 18)\n 16439: a3 = u64 [s1 + 0xd0]\n 16443: a2 = a3 + 0x1\n 16446: u64 [s1 + 0xd8] = a2\n 16450: a0 = a2 <u 0x1\n 16453: a0 = a0 + t1\n 16456: u64 [s1 + 0xb0] = a0\n 16460: a0 = a0 | a2\n 16463: a0 = a0 <u 0x1\n 16466: a0 = a0 + t2\n 16469: u64 [s1 + 0xa0] = a0\n 16473: a0 = a0 <u t2\n 16476: a0 = a0 + ra\n 16479: u64 [s1 + 0xa8] = a0\n 16483: a2 = 0xff - a3\n 16487: u64 [s1 + 0xb8] = a2\n 16491: a2 = 0x80 - a2\n 16495: a0 = u64 [s1 + 0x88]\n 16499: ra = 684, jump @1034\n      : @647 [@dyn 342] (gas: 6)\n 16505: u64 [s1 + 0xc8] = a0\n 16509: u64 [s1 + 0xc0] = a1\n 16513: a0 = u64 [s1 + 0x80]\n 16517: a1 = u64 [s1 + 0x90]\n 16521: a2 = u64 [s1 + 0xb8]\n 16525: ra = 686, jump @1039\n      : @648 [@dyn 343] (gas: 9)\n 16531: u64 [s1 + 0x78] = a0\n 16534: a0 = u64 [s1 + 0xc0]\n 16538: a0 = a0 | a1\n 16541: u64 [s1 + 0xc0] = a0\n 16545: a1 = u64 [s1 + 0xd0]\n 16549: a2 = 0x7f - a1\n 16552: a0 = u64 [s1 + 0x88]\n 16556: a1 = u64 [s1 + 0x98]\n 16560: ra = 688, jump @1039\n      : @649 [@dyn 344] (gas: 18)\n 16566: a2 = u64 [s1 + 0xb8]\n 16570: a3 = a2 <u 0x80\n 16574: u64 [s1 + 0xd0] = a3\n 16578: a4 = u64 [s1 + 0xc0]\n 16582: a1 = a4 if a3 != 0\n 16585: a4 = u64 [s1 + 0x90]\n 16589: a1 = a4 if a2 == 0\n 16592: u64 [s1 + 0xc0] = a1\n 16596: a1 = u64 [s1 + 0xc8]\n 16600: a4 = u64 [s1 + 0x78]\n 16603: a1 = a1 | a4\n 16606: a1 = a0 if a3 == 0\n 16609: a0 = u64 [s1 + 0x80]\n 16613: a1 = a0 if a2 == 0\n 16616: u64 [s1 + 0xc8] = a1\n 16620: a0 = u64 [s1 + 0x88]\n 16624: a1 = u64 [s1 + 0x98]\n 16628: ra = 690, jump @1039\n      : @650 [@dyn 345] (gas: 13)\n 16634: a3 = u64 [s1 + 0xa0]\n 16638: a4 = u64 [s1 + 0xa8]\n 16642: a2 = u64 [s1 + 0xb0]\n 16646: a2 = a2 | a4\n 16649: a5 = u64 [s1 + 0xd8]\n 16653: a5 = a5 | a3\n 16656: a2 = a2 | a5\n 16659: a3 = u64 [s1 + 0xd0]\n 16663: a1 = 0 if a3 == 0\n 16665: u64 [s1 + 0xb8] = a1\n 16669: a0 = 0 if a3 == 0\n 16671: u64 [s1 + 0xd0] = a0\n 16675: jump @700 if a2 != 0\n      : @651 (gas: 3)\n 16679: a5 = 0\n 16681: u64 [s1 + 120] = 0\n 16684: jump @706\n      : @652 (gas: 3)\n 16687: a0 = s1 + 0x16a0\n 16691: a1 = 0x40\n 16694: ra = 692, jump @2\n      : @653 [@dyn 346] (gas: 14)\n 16700: a0 = s1 + 0x1058\n 16704: a2 = a0 + 0x600\n 16708: a1 = u64 [a2 + 0x60]\n 16711: u64 [s1 + 0xd0] = a1\n 16715: a1 = u64 [a2 + 0x58]\n 16718: u64 [s1 + 0xc8] = a1\n 16722: a1 = u64 [a2 + 0x50]\n 16725: u64 [s1 + 0xc0] = a1\n 16729: a0 = u64 [a2 + 0x48]\n 16732: u64 [s1 + 0xd8] = a0\n 16736: ra = 0x2b6\n 16740: ecalli 11 // 'return_data_size'\n 16742: t0 = 0x2b8\n 16746: jump @1004\n      : @654 [@dyn 347] (gas: 1)\n 16749: t0 = 696, jump @1004\n      : @655 [@dyn 348] (gas: 1)\n 16755: jump @657 if a1 == 0\n      : @656 (gas: 1)\n 16758: jump @533\n      : @657 (gas: 3)\n 16761: a2 = a0\n 16763: a0 = a0 >> 0x20\n 16766: jump @659 if a0 == 0\n      : @658 (gas: 1)\n 16769: jump @533\n      : @659 (gas: 6)\n 16772: i32 a0 = a2 + 0\n 16774: u64 [s1 + 0xd0] = a0\n 16778: a0 = u64 [s1 + 0xd8]\n 16782: a1 = a2\n 16784: u64 [s1 + 0xc8] = a2\n 16788: ra = 698, jump @16\n      : @660 [@dyn 349] (gas: 11)\n 16794: a1 = s1 + 0x2858\n 16798: a2 = u64 [s1 + 0xc8]\n 16802: u32 [a1 + 0x108] = a2\n 16806: i32 a0 = a0 + 0\n 16808: a1 = s1 + 0x3000\n 16812: i32 a1 = a1 + 0xfffffffffffff960\n 16816: a2 = 0\n 16818: ecalli 10 // 'return_data_copy'\n 16820: a0 = s1 + 0x2858\n 16824: a0 = i32 [a0 + 0x108]\n 16828: jump @588\n      : @661 (gas: 4)\n 16831: a0 = u64 [s1 + 0x70]\n 16834: ra = 0x2bc\n 16838: ecalli 5 // 'caller'\n 16840: fallthrough\n      : @662 [@dyn 350] (gas: 5)\n 16841: a2 = u64 [s1 + 0xb0]\n 16845: a0 = u64 [a2 + 0x8]\n 16848: a1 = i32 [a2 + 0x10]\n 16851: a2 = u64 [a2]\n 16853: t0 = 702, jump @1001\n      : @663 [@dyn 351] (gas: 7)\n 16859: u64 [s1 + 1624] = 0\n 16863: u64 [s1 + 0x650] = a1\n 16867: u64 [s1 + 0x648] = a0\n 16871: a1 = s1 + 0x640\n 16875: u64 [s1 + 0x640] = a3\n 16879: a0 = 0\n 16881: ra = 704, jump @4\n      : @664 [@dyn 352] (gas: 7)\n 16887: u64 [s1 + 1592] = 0\n 16891: u64 [s1 + 1584] = 0\n 16895: u64 [s1 + 1568] = 0x4\n 16900: a0 = 0x20\n 16903: a1 = s1 + 0x620\n 16907: u64 [s1 + 1576] = 0\n 16911: ra = 706, jump @4\n      : @665 [@dyn 353] (gas: 7)\n 16917: a0 = sp + 0xffffffffffffffe0\n 16920: a0 = a0 & 0xffffffffffffffe0\n 16923: u64 [s1 + 0xd8] = a0\n 16927: sp = a0\n 16929: a2 = u64 [s1 + 0x58]\n 16932: a0 = i32 [a2]\n 16934: jump @667 if a0 >u 63\n      : @666 (gas: 2)\n 16938: u32 [a2 + 0] = 0x40\n 16941: fallthrough\n      : @667 (gas: 12)\n 16942: a0 = sp + 0xffffffffffffffe0\n 16945: a0 = a0 & 0xffffffffffffffe0\n 16948: u64 [s1 + 0xd0] = a0\n 16952: sp = a0\n 16954: i32 a2 = a0 + 0\n 16956: a1 = 0x40\n 16959: a0 = u64 [s1 + 0x60]\n 16962: ra = 0x2c4\n 16966: ecalli 8 // 'hash_keccak_256'\n 16968: a3 = u64 [s1 + 0xd0]\n 16972: t0 = 0x2c6\n 16976: jump @1002\n      : @668 [@dyn 354] (gas: 2)\n 16979: a3 = u64 [s1 + 0xd0]\n 16983: t0 = 710, jump @1002\n      : @669 [@dyn 355] (gas: 2)\n 16989: a0 = s1 + 0x600\n 16993: ra = 712, jump @6\n      : @670 [@dyn 356] (gas: 21)\n 16999: a4 = s1 + 0x600\n 17003: a3 = u64 [a4]\n 17005: a0 = u64 [a4 + 0x8]\n 17008: a1 = u64 [a4 + 0x10]\n 17011: a2 = u64 [a4 + 0x18]\n 17014: a4 = u64 [s1 + 0x88]\n 17018: u64 [s1 + 0x5b8] = a4\n 17022: a4 = u64 [s1 + 0x80]\n 17026: u64 [s1 + 0x5b0] = a4\n 17030: a4 = u64 [s1 + 0x78]\n 17033: u64 [s1 + 0x5a8] = a4\n 17037: a4 = u64 [s1 + 0x68]\n 17040: u64 [s1 + 0x5a0] = a4\n 17044: u64 [s1 + 0x5d8] = a2\n 17048: u64 [s1 + 0x5d0] = a1\n 17052: u64 [s1 + 0x5c8] = a0\n 17056: a0 = s1 + 0x5e0\n 17060: a1 = s1 + 0x5c0\n 17064: a2 = s1 + 0x5a0\n 17068: u64 [s1 + 0x5c0] = a3\n 17072: ra = 714, jump @941\n      : @671 [@dyn 357] (gas: 13)\n 17078: a0 = u64 [s1 + 0x5f8]\n 17082: a1 = u64 [s1 + 0x5f0]\n 17086: a2 = u64 [s1 + 0x5e8]\n 17090: a3 = u64 [s1 + 0x5e0]\n 17094: a4 = s1 + 0x2058\n 17098: a5 = a4 + 0x300\n 17102: u64 [a5 + 0xa0] = a0\n 17106: u64 [a5 + 0x98] = a1\n 17110: u64 [a5 + 0x90] = a2\n 17114: u64 [a5 + 0x88] = a3\n 17118: a1 = s1 + 0x23e0\n 17122: a0 = u64 [s1 + 0xd8]\n 17126: ra = 716, jump @7\n      : @672 [@dyn 358] (gas: 9)\n 17132: a0 = s1 + 0x2058\n 17136: u64 [a0 + 960] = 0\n 17140: u64 [a0 + 952] = 0\n 17144: u64 [a0 + 944] = 0\n 17148: a1 = a0\n 17150: u64 [a1 + 936] = 0x1\n 17155: a0 = s1 + 0x580\n 17159: a1 = s1 + 0x2400\n 17163: ra = 718, jump @6\n      : @673 [@dyn 359] (gas: 9)\n 17169: a0 = u64 [s1 + 0x590]\n 17173: u64 [s1 + 0xa8] = a0\n 17177: a0 = u64 [s1 + 0x588]\n 17181: u64 [s1 + 0xa0] = a0\n 17185: a0 = u64 [s1 + 0x580]\n 17189: u64 [s1 + 0xb8] = a0\n 17193: a0 = s1 + 0x560\n 17197: a1 = 0x40\n 17200: ra = 720, jump @2\n      : @674 [@dyn 360] (gas: 13)\n 17206: a1 = s1 + 0x500\n 17210: a5 = u64 [a1 + 0x78]\n 17213: a4 = u64 [a1 + 0x70]\n 17216: a3 = u64 [a1 + 0x68]\n 17219: a0 = u64 [a1 + 0x60]\n 17222: a2 = a3 | a5\n 17225: a1 = a0 | a4\n 17228: a1 = a1 | a2\n 17231: a1 = a1 >> 0x20\n 17234: a2 = a2 | a4\n 17237: a2 = a2 << 0x20\n 17240: a1 = a1 | a2\n 17243: jump @676 if a1 == 0\n      : @675 (gas: 1)\n 17246: jump @533\n      : @676 (gas: 11)\n 17249: u64 [s1 + 1360] = 0\n 17253: u64 [s1 + 1352] = 0\n 17257: u64 [s1 + 1344] = 0\n 17261: a2 = 0xa9059cbb00000000\n 17271: a1 = s1 + 0x540\n 17275: u64 [s1 + 0x558] = a2\n 17279: u64 [s1 + 0xd8] = a0\n 17283: u64 [s1 + 0xd0] = a3\n 17287: u64 [s1 + 0xc8] = a4\n 17291: u64 [s1 + 0xc0] = a5\n 17295: ra = 722, jump @4\n      : @677 [@dyn 361] (gas: 49)\n 17301: a0 = u64 [s1 + 0x70]\n 17304: ecalli 5 // 'caller'\n 17306: a2 = u64 [s1 + 0xb0]\n 17310: a0 = u64 [a2 + 0x8]\n 17313: a1 = i32 [a2 + 0x10]\n 17316: a2 = u64 [a2]\n 17318: a0 = reverse a0\n 17320: a3 = a0 << 0x20\n 17323: a1 = reverse a1\n 17325: a1 = a1 >> 0x20\n 17328: t0 = a1 | a3\n 17331: a0 = a0 >> 0x20\n 17334: a1 = reverse a2\n 17336: a2 = a1 << 0x20\n 17339: t1 = a2 | a0\n 17342: a1 = a1 >> 0x20\n 17345: a0 = u64 [s1 + 0xd8]\n 17349: a2 = a0 + 0x4\n 17352: a3 = a2 <u a0\n 17355: a0 = u64 [s1 + 0xd0]\n 17359: a5 = a0 + a3\n 17362: a4 = a5 <u a0\n 17365: a4 = a3 if a3 == 0\n 17368: a0 = u64 [s1 + 0xc8]\n 17372: a4 = a4 + a0\n 17375: a3 = a4 <u a0\n 17378: a0 = u64 [s1 + 0xc0]\n 17382: a3 = a3 + a0\n 17385: a0 = u64 [s1 + 0x88]\n 17389: u64 [s1 + 0x4d8] = a0\n 17393: a0 = u64 [s1 + 0x80]\n 17397: u64 [s1 + 0x4d0] = a0\n 17401: a0 = u64 [s1 + 0x78]\n 17404: u64 [s1 + 0x4c8] = a0\n 17408: a0 = u64 [s1 + 0x68]\n 17411: u64 [s1 + 0x4c0] = a0\n 17415: u64 [s1 + 1272] = 0\n 17419: u64 [s1 + 0x518] = a3\n 17423: u64 [s1 + 0x510] = a4\n 17427: u64 [s1 + 0x508] = a5\n 17431: u64 [s1 + 0x500] = a2\n 17435: u64 [s1 + 0x4f0] = a1\n 17439: u64 [s1 + 0x4e8] = t1\n 17443: a0 = s1 + 0x520\n 17447: a1 = s1 + 0x500\n 17451: a2 = s1 + 0x4e0\n 17455: a3 = s1 + 0x4c0\n 17459: u64 [s1 + 0x4e0] = t0\n 17463: ra = 724, jump @957\n      : @678 [@dyn 362] (gas: 29)\n 17469: a0 = u64 [s1 + 0x528]\n 17473: t0 = u64 [s1 + 0x538]\n 17477: t1 = u64 [s1 + 0x520]\n 17481: a3 = u64 [s1 + 0x530]\n 17485: a1 = u64 [s1 + 0xd0]\n 17489: a4 = a0 ^ a1\n 17492: a5 = a0 <u a1\n 17495: ra = u64 [s1 + 0xd8]\n 17499: t2 = t1 <u ra\n 17502: a5 = t2 if a4 == 0\n 17505: a2 = u64 [s1 + 0xc8]\n 17509: a4 = a3 - a2\n 17512: a3 = a3 <u a2\n 17515: a2 = u64 [s1 + 0xc0]\n 17519: a2 = t0 - a2\n 17522: a2 = a2 - a3\n 17525: a3 = a4 <u a5\n 17528: a2 = a2 - a3\n 17531: u64 [s1 + 0x90] = a2\n 17535: a4 = a4 - a5\n 17538: u64 [s1 + 0x58] = a4\n 17541: a0 = a0 - a1\n 17544: a0 = a0 - t2\n 17547: u64 [s1 + 0x50] = a0\n 17550: a0 = t1 - ra\n 17553: u64 [s1 + 0x98] = a0\n 17557: ra = 0x2d6\n 17561: ecalli 9 // 'ref_time_left'\n 17563: fallthrough\n      : @679 [@dyn 363] (gas: 5)\n 17564: a0 = u64 [s1 + 0xa0]\n 17568: a0 = reverse a0\n 17570: a1 = a0 << 0x20\n 17573: a2 = u64 [s1 + 0xa8]\n 17577: t0 = 728, jump @1021\n      : @680 [@dyn 364] (gas: 23)\n 17583: a3 = u64 [s1 + 0xb0]\n 17587: a2 = a2 >> 0x20\n 17590: u64 [a3 + 0x8] = a0\n 17593: u64 [a3] = a1\n 17595: u32 [a3 + 0x10] = a2\n 17598: a2 = s1 + 0x2058\n 17602: u64 [a2 + 992] = 0\n 17606: u64 [a2 + 984] = 0\n 17610: u64 [a2 + 976] = 0\n 17614: a0 = u64 [s1 + 0x98]\n 17618: t0 = a0\n 17620: a5 = u64 [s1 + 0x58]\n 17623: a0 = a0 | a5\n 17626: a1 = u64 [s1 + 0x90]\n 17630: a4 = u64 [s1 + 0x50]\n 17633: a1 = a1 | a4\n 17636: a0 = a0 | a1\n 17639: a0 = a0 >> 0x20\n 17642: a1 = a1 | a5\n 17645: a1 = a1 << 0x20\n 17648: a0 = a0 | a1\n 17651: u64 [a2 + 968] = 0\n 17655: jump @682 if a0 == 0\n      : @681 (gas: 1)\n 17658: jump @533\n      : @682 (gas: 3)\n 17661: a0 = u64 [s1 + 0xd8]\n 17665: a1 = t0\n 17667: ra = 730, jump @16\n      : @683 [@dyn 365] (gas: 4)\n 17673: u64 [s1 + 0xb8] = a0\n 17677: a1 = 0x20\n 17680: a0 = u64 [s1 + 0xd8]\n 17684: ra = 732, jump @16\n      : @684 [@dyn 366] (gas: 34)\n 17690: a2 = s1 + 0x2058\n 17694: u32 [a2 + 1000] = 0x20\n 17699: a3 = a2 + 0x400\n 17703: u64 [a3 + 32] = 0xffffffffffffffff\n 17707: u64 [a3 + 24] = 0xffffffffffffffff\n 17711: u64 [a3 + 16] = 0xffffffffffffffff\n 17715: u64 [a3 + 8] = 0xffffffffffffffff\n 17719: a1 = u64 [s1 + 0xb0]\n 17723: a1 = a1 << 0x20\n 17726: a1 = a1 >> 0x20\n 17729: a2 = 0x800000000\n 17739: t0 = a1 | a2\n 17742: a1 = s1 + 0x2420\n 17746: a1 = a1 << 0x20\n 17749: a1 = a1 >> 0x20\n 17752: a2 = s1 + 0x2460\n 17756: a2 = a2 << 0x20\n 17759: a3 = a2 | a1\n 17762: a1 = u64 [s1 + 0xb8]\n 17766: a1 = a1 << 0x20\n 17769: a1 = a1 >> 0x20\n 17772: a4 = u64 [s1 + 0x98]\n 17776: a4 = a4 << 0x20\n 17779: a4 = a4 | a1\n 17782: a0 = a0 << 0x20\n 17785: a0 = a0 >> 0x20\n 17788: a1 = s1 + 0x2440\n 17792: a1 = a1 << 0x20\n 17795: a5 = a1 | a0\n 17798: a1 = 0xffffffffffffffff\n 17801: a2 = 0xffffffffffffffff\n 17804: a0 = t0\n 17806: ecalli 1 // 'call'\n 17808: fallthrough\n      : @685 (gas: 1)\n 17809: jump @687 if a0 == 0\n      : @686 (gas: 1)\n 17812: jump @802\n      : @687 (gas: 2)\n 17815: ecalli 11 // 'return_data_size'\n 17817: fallthrough\n      : @688 (gas: 2)\n 17818: a1 = 0x20\n 17821: jump @690 if a0 >=u a1\n      : @689 (gas: 3)\n 17824: ecalli 11 // 'return_data_size'\n 17826: a1 = a0\n 17828: fallthrough\n      : @690 (gas: 17)\n 17829: u64 [s1 + 0xa8] = a1\n 17833: u64 [s1 + 184] = 0\n 17837: u64 [s1 + 0x460] = a1\n 17841: a0 = u64 [s1 + 0xd8]\n 17845: u64 [s1 + 0x480] = a0\n 17849: u64 [s1 + 1128] = 0\n 17853: a0 = u64 [s1 + 0xd0]\n 17857: u64 [s1 + 0x488] = a0\n 17861: u64 [s1 + 1136] = 0\n 17865: a0 = u64 [s1 + 0xc8]\n 17869: u64 [s1 + 0x490] = a0\n 17873: u64 [s1 + 1144] = 0\n 17877: a0 = s1 + 0x480\n 17881: a1 = s1 + 0x460\n 17885: a3 = u64 [s1 + 0xc0]\n 17889: u64 [s1 + 0x498] = a3\n 17893: ra = 734, jump @931\n      : @691 [@dyn 367] (gas: 34)\n 17899: t0 = u64 [s1 + 0xd8]\n 17903: a0 = u64 [s1 + 0xa8]\n 17907: ra = a0 + t0\n 17910: a1 = ra <u a0\n 17913: t1 = u64 [s1 + 0xd0]\n 17917: a0 = u64 [s1 + 0xb8]\n 17921: a2 = a0 + t1\n 17924: a2 = a2 + a1\n 17927: a3 = a2 ^ a0\n 17930: a4 = a2 <u a0\n 17933: a4 = a1 if a3 == 0\n 17936: a3 = u64 [s1 + 0xc8]\n 17940: a1 = a0 + a3\n 17943: a4 = a4 + a1\n 17946: t2 = a4 <u a1\n 17949: a1 = a1 <u a0\n 17952: a5 = a0\n 17954: a0 = u64 [s1 + 0xc0]\n 17958: a5 = a5 + a0\n 17961: a1 = a1 + a5\n 17964: t2 = t2 + a1\n 17967: a1 = s1 + 0x400\n 17971: u64 [a1 + 0x10] = a4\n 17974: u64 [a1 + 0x8] = a2\n 17977: u64 [s1 + 0x400] = ra\n 17981: u64 [a1 + 0x38] = a0\n 17984: u64 [a1 + 0x30] = a3\n 17987: u64 [s1 + 0x428] = t1\n 17991: u64 [s1 + 0x420] = t0\n 17995: a0 = s1 + 0x440\n 17999: a1 = s1 + 0x420\n 18003: a2 = s1 + 0x400\n 18007: u64 [s1 + 0x418] = t2\n 18011: ra = 736, jump @948\n      : @692 [@dyn 368] (gas: 3)\n 18017: a0 = s1 + 0x3e0\n 18021: a1 = 0x40\n 18024: ra = 738, jump @2\n      : @693 [@dyn 369] (gas: 13)\n 18030: a4 = s1 + 0x300\n 18034: a0 = u64 [a4 + 0xf8]\n 18038: a1 = u64 [a4 + 0xf0]\n 18042: a2 = u64 [a4 + 0xe8]\n 18046: a3 = u64 [a4 + 0xe0]\n 18050: a0 = a0 | a2\n 18053: a2 = a3 | a1\n 18056: a2 = a2 | a0\n 18059: a2 = a2 >> 0x20\n 18062: a0 = a0 | a1\n 18065: a0 = a0 << 0x20\n 18068: a0 = a0 | a2\n 18071: jump @695 if a0 == 0\n      : @694 (gas: 1)\n 18074: jump @533\n      : @695 (gas: 12)\n 18077: a0 = u64 [s1 + 0x68]\n 18080: u64 [s1 + 0x3c0] = a0\n 18084: a0 = u64 [s1 + 0x78]\n 18087: u64 [s1 + 0x3c8] = a0\n 18091: a0 = u64 [s1 + 0x80]\n 18095: u64 [s1 + 0x3d0] = a0\n 18099: a1 = s1 + 0x3c0\n 18103: a0 = u64 [s1 + 0x88]\n 18107: u64 [s1 + 0x3d8] = a0\n 18111: a0 = a3\n 18113: u64 [s1 + 0xd8] = a3\n 18117: ra = 740, jump @4\n      : @696 [@dyn 370] (gas: 6)\n 18123: a0 = u64 [s1 + 0x70]\n 18126: ra = 0x2e6\n 18130: ecalli 5 // 'caller'\n 18132: a2 = u64 [s1 + 0xb0]\n 18136: t0 = 0x2e8\n 18140: jump @997\n      : @697 [@dyn 371] (gas: 2)\n 18143: a2 = u64 [s1 + 0xb0]\n 18147: t0 = 744, jump @997\n      : @698 [@dyn 372] (gas: 24)\n 18153: t0 = a1 | a0\n 18156: a3 = a3 >> 0x20\n 18159: a2 = reverse a2\n 18161: a1 = a2 << 0x20\n 18164: a1 = a1 | a3\n 18167: a2 = a2 >> 0x20\n 18170: u64 [s1 + 920] = 0\n 18174: a3 = u64 [0x201d8]\n 18179: a4 = u64 [0x201e0]\n 18184: a5 = u64 [0x201e8]\n 18189: a0 = u64 [0x201f0]\n 18194: u64 [s1 + 0x3b8] = a3\n 18198: a3 = s1 + 0x300\n 18202: u64 [a3 + 0xb0] = a4\n 18206: u64 [a3 + 0xa8] = a5\n 18210: u64 [a3 + 0xa0] = a0\n 18214: u64 [a3 + 0x90] = a2\n 18218: u64 [a3 + 0x88] = a1\n 18222: a1 = 0x20\n 18225: a2 = s1 + 0x3a0\n 18229: a3 = s1 + 0x380\n 18233: u64 [s1 + 0x380] = t0\n 18237: a0 = u64 [s1 + 0xd8]\n 18241: ra = 746, jump @10\n      : @699 [@dyn 373] (gas: 5)\n 18247: a0 = 0\n 18249: a1 = u64 [s1 + 0x60]\n 18252: a2 = 0\n 18254: ecalli 12 // 'seal_return'\n 18256: jump @863\n      : @700 (gas: 5)\n 18259: a0 = u64 [s1 + 0xd8]\n 18263: a2 = a0 + 0xffffffffffffff80\n 18266: a0 = u64 [s1 + 0x80]\n 18270: a1 = u64 [s1 + 0x90]\n 18274: ra = 748, jump @1034\n      : @701 [@dyn 374] (gas: 6)\n 18280: u64 [s1 + 0x78] = a0\n 18283: u64 [s1 + 0x68] = a1\n 18286: a0 = u64 [s1 + 0x88]\n 18290: a1 = u64 [s1 + 0x98]\n 18294: a2 = u64 [s1 + 0xd8]\n 18298: ra = 750, jump @1034\n      : @702 [@dyn 375] (gas: 7)\n 18304: u64 [s1 + 0x20] = a0\n 18307: u64 [s1 + 0x70] = a1\n 18310: a1 = u64 [s1 + 0xd8]\n 18314: a2 = 0x80 - a1\n 18318: a0 = u64 [s1 + 0x80]\n 18322: a1 = u64 [s1 + 0x90]\n 18326: ra = 752, jump @1039\n      : @703 [@dyn 376] (gas: 21)\n 18332: a2 = u64 [s1 + 0x70]\n 18335: a1 = a1 | a2\n 18338: a3 = u64 [s1 + 0xd8]\n 18342: a4 = a3 <u 0x80\n 18346: u64 [s1 + 0x70] = a4\n 18349: a2 = u64 [s1 + 0x68]\n 18352: a1 = a2 if a4 == 0\n 18355: a2 = u64 [s1 + 0x98]\n 18359: a2 = a1 if a3 != 0\n 18362: u64 [s1 + 0x98] = a2\n 18366: a1 = u64 [s1 + 0x20]\n 18369: a0 = a0 | a1\n 18372: a1 = u64 [s1 + 0x78]\n 18375: a0 = a1 if a4 == 0\n 18378: a1 = u64 [s1 + 0x88]\n 18382: a1 = a0 if a3 != 0\n 18385: a2 = a3\n 18387: u64 [s1 + 0x88] = a1\n 18391: a0 = u64 [s1 + 0x80]\n 18395: a1 = u64 [s1 + 0x90]\n 18399: ra = 754, jump @1034\n      : @704 [@dyn 377] (gas: 9)\n 18405: a5 = 0\n 18407: a2 = u64 [s1 + 0x70]\n 18410: a1 = 0 if a2 == 0\n 18412: a0 = 0 if a2 == 0\n 18414: u64 [s1 + 112] = 0x63\n 18418: u64 [s1 + 104] = 0\n 18421: t2 = u64 [s1 + 0x98]\n 18425: t0 = u64 [s1 + 0x88]\n 18429: fallthrough\n      : @705 (gas: 90)\n 18430: u64 [s1 + 0x88] = a1\n 18434: u64 [s1 + 0x90] = a5\n 18438: u64 [s1 + 120] = 0\n 18441: a2 = t0 >> 0x3f\n 18444: a3 = t2 << 0x1\n 18447: a3 = a3 | a2\n 18450: a2 = t0 << 0x1\n 18453: ra = u64 [s1 + 0xc0]\n 18457: a4 = ra >> 0x3f\n 18460: a4 = a4 | a2\n 18463: u64 [s1 + 0x98] = a4\n 18467: a2 = u64 [s1 + 0x68]\n 18470: a1 = a2 ^ a3\n 18473: u64 [s1 + 0x80] = a1\n 18477: a1 = a2 <u a3\n 18480: a5 = u64 [s1 + 0x70]\n 18483: t0 = a5 <u a4\n 18486: a4 = u64 [s1 + 0x80]\n 18490: t0 = a1 if a4 != 0\n 18493: a1 = u64 [s1 + 0x88]\n 18497: a1 = a1 << 0x1\n 18500: a4 = a0 >> 0x3f\n 18503: a1 = a1 | a4\n 18506: u64 [s1 + 0x88] = a1\n 18510: a4 = t2 >> 0x3f\n 18513: a0 = a0 << 0x1\n 18516: a4 = a4 | a0\n 18519: a0 = ra << 0x1\n 18522: a1 = u64 [s1 + 0xc8]\n 18526: a5 = a1 >> 0x3f\n 18529: a0 = a0 | a5\n 18532: u64 [s1 + 0xc0] = a0\n 18536: a5 = a1 << 0x1\n 18539: a0 = u64 [s1 + 0xb8]\n 18543: a1 = a0 >> 0x3f\n 18546: t2 = a5 | a1\n 18549: a5 = a0 << 0x1\n 18552: a0 = u64 [s1 + 0xd0]\n 18556: ra = a0 >> 0x3f\n 18559: a5 = a5 | ra\n 18562: a0 = a0 << 0x1\n 18565: a1 = u64 [s1 + 0x90]\n 18569: a0 = a0 | a1\n 18572: u64 [s1 + 0xd0] = a0\n 18576: a0 = a5 | 0\n 18578: u64 [s1 + 0xb8] = a0\n 18582: a0 = t2 | 0\n 18584: u64 [s1 + 0xc8] = a0\n 18588: a0 = u64 [s1 + 0xc0]\n 18592: a0 = a0 | 0\n 18594: u64 [s1 + 0xc0] = a0\n 18598: a0 = a2 - a4\n 18601: a0 = a0 <u t0\n 18604: a1 = a2 <u a4\n 18607: t1 = u64 [s1 + 0x88]\n 18611: a5 = a2 - t1\n 18614: a5 = a5 - a1\n 18617: a5 = a5 - a0\n 18620: ra = a5 >>a 0x3f\n 18623: a0 = ra & 0x64\n 18626: a1 = u64 [s1 + 0x98]\n 18630: t0 = a1 - a0\n 18633: a1 = a1 <u a0\n 18636: t2 = a3 - a1\n 18639: a1 = 0 if a3 != 0\n 18641: a0 = a4 - a1\n 18644: a1 = a4 <u a1\n 18647: a1 = t1 - a1\n 18650: a3 = u64 [s1 + 0xd8]\n 18654: a5 = u64 [s1 + 0xb0]\n 18658: a2 = a3 | a5\n 18661: a2 = a2 <u 0x1\n 18664: a4 = u64 [s1 + 0xa0]\n 18668: t1 = a4 <u a2\n 18671: a4 = a4 - a2\n 18674: a2 = a3 <u 0x1\n 18677: a5 = a5 - a2\n 18680: a2 = u64 [s1 + 0xa8]\n 18684: a2 = a2 - t1\n 18687: a3 = a3 + 0xffffffffffffffff\n 18690: u64 [s1 + 0xb0] = a5\n 18694: u64 [s1 + 0xa8] = a2\n 18698: a2 = a2 | a5\n 18701: u64 [s1 + 0xd8] = a3\n 18705: a3 = a3 | a4\n 18708: a2 = a2 | a3\n 18711: a5 = ra & 0x1\n 18714: u64 [s1 + 0xa0] = a4\n 18718: t1 = 0\n 18720: jump @705 if a2 != 0\n      : @706 (gas: 20)\n 18724: a2 = u64 [s1 + 0xc8]\n 18728: a0 = a2 >> 0x3f\n 18731: a1 = u64 [s1 + 0xc0]\n 18735: a1 = a1 << 0x1\n 18738: t0 = a1 | a0\n 18741: a0 = u64 [s1 + 0xb8]\n 18745: a1 = a0 >> 0x3f\n 18748: a2 = a2 << 0x1\n 18751: a2 = a2 | a1\n 18754: a1 = u64 [s1 + 0xd0]\n 18758: a3 = a1 >> 0x3f\n 18761: a0 = a0 << 0x1\n 18764: a1 = a1 << 0x1\n 18767: a4 = a5 | a1\n 18770: a1 = u64 [s1 + 0x78]\n 18773: a5 = a1 | a3\n 18776: a5 = a5 | a0\n 18779: a3 = a1 | a2\n 18782: a2 = a1 | t0\n 18785: fallthrough\n      : @707 (gas: 16)\n 18786: a0 = u64 [s1 + 0x40]\n 18789: a0 = a4 <u a0\n 18792: a4 = u64 [s1 + 0x48]\n 18795: a1 = a5 ^ a4\n 18798: a4 = a5 <u a4\n 18801: a4 = a0 if a1 == 0\n 18804: a0 = u64 [s1 + 0x50]\n 18807: t0 = a3 <u a0\n 18810: a5 = u64 [s1 + 0x58]\n 18813: a1 = a2 ^ a5\n 18816: a2 = a2 <u a5\n 18819: a2 = t0 if a1 == 0\n 18822: a0 = a0 ^ a3\n 18825: a0 = a0 | a1\n 18828: a2 = a4 if a0 == 0\n 18831: jump @724 if a2 == 0\n      : @708 (gas: 4)\n 18835: a0 = s1 + 0x7ff\n 18839: a0 = a0 + 0x3e1\n 18843: a1 = 0x40\n 18846: ra = 756, jump @2\n      : @709 [@dyn 378] (gas: 15)\n 18852: a2 = s1 + 0x7ff\n 18856: a2 = a2 + 0x59\n 18859: t0 = u64 [a2 + 0x3a0]\n 18863: a1 = a2 + 0x300\n 18867: a5 = u64 [a1 + 0x98]\n 18871: a4 = u64 [a1 + 0x90]\n 18875: a0 = u64 [a1 + 0x88]\n 18879: a3 = a4 | t0\n 18882: a1 = a0 | a5\n 18885: a1 = a1 | a3\n 18888: a1 = a1 >> 0x20\n 18891: a3 = a3 | a5\n 18894: a3 = a3 << 0x20\n 18897: a1 = a1 | a3\n 18900: jump @711 if a1 == 0\n      : @710 (gas: 1)\n 18903: jump @533\n      : @711 (gas: 12)\n 18906: u64 [a2 + 888] = 0\n 18910: u64 [a2 + 880] = 0\n 18914: u64 [a2 + 872] = 0\n 18918: a3 = 0x8c379a000000000\n 18928: a1 = s1 + 0x7ff\n 18932: a1 = a1 + 0x3c1\n 18936: u64 [a2 + 0x380] = a3\n 18940: u64 [s1 + 0xd8] = a0\n 18944: u64 [s1 + 0xd0] = a4\n 18948: u64 [s1 + 0xc0] = t0\n 18952: u64 [s1 + 0xc8] = a5\n 18956: ra = 758, jump @4\n      : @712 [@dyn 379] (gas: 1)\n 18962: t0 = 760, jump @992\n      : @713 [@dyn 380] (gas: 1)\n 18968: jump @715 if a0 != 0\n      : @714 (gas: 1)\n 18971: jump @533\n      : @715 (gas: 13)\n 18974: i32 a0 = a1 + 0x4\n 18977: a2 = s1 + 0x7ff\n 18981: a2 = a2 + 0x59\n 18984: u64 [a2 + 864] = 0\n 18988: u64 [a2 + 856] = 0\n 18992: u64 [a2 + 848] = 0\n 18996: a5 = 0x20\n 18999: a1 = s1 + 0x7ff\n 19003: a1 = a1 + 0x3a1\n 19007: u64 [a2 + 0x348] = a5\n 19011: u64 [s1 + 0xc8] = a3\n 19015: u64 [s1 + 0xc0] = a4\n 19019: ra = 762, jump @4\n      : @716 [@dyn 381] (gas: 1)\n 19025: t0 = 764, jump @1018\n      : @717 [@dyn 382] (gas: 1)\n 19031: jump @719 if a0 != 0\n      : @718 (gas: 1)\n 19034: jump @533\n      : @719 (gas: 10)\n 19037: i32 a0 = a1 + 0x24\n 19040: a2 = s1 + 0x7ff\n 19044: a2 = a2 + 0x59\n 19047: u64 [a2 + 832] = 0\n 19051: u64 [a2 + 824] = 0\n 19055: u64 [a2 + 808] = 0x20\n 19060: a1 = s1 + 0x7ff\n 19064: a1 = a1 + 0x381\n 19068: u64 [a2 + 816] = 0\n 19072: ra = 766, jump @4\n      : @720 [@dyn 383] (gas: 1)\n 19078: t0 = 768, jump @1015\n      : @721 [@dyn 384] (gas: 1)\n 19084: jump @723 if a0 != 0\n      : @722 (gas: 1)\n 19087: jump @533\n      : @723 (gas: 16)\n 19090: i32 a0 = a3 + 0x44\n 19093: a1 = u64 [0x20178]\n 19098: a4 = s1 + 0x7ff\n 19102: a4 = a4 + 0x59\n 19105: a5 = a4 + 0x300\n 19109: u64 [a5 + 0x20] = a1\n 19112: a1 = u64 [0x20180]\n 19117: a2 = u64 [0x20188]\n 19122: a3 = u64 [0x20190]\n 19127: u64 [a5 + 0x18] = a1\n 19130: u64 [a5 + 0x10] = a2\n 19133: a1 = s1 + 0x7ff\n 19137: a1 = a1 + 0x361\n 19141: u64 [a5 + 0x8] = a3\n 19144: ra = 0x1ae\n 19148: jump @4\n      : @724 (gas: 5)\n 19151: a0 = u64 [s1 + 0x38]\n 19154: ra = 0x302\n 19158: ecalli 5 // 'caller'\n 19160: t0 = 0x304\n 19164: jump @998\n      : @725 [@dyn 385] (gas: 1)\n 19167: t0 = 772, jump @998\n      : @726 [@dyn 386] (gas: 7)\n 19173: u64 [a2 + 64] = 0\n 19176: u64 [a2 + 0x38] = a1\n 19179: u64 [a2 + 0x30] = a0\n 19182: a1 = s1 + 0x1080\n 19186: u64 [a2 + 0x28] = a3\n 19189: a0 = 0\n 19191: ra = 774, jump @4\n      : @727 [@dyn 387] (gas: 9)\n 19197: a0 = s1 + 0x1058\n 19201: u64 [a0 + 32] = 0\n 19204: u64 [a0 + 24] = 0\n 19207: u64 [a0 + 16] = 0\n 19210: a3 = a0\n 19212: a0 = 0x20\n 19215: a1 = s1 + 0x1060\n 19219: u64 [a3 + 8] = 0x4\n 19223: ra = 776, jump @4\n      : @728 [@dyn 388] (gas: 3)\n 19229: a1 = u64 [s1 + 0x28]\n 19232: a0 = i32 [a1]\n 19234: jump @730 if a0 >u 63\n      : @729 (gas: 2)\n 19238: u32 [a1 + 0] = 0x40\n 19241: fallthrough\n      : @730 (gas: 4)\n 19242: a0 = sp + 0xffffffffffffffe0\n 19245: a0 = a0 & 0xffffffffffffffe0\n 19248: u64 [s1 + 0xd8] = a0\n 19252: t0 = 778, jump @1026\n      : @731 [@dyn 389] (gas: 5)\n 19258: ra = 0x30c\n 19262: ecalli 8 // 'hash_keccak_256'\n 19264: a3 = u64 [s1 + 0xd8]\n 19268: t0 = 0x30e\n 19272: jump @1000\n      : @732 [@dyn 390] (gas: 2)\n 19275: a3 = u64 [s1 + 0xd8]\n 19279: t0 = 782, jump @1000\n      : @733 [@dyn 391] (gas: 8)\n 19285: a5 = a4 + 0x600\n 19289: u64 [a5 + 0x20] = a3\n 19292: u64 [a5 + 0x18] = a2\n 19295: u64 [a5 + 0x10] = a1\n 19298: u64 [a5 + 0x8] = a0\n 19301: a0 = s1 + 0x1040\n 19305: a1 = s1 + 0x2660\n 19309: ra = 784, jump @6\n      : @734 [@dyn 392] (gas: 15)\n 19315: a0 = s1 + 0x1058\n 19319: a1 = u64 [a0]\n 19321: u64 [s1 + 0xb8] = a1\n 19325: a2 = a0 + 0xffffffffffffff00\n 19329: a1 = u64 [a2 + 0xf8]\n 19333: u64 [s1 + 0xb0] = a1\n 19337: a1 = u64 [a2 + 0xf0]\n 19341: u64 [s1 + 0xa8] = a1\n 19345: a0 = u64 [a2 + 0xe8]\n 19349: u64 [s1 + 0xa0] = a0\n 19353: a0 = u64 [s1 + 0x38]\n 19356: ra = 0x312\n 19360: ecalli 5 // 'caller'\n 19362: t0 = 0x314\n 19366: jump @1005\n      : @735 [@dyn 393] (gas: 1)\n 19369: t0 = 788, jump @1005\n      : @736 [@dyn 394] (gas: 8)\n 19375: u64 [a2 + 2016] = 0\n 19379: a4 = a2 + 0x700\n 19383: u64 [a4 + 0xd8] = a1\n 19387: u64 [a4 + 0xd0] = a0\n 19391: a1 = s1 + 0x1020\n 19395: u64 [a4 + 0xc8] = a3\n 19399: a0 = 0\n 19401: ra = 790, jump @4\n      : @737 [@dyn 395] (gas: 10)\n 19407: a1 = s1 + 0x7ff\n 19411: a1 = a1 + 0x59\n 19414: u64 [a1 + 1984] = 0\n 19418: u64 [a1 + 1976] = 0\n 19422: u64 [a1 + 1960] = 0x4\n 19427: a2 = a1\n 19429: a0 = 0x20\n 19432: a1 = s1 + 0x1000\n 19436: u64 [a2 + 1968] = 0\n 19440: ra = 792, jump @4\n      : @738 [@dyn 396] (gas: 7)\n 19446: a1 = u64 [s1 + 0x28]\n 19449: a0 = sp + 0xffffffffffffffe0\n 19452: a0 = a0 & 0xffffffffffffffe0\n 19455: u64 [s1 + 0xd8] = a0\n 19459: sp = a0\n 19461: a0 = i32 [a1]\n 19463: jump @740 if a0 >u 63\n      : @739 (gas: 2)\n 19467: u32 [a1 + 0] = 0x40\n 19470: fallthrough\n      : @740 (gas: 4)\n 19471: a0 = sp + 0xffffffffffffffe0\n 19474: a0 = a0 & 0xffffffffffffffe0\n 19477: u64 [s1 + 0xd0] = a0\n 19481: t0 = 794, jump @1026\n      : @741 [@dyn 397] (gas: 5)\n 19487: ra = 0x31c\n 19491: ecalli 8 // 'hash_keccak_256'\n 19493: a3 = u64 [s1 + 0xd0]\n 19497: t0 = 0x31e\n 19501: jump @1002\n      : @742 [@dyn 398] (gas: 2)\n 19504: a3 = u64 [s1 + 0xd0]\n 19508: t0 = 798, jump @1002\n      : @743 [@dyn 399] (gas: 3)\n 19514: a0 = s1 + 0x7ff\n 19518: a0 = a0 + 0x7e1\n 19522: ra = 800, jump @6\n      : @744 [@dyn 400] (gas: 26)\n 19528: a5 = s1 + 0x7ff\n 19532: a5 = a5 + 0x59\n 19535: a3 = u64 [a5 + 0x788]\n 19539: a0 = u64 [a5 + 0x790]\n 19543: a1 = u64 [a5 + 0x798]\n 19547: a2 = u64 [a5 + 0x7a0]\n 19551: a4 = u64 [s1 + 0xb8]\n 19555: u64 [a5 + 0x740] = a4\n 19559: a4 = u64 [s1 + 0xb0]\n 19563: u64 [a5 + 0x738] = a4\n 19567: a4 = u64 [s1 + 0xa8]\n 19571: u64 [a5 + 0x730] = a4\n 19575: a4 = u64 [s1 + 0xa0]\n 19579: u64 [a5 + 0x728] = a4\n 19583: a4 = a5 + 0x700\n 19587: u64 [a4 + 0x60] = a2\n 19590: u64 [a4 + 0x58] = a1\n 19593: u64 [a4 + 0x50] = a0\n 19596: a0 = s1 + 0x7ff\n 19600: a0 = a0 + 0x7c1\n 19604: a1 = s1 + 0x7ff\n 19608: a1 = a1 + 0x7a1\n 19612: a2 = s1 + 0x7ff\n 19616: a2 = a2 + 0x781\n 19620: u64 [a4 + 0x48] = a3\n 19623: ra = 802, jump @941\n      : @745 [@dyn 401] (gas: 16)\n 19629: a3 = s1 + 0x7ff\n 19633: a3 = a3 + 0x59\n 19636: a4 = a3 + 0x700\n 19640: a0 = u64 [a4 + 0x80]\n 19644: a1 = u64 [a4 + 0x78]\n 19647: a2 = u64 [a4 + 0x70]\n 19650: a3 = u64 [a4 + 0x68]\n 19653: a4 = s1 + 0x2058\n 19657: a5 = a4 + 0x600\n 19661: u64 [a5 + 0x40] = a0\n 19664: u64 [a5 + 0x38] = a1\n 19667: u64 [a5 + 0x30] = a2\n 19670: u64 [a5 + 0x28] = a3\n 19673: a1 = s1 + 0x2680\n 19677: a0 = u64 [s1 + 0xd8]\n 19681: ra = 804, jump @7\n      : @746 [@dyn 402] (gas: 4)\n 19687: a0 = s1 + 0x7ff\n 19691: a0 = a0 + 0x761\n 19695: a1 = 0x40\n 19698: ra = 806, jump @2\n      : @747 [@dyn 403] (gas: 19)\n 19704: a0 = s1 + 0x7ff\n 19708: a0 = a0 + 0x59\n 19711: a5 = a0 + 0x700\n 19715: a1 = u64 [a5 + 0x20]\n 19718: u64 [s1 + 0xc8] = a1\n 19722: a2 = u64 [a5 + 0x18]\n 19725: u64 [s1 + 0xc0] = a2\n 19729: a4 = u64 [a5 + 0x10]\n 19732: u64 [s1 + 0xd0] = a4\n 19736: a3 = u64 [a5 + 0x8]\n 19739: u64 [s1 + 0xd8] = a3\n 19743: u64 [a5] = a1\n 19745: u64 [a0 + 0x6f8] = a2\n 19749: u64 [a0 + 0x6f0] = a4\n 19753: a1 = a0\n 19755: a0 = s1 + 0x7ff\n 19759: a0 = a0 + 0x741\n 19763: u64 [a1 + 0x6e8] = a3\n 19767: ra = 808, jump @923\n      : @748 [@dyn 404] (gas: 13)\n 19773: a0 = u64 [s1 + 0xc8]\n 19777: a1 = u64 [s1 + 0xd0]\n 19781: a0 = a0 | a1\n 19784: a1 = u64 [s1 + 0xd8]\n 19788: a3 = a1\n 19790: a2 = u64 [s1 + 0xc0]\n 19794: a1 = a1 | a2\n 19797: a1 = a1 | a0\n 19800: a1 = a1 >> 0x20\n 19803: a0 = a0 | a2\n 19806: a0 = a0 << 0x20\n 19809: a0 = a0 | a1\n 19812: jump @750 if a0 == 0\n      : @749 (gas: 1)\n 19815: jump @533\n      : @750 (gas: 15)\n 19818: a0 = u64 [s1 + 0x40]\n 19821: a2 = s1 + 0x7ff\n 19825: a2 = a2 + 0x59\n 19828: a4 = a2 + 0x600\n 19832: u64 [a4 + 0xc8] = a0\n 19836: a0 = u64 [s1 + 0x48]\n 19839: u64 [a4 + 0xd0] = a0\n 19843: a0 = u64 [s1 + 0x50]\n 19846: u64 [a4 + 0xd8] = a0\n 19850: a1 = s1 + 0x7ff\n 19854: a1 = a1 + 0x721\n 19858: a0 = u64 [s1 + 0x58]\n 19861: u64 [a4 + 0xe0] = a0\n 19865: a0 = a3\n 19867: ra = 810, jump @4\n      : @751 [@dyn 405] (gas: 11)\n 19873: a0 = u64 [s1 + 0xc8]\n 19877: a1 = u64 [s1 + 0xc0]\n 19881: a2 = a1 | a0\n 19884: a3 = 0x100000000\n 19894: a0 = 0xffffffe0\n 19904: a4 = u64 [s1 + 0xd8]\n 19908: a0 = a4 <u a0\n 19911: a1 = u64 [s1 + 0xd0]\n 19915: a0 = 0 if a1 != 0\n 19917: a0 = 0 if a2 != 0\n 19919: jump @753 if a0 != 0\n      : @752 (gas: 1)\n 19922: jump @533\n      : @753 (gas: 19)\n 19925: u64 [s1 + 0xc0] = a3\n 19929: i32 a3 = a4 + 0x20\n 19932: a0 = u64 [s1 + 0xa0]\n 19936: u64 [s1 + 0xc8] = a2\n 19940: a2 = s1 + 0x7ff\n 19944: a2 = a2 + 0x59\n 19947: a4 = a2 + 0x600\n 19951: u64 [a4 + 0xa8] = a0\n 19955: a0 = u64 [s1 + 0xa8]\n 19959: u64 [a4 + 0xb0] = a0\n 19963: a0 = u64 [s1 + 0xb0]\n 19967: u64 [a4 + 0xb8] = a0\n 19971: a1 = s1 + 0x7ff\n 19975: a1 = a1 + 0x701\n 19979: a0 = u64 [s1 + 0xb8]\n 19983: u64 [a4 + 0xc0] = a0\n 19987: u64 [s1 + 0xb8] = a3\n 19991: a0 = a3\n 19993: ra = 812, jump @4\n      : @754 [@dyn 406] (gas: 9)\n 19999: a1 = u64 [s1 + 0xd8]\n 20003: a0 = u64 [s1 + 0xc0]\n 20007: a0 = a0 + 0xffffffffffffffc0\n 20010: a0 = a1 <u a0\n 20013: a2 = u64 [s1 + 0xd0]\n 20017: a0 = 0 if a2 != 0\n 20019: a2 = u64 [s1 + 0xc8]\n 20023: a0 = 0 if a2 != 0\n 20025: jump @756 if a0 != 0\n      : @755 (gas: 1)\n 20028: jump @533\n      : @756 (gas: 11)\n 20031: i32 a0 = a1 + 0x40\n 20034: a3 = s1 + 0x7ff\n 20038: a3 = a3 + 0x59\n 20041: u64 [a3 + 1696] = 0\n 20045: u64 [a3 + 1688] = 0\n 20049: u64 [a3 + 1680] = 0\n 20053: a1 = s1 + 0x7ff\n 20057: a1 = a1 + 0x6e1\n 20061: u64 [a3 + 1672] = 0x1\n 20066: u64 [s1 + 0xa0] = a0\n 20070: ra = 814, jump @4\n      : @757 [@dyn 407] (gas: 5)\n 20076: a0 = u64 [s1 + 0x38]\n 20079: ra = 0x330\n 20083: ecalli 5 // 'caller'\n 20085: t0 = 0x332\n 20089: jump @1005\n      : @758 [@dyn 408] (gas: 1)\n 20092: t0 = 818, jump @1005\n      : @759 [@dyn 409] (gas: 9)\n 20098: u64 [a2 + 1664] = 0\n 20102: a4 = a2 + 0x600\n 20106: u64 [a4 + 0x78] = a1\n 20109: u64 [a4 + 0x70] = a0\n 20112: a1 = s1 + 0x7ff\n 20116: a1 = a1 + 0x6c1\n 20120: u64 [a4 + 0x68] = a3\n 20123: a0 = 0\n 20125: ra = 820, jump @4\n      : @760 [@dyn 410] (gas: 11)\n 20131: a1 = s1 + 0x7ff\n 20135: a1 = a1 + 0x59\n 20138: u64 [a1 + 1632] = 0\n 20142: u64 [a1 + 1624] = 0\n 20146: u64 [a1 + 1608] = 0x5\n 20151: a2 = a1\n 20153: a0 = 0x20\n 20156: a1 = s1 + 0x7ff\n 20160: a1 = a1 + 0x6a1\n 20164: u64 [a2 + 1616] = 0\n 20168: ra = 822, jump @4\n      : @761 [@dyn 411] (gas: 7)\n 20174: a0 = sp + 0xffffffffffffffe0\n 20177: a0 = a0 & 0xffffffffffffffe0\n 20180: u64 [s1 + 0xb0] = a0\n 20184: sp = a0\n 20186: a2 = u64 [s1 + 0x28]\n 20189: a0 = i32 [a2]\n 20191: jump @763 if a0 >u 63\n      : @762 (gas: 2)\n 20195: u32 [a2 + 0] = 0x40\n 20198: fallthrough\n      : @763 (gas: 4)\n 20199: a0 = sp + 0xffffffffffffffe0\n 20202: a0 = a0 & 0xffffffffffffffe0\n 20205: u64 [s1 + 0xd0] = a0\n 20209: t0 = 824, jump @1026\n      : @764 [@dyn 412] (gas: 23)\n 20215: ecalli 8 // 'hash_keccak_256'\n 20217: a3 = u64 [s1 + 0xd0]\n 20221: a0 = u64 [a3 + 0x18]\n 20224: a1 = u64 [a3 + 0x10]\n 20227: a2 = u64 [a3 + 0x8]\n 20230: a3 = u64 [a3]\n 20232: a4 = reverse a0\n 20234: u64 [s1 + 0xc0] = a4\n 20238: a1 = reverse a1\n 20240: u64 [s1 + 0xc8] = a1\n 20244: a2 = reverse a2\n 20246: u64 [s1 + 0xa8] = a2\n 20250: a0 = reverse a3\n 20252: u64 [s1 + 0xd0] = a0\n 20256: a3 = u64 [s1 + 0xb0]\n 20260: u64 [a3 + 0x18] = a0\n 20263: u64 [a3 + 0x10] = a2\n 20266: u64 [a3 + 0x8] = a1\n 20269: u64 [a3] = a4\n 20271: a0 = s1 + 0x7ff\n 20275: a0 = a0 + 0x681\n 20279: a1 = u64 [s1 + 0xd8]\n 20283: ra = 826, jump @2\n      : @765 [@dyn 413] (gas: 16)\n 20289: a3 = s1 + 0x7ff\n 20293: a3 = a3 + 0x59\n 20296: a4 = a3 + 0x600\n 20300: a0 = u64 [a4 + 0x40]\n 20303: a1 = u64 [a4 + 0x38]\n 20306: a2 = u64 [a4 + 0x30]\n 20309: a3 = u64 [a4 + 0x28]\n 20312: a4 = s1 + 0x2058\n 20316: a5 = a4 + 0x600\n 20320: u64 [a5 + 0x60] = a0\n 20323: u64 [a5 + 0x58] = a1\n 20326: u64 [a5 + 0x50] = a2\n 20329: u64 [a5 + 0x48] = a3\n 20332: a1 = s1 + 0x26a0\n 20336: a0 = u64 [s1 + 0xb0]\n 20340: ra = 828, jump @7\n      : @766 [@dyn 414] (gas: 4)\n 20346: a0 = s1 + 0x7ff\n 20350: a0 = a0 + 0x661\n 20354: a1 = u64 [s1 + 0xb8]\n 20358: ra = 830, jump @2\n      : @767 [@dyn 415] (gas: 31)\n 20364: a0 = s1 + 0x7ff\n 20368: a0 = a0 + 0x59\n 20371: t0 = u64 [a0 + 0x608]\n 20375: t1 = u64 [a0 + 0x610]\n 20379: t2 = u64 [a0 + 0x618]\n 20383: a3 = u64 [a0 + 0x620]\n 20387: a0 = u64 [s1 + 0xc0]\n 20391: a0 = a0 + 0x1\n 20394: a5 = a0 <u 0x1\n 20397: a1 = u64 [s1 + 0xc8]\n 20401: a5 = a5 + a1\n 20404: a4 = a0 | a5\n 20407: a4 = a4 <u 0x1\n 20410: a1 = u64 [s1 + 0xa8]\n 20414: a4 = a4 + a1\n 20417: a1 = a4 <u a1\n 20420: a2 = u64 [s1 + 0xd0]\n 20424: a1 = a1 + a2\n 20427: a2 = s1 + 0x2058\n 20431: u64 [a2 + 0x680] = a1\n 20435: a1 = a2 + 0x600\n 20439: u64 [a1 + 0x78] = a4\n 20442: u64 [a1 + 0x70] = a5\n 20445: u64 [a1 + 0x68] = a0\n 20448: u64 [a1 + 0xa0] = a3\n 20452: u64 [a2 + 0x698] = t2\n 20456: u64 [a2 + 0x690] = t1\n 20460: u64 [a2 + 0x688] = t0\n 20464: a0 = s1 + 0x26c0\n 20468: a1 = s1 + 0x26e0\n 20472: ra = 832, jump @7\n      : @768 [@dyn 416] (gas: 8)\n 20478: a0 = sp + 0xffffffffffffffe0\n 20481: a5 = a0 & 0xffffffffffffffe0\n 20484: sp = a5\n 20486: a1 = u64 [s1 + 0xc0]\n 20490: a0 = a1 + 0x2\n 20493: a1 = a0 <u a1\n 20496: a3 = u64 [s1 + 0xc8]\n 20500: t0 = 834, jump @1025\n      : @769 [@dyn 417] (gas: 11)\n 20506: a4 = u64 [s1 + 0xd0]\n 20510: a1 = a1 + a4\n 20513: u64 [s1 + 0xd8] = a5\n 20517: u64 [a5 + 0x18] = a1\n 20520: u64 [a5 + 0x10] = a3\n 20523: u64 [a5 + 0x8] = a2\n 20526: u64 [a5] = a0\n 20528: a0 = s1 + 0x7ff\n 20532: a0 = a0 + 0x641\n 20536: a1 = u64 [s1 + 0xa0]\n 20540: ra = 836, jump @2\n      : @770 [@dyn 418] (gas: 16)\n 20546: a3 = s1 + 0x7ff\n 20550: a3 = a3 + 0x59\n 20553: a4 = a3 + 0x500\n 20557: a0 = u64 [a4 + 0xf8]\n 20561: a1 = u64 [a3 + 0x600]\n 20565: a2 = u64 [a4 + 0xf0]\n 20569: a3 = u64 [a4 + 0xe8]\n 20573: a1 = a1 | a2\n 20576: a0 = a0 | a3\n 20579: a0 = a0 | a1\n 20582: a0 = a0 >u 0\n 20584: u64 [s1 + 0xd0] = a0\n 20588: a0 = s1 + 0x7ff\n 20592: a0 = a0 + 0x621\n 20596: a1 = u64 [s1 + 0xd8]\n 20600: ra = 838, jump @6\n      : @771 [@dyn 419] (gas: 19)\n 20606: a3 = s1 + 0x7ff\n 20610: a3 = a3 + 0x59\n 20613: a4 = a3 + 0x500\n 20617: a0 = u64 [a4 + 0xc8]\n 20621: a1 = u64 [a4 + 0xd0]\n 20625: a2 = u64 [a4 + 0xe0]\n 20629: a3 = u64 [a4 + 0xd8]\n 20633: a0 = a0 & 0xffffffffffffff00\n 20637: a4 = u64 [s1 + 0xd0]\n 20641: a0 = a0 | a4\n 20644: a4 = s1 + 0x2058\n 20648: a5 = a4 + 0x600\n 20652: u64 [a5 + 0xc0] = a2\n 20656: u64 [a5 + 0xb8] = a3\n 20660: u64 [a5 + 0xb0] = a1\n 20664: u64 [a5 + 0xa8] = a0\n 20668: a1 = s1 + 0x2700\n 20672: a0 = u64 [s1 + 0xd8]\n 20676: ra = 840, jump @7\n      : @772 [@dyn 420] (gas: 10)\n 20682: a0 = s1 + 0x2058\n 20686: u64 [a0 + 1760] = 0\n 20690: u64 [a0 + 1752] = 0\n 20694: u64 [a0 + 1744] = 0\n 20698: a1 = a0\n 20700: u64 [a1 + 1736] = 0x2\n 20705: a0 = s1 + 0x7ff\n 20709: a0 = a0 + 0x601\n 20713: a1 = s1 + 0x2720\n 20717: ra = 842, jump @6\n      : @773 [@dyn 421] (gas: 13)\n 20723: a1 = s1 + 0x7ff\n 20727: a1 = a1 + 0x59\n 20730: a2 = a1 + 0x500\n 20734: a0 = u64 [a2 + 0xb8]\n 20738: u64 [s1 + 0xb0] = a0\n 20742: a0 = u64 [a2 + 0xb0]\n 20746: u64 [s1 + 0xa8] = a0\n 20750: a0 = u64 [a2 + 0xa8]\n 20754: u64 [s1 + 0xb8] = a0\n 20758: a0 = s1 + 0x7ff\n 20762: a0 = a0 + 0x5e1\n 20766: a1 = 0x40\n 20769: ra = 844, jump @2\n      : @774 [@dyn 422] (gas: 18)\n 20775: a2 = s1 + 0x7ff\n 20779: a2 = a2 + 0x59\n 20782: a5 = a2 + 0x500\n 20786: a3 = u64 [a5 + 0xa0]\n 20790: a4 = u64 [a5 + 0x98]\n 20794: a1 = u64 [a5 + 0x90]\n 20798: a0 = u64 [a5 + 0x88]\n 20802: u64 [s1 + 0xd0] = a1\n 20806: u64 [s1 + 0xc0] = a3\n 20810: a3 = a3 | a1\n 20813: a1 = a0 | a4\n 20816: a1 = a1 | a3\n 20819: a1 = a1 >> 0x20\n 20822: u64 [s1 + 0xc8] = a4\n 20826: a3 = a3 | a4\n 20829: a3 = a3 << 0x20\n 20832: a1 = a1 | a3\n 20835: jump @776 if a1 == 0\n      : @775 (gas: 1)\n 20838: jump @533\n      : @776 (gas: 9)\n 20841: u64 [a2 + 1400] = 0\n 20845: u64 [a2 + 1392] = 0\n 20849: u64 [a2 + 1384] = 0\n 20853: a3 = 0xa9059cbb00000000\n 20863: a1 = s1 + 0x7ff\n 20867: a1 = a1 + 0x5c1\n 20871: u64 [a2 + 0x580] = a3\n 20875: u64 [s1 + 0xd8] = a0\n 20879: ra = 846, jump @4\n      : @777 [@dyn 423] (gas: 6)\n 20885: a0 = u64 [s1 + 0x38]\n 20888: ra = 0x350\n 20892: ecalli 5 // 'caller'\n 20894: a2 = u64 [s1 + 0x60]\n 20897: t0 = 0x352\n 20901: jump @997\n      : @778 [@dyn 424] (gas: 2)\n 20904: a2 = u64 [s1 + 0x60]\n 20907: t0 = 850, jump @997\n      : @779 [@dyn 425] (gas: 48)\n 20913: t0 = a1 | a0\n 20916: a3 = a3 >> 0x20\n 20919: a2 = reverse a2\n 20921: a1 = a2 << 0x20\n 20924: t1 = a1 | a3\n 20927: a2 = a2 >> 0x20\n 20930: a0 = u64 [s1 + 0xd8]\n 20934: a3 = a0 + 0x4\n 20937: a4 = a3 <u a0\n 20940: a0 = u64 [s1 + 0xd0]\n 20944: a5 = a0 + a4\n 20947: a0 = a5 <u a0\n 20950: a0 = a4 if a4 == 0\n 20953: a1 = u64 [s1 + 0xc8]\n 20957: a0 = a0 + a1\n 20960: a4 = a0 <u a1\n 20963: a1 = u64 [s1 + 0xc0]\n 20967: a4 = a4 + a1\n 20970: a1 = s1 + 0x7ff\n 20974: a1 = a1 + 0x59\n 20977: u64 [a1 + 0x540] = a4\n 20981: a4 = a1 + 0x500\n 20985: u64 [a4 + 0x38] = a0\n 20988: u64 [a4 + 0x30] = a5\n 20991: a0 = u64 [s1 + 0x58]\n 20994: u64 [a4] = a0\n 20996: a0 = u64 [s1 + 0x50]\n 20999: a5 = a1 + 0x400\n 21003: u64 [a5 + 0xf8] = a0\n 21007: a0 = u64 [s1 + 0x48]\n 21010: u64 [a5 + 0xf0] = a0\n 21014: a0 = u64 [s1 + 0x40]\n 21017: u64 [a5 + 0xe8] = a0\n 21021: u64 [a4 + 0x28] = a3\n 21024: u64 [a4 + 0x18] = a2\n 21027: u64 [a1 + 0x510] = t1\n 21031: u64 [a1 + 0x508] = t0\n 21035: a4 = a1\n 21037: a0 = s1 + 0x7ff\n 21041: a0 = a0 + 0x5a1\n 21045: a1 = s1 + 0x7ff\n 21049: a1 = a1 + 0x581\n 21053: a2 = s1 + 0x7ff\n 21057: a2 = a2 + 0x561\n 21061: a3 = s1 + 0x7ff\n 21065: a3 = a3 + 0x541\n 21069: u64 [a4 + 1312] = 0\n 21073: ra = 852, jump @957\n      : @780 [@dyn 426] (gas: 32)\n 21079: a1 = s1 + 0x7ff\n 21083: a1 = a1 + 0x59\n 21086: a0 = u64 [a1 + 0x550]\n 21090: t0 = u64 [a1 + 0x560]\n 21094: t1 = u64 [a1 + 0x548]\n 21098: a3 = u64 [a1 + 0x558]\n 21102: a1 = u64 [s1 + 0xd0]\n 21106: a4 = a0 ^ a1\n 21109: a5 = a0 <u a1\n 21112: ra = a1\n 21114: t2 = u64 [s1 + 0xd8]\n 21118: a1 = t1 <u t2\n 21121: a5 = a1 if a4 == 0\n 21124: a2 = u64 [s1 + 0xc8]\n 21128: a4 = a3 - a2\n 21131: a3 = a3 <u a2\n 21134: a2 = u64 [s1 + 0xc0]\n 21138: a2 = t0 - a2\n 21141: a2 = a2 - a3\n 21144: a3 = a4 <u a5\n 21147: a2 = a2 - a3\n 21150: u64 [s1 + 0x98] = a2\n 21154: a4 = a4 - a5\n 21157: u64 [s1 + 0x90] = a4\n 21161: a0 = a0 - ra\n 21164: a0 = a0 - a1\n 21167: u64 [s1 + 0x88] = a0\n 21171: a0 = t1 - t2\n 21174: u64 [s1 + 0xa0] = a0\n 21178: ra = 0x356\n 21182: ecalli 9 // 'ref_time_left'\n 21184: fallthrough\n      : @781 [@dyn 427] (gas: 5)\n 21185: a0 = u64 [s1 + 0xa8]\n 21189: a0 = reverse a0\n 21191: a1 = a0 << 0x20\n 21194: a2 = u64 [s1 + 0xb0]\n 21198: t0 = 856, jump @1021\n      : @782 [@dyn 428] (gas: 23)\n 21204: a2 = a2 >> 0x20\n 21207: a3 = u64 [s1 + 0x60]\n 21210: u64 [a3 + 0x8] = a0\n 21213: u64 [a3] = a1\n 21215: u32 [a3 + 0x10] = a2\n 21218: a2 = s1 + 0x2058\n 21222: u64 [a2 + 1792] = 0\n 21226: u64 [a2 + 1784] = 0\n 21230: u64 [a2 + 1776] = 0\n 21234: a0 = u64 [s1 + 0xa0]\n 21238: a3 = a0\n 21240: a4 = u64 [s1 + 0x90]\n 21244: a0 = a0 | a4\n 21247: a1 = u64 [s1 + 0x98]\n 21251: a5 = u64 [s1 + 0x88]\n 21255: a1 = a1 | a5\n 21258: a0 = a0 | a1\n 21261: a0 = a0 >> 0x20\n 21264: a1 = a1 | a4\n 21267: a1 = a1 << 0x20\n 21270: a0 = a0 | a1\n 21273: u64 [a2 + 1768] = 0\n 21277: jump @784 if a0 == 0\n      : @783 (gas: 1)\n 21280: jump @533\n      : @784 (gas: 3)\n 21283: a0 = u64 [s1 + 0xd8]\n 21287: a1 = a3\n 21289: ra = 858, jump @16\n      : @785 [@dyn 429] (gas: 4)\n 21295: u64 [s1 + 0xb0] = a0\n 21299: a1 = 0x20\n 21302: a0 = u64 [s1 + 0xd8]\n 21306: ra = 860, jump @16\n      : @786 [@dyn 430] (gas: 35)\n 21312: a2 = s1 + 0x2058\n 21316: u64 [s1 + 184] = 0x20\n 21321: a3 = a2 + 0x700\n 21325: u32 [a3 + 8] = 0x20\n 21329: u64 [a3 + 64] = 0xffffffffffffffff\n 21333: u64 [a3 + 56] = 0xffffffffffffffff\n 21337: u64 [a3 + 48] = 0xffffffffffffffff\n 21341: u64 [a3 + 40] = 0xffffffffffffffff\n 21345: a1 = u64 [s1 + 0x60]\n 21348: a1 = a1 << 0x20\n 21351: a1 = a1 >> 0x20\n 21354: a2 = 0x800000000\n 21364: t0 = a1 | a2\n 21367: a1 = s1 + 0x2740\n 21371: a1 = a1 << 0x20\n 21374: a1 = a1 >> 0x20\n 21377: a2 = s1 + 0x2780\n 21381: a2 = a2 << 0x20\n 21384: a3 = a2 | a1\n 21387: a1 = u64 [s1 + 0xb0]\n 21391: a1 = a1 << 0x20\n 21394: a1 = a1 >> 0x20\n 21397: a4 = u64 [s1 + 0xa0]\n 21401: a4 = a4 << 0x20\n 21404: a4 = a4 | a1\n 21407: a0 = a0 << 0x20\n 21410: a0 = a0 >> 0x20\n 21413: a1 = s1 + 0x2760\n 21417: a1 = a1 << 0x20\n 21420: a5 = a1 | a0\n 21423: a1 = 0xffffffffffffffff\n 21426: a2 = 0xffffffffffffffff\n 21429: a0 = t0\n 21431: ecalli 1 // 'call'\n 21433: fallthrough\n      : @787 (gas: 1)\n 21434: jump @811 if a0 != 0\n      : @788 (gas: 2)\n 21438: ecalli 11 // 'return_data_size'\n 21440: fallthrough\n      : @789 (gas: 1)\n 21441: jump @791 if a0 >=u 32\n      : @790 (gas: 3)\n 21445: ecalli 11 // 'return_data_size'\n 21447: u64 [s1 + 0xb8] = a0\n 21451: fallthrough\n      : @791 (gas: 22)\n 21452: a2 = s1 + 0x7ff\n 21456: a2 = a2 + 0x59\n 21459: a0 = u64 [s1 + 0xb8]\n 21463: a4 = a2 + 0x400\n 21467: u64 [a4 + 0x88] = a0\n 21471: a0 = u64 [s1 + 0xd8]\n 21475: u64 [a4 + 0xa8] = a0\n 21479: u64 [s1 + 176] = 0\n 21483: u64 [a2 + 1168] = 0\n 21487: a0 = u64 [s1 + 0xd0]\n 21491: u64 [a4 + 0xb0] = a0\n 21495: u64 [a2 + 1176] = 0\n 21499: a0 = u64 [s1 + 0xc8]\n 21503: u64 [a4 + 0xb8] = a0\n 21507: u64 [a2 + 1184] = 0\n 21511: a0 = s1 + 0x7ff\n 21515: a0 = a0 + 0x501\n 21519: a1 = s1 + 0x7ff\n 21523: a1 = a1 + 0x4e1\n 21527: a3 = u64 [s1 + 0xc0]\n 21531: u64 [a4 + 0xc0] = a3\n 21535: ra = 862, jump @931\n      : @792 [@dyn 431] (gas: 39)\n 21541: t0 = u64 [s1 + 0xd8]\n 21545: a0 = u64 [s1 + 0xb8]\n 21549: ra = a0 + t0\n 21552: a1 = ra <u a0\n 21555: t1 = u64 [s1 + 0xd0]\n 21559: a5 = u64 [s1 + 0xb0]\n 21563: a2 = a5 + t1\n 21566: a2 = a2 + a1\n 21569: a3 = a2 ^ a5\n 21572: a4 = a2 <u a5\n 21575: a4 = a1 if a3 == 0\n 21578: a3 = u64 [s1 + 0xc8]\n 21582: a1 = a5 + a3\n 21585: a4 = a4 + a1\n 21588: t2 = a4 <u a1\n 21591: a1 = a1 <u a5\n 21594: a0 = u64 [s1 + 0xc0]\n 21598: a5 = a5 + a0\n 21601: a1 = a1 + a5\n 21604: t2 = t2 + a1\n 21607: a1 = s1 + 0x7ff\n 21611: a1 = a1 + 0x59\n 21614: a5 = a1 + 0x400\n 21618: u64 [a5 + 0x38] = a4\n 21621: u64 [a5 + 0x30] = a2\n 21624: u64 [a1 + 0x428] = ra\n 21628: u64 [a5 + 0x60] = a0\n 21631: u64 [a5 + 0x58] = a3\n 21634: u64 [a1 + 0x450] = t1\n 21638: u64 [a1 + 0x448] = t0\n 21642: a3 = a1\n 21644: a0 = s1 + 0x7ff\n 21648: a0 = a0 + 0x4c1\n 21652: a1 = s1 + 0x7ff\n 21656: a1 = a1 + 0x4a1\n 21660: a2 = s1 + 0x7ff\n 21664: a2 = a2 + 0x481\n 21668: u64 [a3 + 0x440] = t2\n 21672: ra = 864, jump @948\n      : @793 [@dyn 432] (gas: 4)\n 21678: a0 = s1 + 0x7ff\n 21682: a0 = a0 + 0x461\n 21686: a1 = 0x40\n 21689: ra = 866, jump @2\n      : @794 [@dyn 433] (gas: 8)\n 21695: a3 = s1 + 0x7ff\n 21699: a3 = a3 + 0x59\n 21702: a5 = a3 + 0x400\n 21706: a0 = u64 [a5 + 0x20]\n 21709: a1 = u64 [a5 + 0x18]\n 21712: a2 = u64 [a5 + 0x10]\n 21715: a4 = u64 [a5 + 0x8]\n 21718: t0 = 868, jump @1008\n      : @795 [@dyn 434] (gas: 1)\n 21724: jump @797 if a0 == 0\n      : @796 (gas: 1)\n 21727: jump @533\n      : @797 (gas: 17)\n 21730: a3 = a4\n 21732: a2 = s1 + 0x7ff\n 21736: a2 = a2 + 0x59\n 21739: a0 = u64 [s1 + 0x40]\n 21742: a1 = a2 + 0x300\n 21746: u64 [a1 + 0xe8] = a0\n 21750: a0 = u64 [s1 + 0x48]\n 21753: u64 [a1 + 0xf0] = a0\n 21757: a0 = u64 [s1 + 0x50]\n 21760: u64 [a1 + 0xf8] = a0\n 21764: a1 = s1 + 0x7ff\n 21768: a1 = a1 + 0x441\n 21772: a0 = u64 [s1 + 0x58]\n 21775: u64 [a2 + 0x400] = a0\n 21779: a0 = a4\n 21781: u64 [s1 + 0xd8] = a3\n 21785: ra = 870, jump @4\n      : @798 [@dyn 435] (gas: 6)\n 21791: a0 = u64 [s1 + 0x38]\n 21794: ra = 0x368\n 21798: ecalli 5 // 'caller'\n 21800: a2 = u64 [s1 + 0x60]\n 21803: t0 = 0x36a\n 21807: jump @997\n      : @799 [@dyn 436] (gas: 2)\n 21810: a2 = u64 [s1 + 0x60]\n 21813: t0 = 874, jump @997\n      : @800 [@dyn 437] (gas: 28)\n 21819: t0 = a1 | a0\n 21822: a3 = a3 >> 0x20\n 21825: a2 = reverse a2\n 21827: a1 = a2 << 0x20\n 21830: a1 = a1 | a3\n 21833: a2 = a2 >> 0x20\n 21836: a3 = u64 [0x20158]\n 21841: a0 = s1 + 0x7ff\n 21845: a0 = a0 + 0x59\n 21848: u64 [a0 + 0x3e0] = a3\n 21852: a3 = u64 [0x20160]\n 21857: a4 = u64 [0x20168]\n 21862: a5 = u64 [0x20170]\n 21867: u64 [a0 + 0x3d8] = a3\n 21871: a3 = a0 + 0x300\n 21875: u64 [a3 + 0xd0] = a4\n 21879: u64 [a0 + 960] = 0\n 21883: u64 [a3 + 0xc8] = a5\n 21887: u64 [a3 + 0xb8] = a2\n 21891: u64 [a3 + 0xb0] = a1\n 21895: a1 = 0x20\n 21898: a2 = s1 + 0x7ff\n 21902: a2 = a2 + 0x421\n 21906: a3 = s1 + 0x7ff\n 21910: a3 = a3 + 0x401\n 21914: u64 [a0 + 0x3a8] = t0\n 21918: a0 = u64 [s1 + 0xd8]\n 21922: ra = 876, jump @10\n      : @801 [@dyn 438] (gas: 5)\n 21928: a0 = 0\n 21930: a1 = u64 [s1 + 0x30]\n 21933: a2 = 0\n 21935: ecalli 12 // 'seal_return'\n 21937: jump @863\n      : @802 (gas: 3)\n 21940: a0 = s1 + 0x4a0\n 21944: a1 = 0x40\n 21947: ra = 878, jump @2\n      : @803 [@dyn 439] (gas: 13)\n 21953: a1 = s1 + 0x400\n 21957: a0 = u64 [a1 + 0xb8]\n 21961: u64 [s1 + 0xd0] = a0\n 21965: a0 = u64 [a1 + 0xb0]\n 21969: u64 [s1 + 0xc8] = a0\n 21973: a0 = u64 [a1 + 0xa8]\n 21977: u64 [s1 + 0xc0] = a0\n 21981: a0 = u64 [a1 + 0xa0]\n 21985: u64 [s1 + 0xd8] = a0\n 21989: ra = 0x370\n 21993: ecalli 11 // 'return_data_size'\n 21995: t0 = 0x372\n 21999: jump @1004\n      : @804 [@dyn 440] (gas: 1)\n 22002: t0 = 882, jump @1004\n      : @805 [@dyn 441] (gas: 1)\n 22008: jump @807 if a1 == 0\n      : @806 (gas: 1)\n 22011: jump @533\n      : @807 (gas: 3)\n 22014: a2 = a0\n 22016: a0 = a0 >> 0x20\n 22019: jump @809 if a0 == 0\n      : @808 (gas: 1)\n 22022: jump @533\n      : @809 (gas: 6)\n 22025: i32 a0 = a2 + 0\n 22027: u64 [s1 + 0xd0] = a0\n 22031: a0 = u64 [s1 + 0xd8]\n 22035: a1 = a2\n 22037: u64 [s1 + 0xc8] = a2\n 22041: ra = 884, jump @16\n      : @810 [@dyn 442] (gas: 11)\n 22047: a1 = s1 + 0x2058\n 22051: a2 = u64 [s1 + 0xc8]\n 22055: u32 [a1 + 0x428] = a2\n 22059: i32 a0 = a0 + 0\n 22061: a1 = s1 + 0x2000\n 22065: i32 a1 = a1 + 0x480\n 22069: a2 = 0\n 22071: ecalli 10 // 'return_data_copy'\n 22073: a0 = s1 + 0x2058\n 22077: a0 = i32 [a0 + 0x428]\n 22081: jump @588\n      : @811 (gas: 4)\n 22084: a0 = s1 + 0x7ff\n 22088: a0 = a0 + 0x521\n 22092: a1 = 0x40\n 22095: ra = 886, jump @2\n      : @812 [@dyn 443] (gas: 15)\n 22101: a0 = s1 + 0x7ff\n 22105: a0 = a0 + 0x59\n 22108: a2 = a0 + 0x400\n 22112: a1 = u64 [a2 + 0xe0]\n 22116: u64 [s1 + 0xd0] = a1\n 22120: a1 = u64 [a2 + 0xd8]\n 22124: u64 [s1 + 0xc8] = a1\n 22128: a1 = u64 [a2 + 0xd0]\n 22132: u64 [s1 + 0xc0] = a1\n 22136: a0 = u64 [a2 + 0xc8]\n 22140: u64 [s1 + 0xd8] = a0\n 22144: ra = 0x378\n 22148: ecalli 11 // 'return_data_size'\n 22150: t0 = 0x37a\n 22154: jump @1004\n      : @813 [@dyn 444] (gas: 1)\n 22157: t0 = 890, jump @1004\n      : @814 [@dyn 445] (gas: 1)\n 22163: jump @816 if a1 == 0\n      : @815 (gas: 1)\n 22166: jump @533\n      : @816 (gas: 2)\n 22169: a1 = a0 >> 0x20\n 22172: jump @818 if a1 == 0\n      : @817 (gas: 1)\n 22175: jump @533\n      : @818 (gas: 6)\n 22178: a1 = a0\n 22180: u64 [s1 + 0xc8] = a0\n 22184: i32 a0 = a0 + 0\n 22186: u64 [s1 + 0xd0] = a0\n 22190: a0 = u64 [s1 + 0xd8]\n 22194: ra = 892, jump @16\n      : @819 [@dyn 446] (gas: 11)\n 22200: a1 = s1 + 0x2058\n 22204: a2 = u64 [s1 + 0xc8]\n 22208: u32 [a1 + 0x748] = a2\n 22212: i32 a0 = a0 + 0\n 22214: a1 = s1 + 0x2000\n 22218: i32 a1 = a1 + 0x7a0\n 22222: a2 = 0\n 22224: ecalli 10 // 'return_data_copy'\n 22226: a0 = s1 + 0x2058\n 22230: a0 = i32 [a0 + 0x748]\n 22234: jump @588\n      : @820 (gas: 6)\n 22237: a1 = 0x20250\n 22242: i32 a1 = a1 + 0\n 22244: a0 = 0x1\n 22247: a2 = 0\n 22249: ecalli 12 // 'seal_return'\n 22251: jump @863\n      : @821 (gas: 6)\n 22254: a1 = 0x20250\n 22259: i32 a1 = a1 + 0\n 22261: a0 = 0x1\n 22264: a2 = 0\n 22266: ecalli 12 // 'seal_return'\n 22268: jump @863\n      : @822 (gas: 6)\n 22271: a1 = 0x20250\n 22276: i32 a1 = a1 + 0\n 22278: a0 = 0x1\n 22281: a2 = 0\n 22283: ecalli 12 // 'seal_return'\n 22285: jump @863\n      : @823 (gas: 6)\n 22288: a1 = 0x20250\n 22293: i32 a1 = a1 + 0\n 22295: a0 = 0x1\n 22298: a2 = 0\n 22300: ecalli 12 // 'seal_return'\n 22302: jump @863\n      : @824 (gas: 6)\n 22305: a1 = 0x20250\n 22310: i32 a1 = a1 + 0\n 22312: a0 = 0x1\n 22315: a2 = 0\n 22317: ecalli 12 // 'seal_return'\n 22319: jump @863\n      : @825 (gas: 6)\n 22322: a1 = 0x20250\n 22327: i32 a1 = a1 + 0\n 22329: a0 = 0x1\n 22332: a2 = 0\n 22334: ecalli 12 // 'seal_return'\n 22336: jump @863\n      : @826 (gas: 6)\n 22339: a1 = 0x20250\n 22344: i32 a1 = a1 + 0\n 22346: a0 = 0x1\n 22349: a2 = 0\n 22351: ecalli 12 // 'seal_return'\n 22353: jump @863\n      : @827 (gas: 6)\n 22356: a1 = 0x20250\n 22361: i32 a1 = a1 + 0\n 22363: a0 = 0x1\n 22366: a2 = 0\n 22368: ecalli 12 // 'seal_return'\n 22370: jump @863\n      : @828 (gas: 6)\n 22373: a1 = 0x20250\n 22378: i32 a1 = a1 + 0\n 22380: a0 = 0x1\n 22383: a2 = 0\n 22385: ecalli 12 // 'seal_return'\n 22387: jump @863\n      : @829 (gas: 6)\n 22390: a1 = 0x20250\n 22395: i32 a1 = a1 + 0\n 22397: a0 = 0x1\n 22400: a2 = 0\n 22402: ecalli 12 // 'seal_return'\n 22404: jump @863\n      : @830 (gas: 6)\n 22407: a1 = 0x20250\n 22412: i32 a1 = a1 + 0\n 22414: a0 = 0x1\n 22417: a2 = 0\n 22419: ecalli 12 // 'seal_return'\n 22421: jump @863\n      : @831 (gas: 6)\n 22424: a1 = 0x20250\n 22429: i32 a1 = a1 + 0\n 22431: a0 = 0x1\n 22434: a2 = 0\n 22436: ecalli 12 // 'seal_return'\n 22438: jump @863\n      : @832 (gas: 6)\n 22441: a1 = 0x20250\n 22446: i32 a1 = a1 + 0\n 22448: a0 = 0x1\n 22451: a2 = 0\n 22453: ecalli 12 // 'seal_return'\n 22455: jump @863\n      : @833 (gas: 1)\n 22458: jump @848 if a0 != 4076725131\n      : @834 (gas: 9)\n 22466: a0 = s1 + 0x2858\n 22470: u64 [a0 + 928] = 0\n 22474: u64 [a0 + 920] = 0\n 22478: u64 [a0 + 912] = 0\n 22482: u64 [a0 + 904] = 0\n 22486: a0 = s1 + 0x3000\n 22490: i32 a0 = a0 + 0xfffffffffffffbe0\n 22494: ecalli 15 // 'value_transferred'\n 22496: fallthrough\n      : @835 (gas: 10)\n 22497: a3 = s1 + 0x2858\n 22501: a4 = a3 + 0x300\n 22505: a0 = u64 [a4 + 0x98]\n 22509: a1 = u64 [a4 + 0xa0]\n 22513: a2 = u64 [a4 + 0x90]\n 22517: a3 = u64 [a4 + 0x88]\n 22521: a1 = a1 | a2\n 22524: a0 = a0 | a3\n 22527: a0 = a0 | a1\n 22530: jump @863 if a0 == 0\n      : @836 (gas: 6)\n 22534: a1 = 0x20250\n 22539: i32 a1 = a1 + 0\n 22541: a0 = 0x1\n 22544: a2 = 0\n 22546: ecalli 12 // 'seal_return'\n 22548: jump @863\n      : @837 (gas: 6)\n 22551: a1 = 0x20250\n 22556: i32 a1 = a1 + 0\n 22558: a0 = 0x1\n 22561: a2 = 0\n 22563: ecalli 12 // 'seal_return'\n 22565: jump @863\n      : @838 (gas: 6)\n 22568: a1 = 0x20250\n 22573: i32 a1 = a1 + 0\n 22575: a0 = 0x1\n 22578: a2 = 0\n 22580: ecalli 12 // 'seal_return'\n 22582: jump @863\n      : @839 (gas: 6)\n 22585: a1 = 0x20250\n 22590: i32 a1 = a1 + 0\n 22592: a0 = 0x1\n 22595: a2 = 0\n 22597: ecalli 12 // 'seal_return'\n 22599: jump @863\n      : @840 (gas: 6)\n 22602: a1 = 0x20250\n 22607: i32 a1 = a1 + 0\n 22609: a0 = 0x1\n 22612: a2 = 0\n 22614: ecalli 12 // 'seal_return'\n 22616: jump @863\n      : @841 (gas: 6)\n 22619: a1 = 0x20250\n 22624: i32 a1 = a1 + 0\n 22626: a0 = 0x1\n 22629: a2 = 0\n 22631: ecalli 12 // 'seal_return'\n 22633: jump @863\n      : @842 (gas: 6)\n 22636: a1 = 0x20250\n 22641: i32 a1 = a1 + 0\n 22643: a0 = 0x1\n 22646: a2 = 0\n 22648: ecalli 12 // 'seal_return'\n 22650: jump @863\n      : @843 (gas: 6)\n 22653: a1 = 0x20250\n 22658: i32 a1 = a1 + 0\n 22660: a0 = 0x1\n 22663: a2 = 0\n 22665: ecalli 12 // 'seal_return'\n 22667: jump @863\n      : @844 (gas: 6)\n 22670: a1 = 0x20250\n 22675: i32 a1 = a1 + 0\n 22677: a0 = 0x1\n 22680: a2 = 0\n 22682: ecalli 12 // 'seal_return'\n 22684: jump @863\n      : @845 (gas: 6)\n 22687: a1 = 0x20250\n 22692: i32 a1 = a1 + 0\n 22694: a0 = 0x1\n 22697: a2 = 0\n 22699: ecalli 12 // 'seal_return'\n 22701: jump @863\n      : @846 (gas: 6)\n 22704: a1 = 0x20250\n 22709: i32 a1 = a1 + 0\n 22711: a0 = 0x1\n 22714: a2 = 0\n 22716: ecalli 12 // 'seal_return'\n 22718: jump @863\n      : @847 (gas: 6)\n 22721: a1 = 0x20250\n 22726: i32 a1 = a1 + 0\n 22728: a0 = 0x1\n 22731: a2 = 0\n 22733: ecalli 12 // 'seal_return'\n 22735: jump @863\n      : @848 (gas: 1)\n 22738: jump @857 if a0 != 700225181\n      : @849 (gas: 11)\n 22746: a0 = s1 + 0x2058\n 22750: u64 [a0 + 672] = 0\n 22754: u64 [a0 + 664] = 0\n 22758: u64 [a0 + 656] = 0\n 22762: u64 [a0 + 648] = 0\n 22766: a0 = s1 + 0x2000\n 22770: i32 a0 = a0 + 0x2e0\n 22774: ra = 0x37e\n 22778: ecalli 15 // 'value_transferred'\n 22780: t0 = 0x380\n 22784: jump @1023\n      : @850 [@dyn 447] (gas: 1)\n 22787: t0 = 896, jump @1023\n      : @851 [@dyn 448] (gas: 8)\n 22793: a0 = u64 [a4 + 0x98]\n 22797: a1 = u64 [a4 + 0xa0]\n 22801: a2 = u64 [a4 + 0x90]\n 22805: a3 = u64 [a4 + 0x88]\n 22809: a1 = a1 | a2\n 22812: a0 = a0 | a3\n 22815: a0 = a0 | a1\n 22818: jump @865 if a0 == 0\n      : @852 (gas: 6)\n 22822: a1 = 0x20250\n 22827: i32 a1 = a1 + 0\n 22829: a0 = 0x1\n 22832: a2 = 0\n 22834: ecalli 12 // 'seal_return'\n 22836: jump @863\n      : @853 (gas: 13)\n 22839: a0 = u64 [s1 + 0xb8]\n 22843: a2 = a3 + 0x300\n 22847: u64 [a2 + 0x28] = a0\n 22850: a0 = u64 [s1 + 0xc0]\n 22854: u64 [a2 + 0x30] = a0\n 22857: a0 = u64 [s1 + 0xc8]\n 22861: u64 [a2 + 0x38] = a0\n 22864: a1 = s1 + 0x1b80\n 22868: a0 = u64 [s1 + 0xd0]\n 22872: u64 [a2 + 0x40] = a0\n 22875: a0 = a4\n 22877: u64 [s1 + 0xd8] = a4\n 22881: ra = 898, jump @4\n      : @854 [@dyn 449] (gas: 32)\n 22887: a0 = u64 [0x20088]\n 22892: a1 = u64 [0x20090]\n 22897: a2 = s1 + 0x1858\n 22901: a4 = a2 + 0x300\n 22905: u64 [a4 + 0x20] = a0\n 22908: a0 = u64 [0x20098]\n 22913: u64 [a4 + 0x18] = a1\n 22916: a3 = u64 [0x200a0]\n 22921: u64 [a4 + 0x10] = a0\n 22924: a0 = a2\n 22926: a1 = 0x20\n 22929: a2 = s1 + 0x1b60\n 22933: u64 [a0 + 0x308] = a3\n 22937: a0 = u64 [s1 + 0xd8]\n 22941: ra = 0x384\n 22945: sp = sp + 0xffffffffffffffa0\n 22948: u64 [sp + 0x58] = ra\n 22951: u64 [sp + 0x50] = s0\n 22954: u64 [sp + 0x48] = s1\n 22957: s0 = sp + 0x60\n 22960: sp = sp & 0xffffffffffffffe0\n 22963: a3 = u64 [a2]\n 22965: u64 [sp + 0x18] = a3\n 22968: a3 = u64 [a2 + 0x8]\n 22971: u64 [sp + 0x10] = a3\n 22974: a3 = u64 [a2 + 0x10]\n 22977: u64 [sp + 0x8] = a3\n 22980: a2 = u64 [a2 + 0x18]\n 22983: u64 [sp] = a2\n 22985: s1 = a1\n 22987: ra = 0x6\n 22990: jump @16\n      : @855 [@dyn 450] (gas: 6)\n 22993: a1 = 0x20250\n 22998: i32 a1 = a1 + 0\n 23000: a0 = 0\n 23002: a2 = 0\n 23004: ecalli 12 // 'seal_return'\n 23006: jump @863\n      : @856 (gas: 5)\n 23008: i32 a1 = a1 + 0\n 23010: a0 = 0\n 23012: a2 = 0\n 23014: ecalli 12 // 'seal_return'\n 23016: jump @863\n      : @857 (gas: 2)\n 23018: a2 = s1 + 0x2058\n 23022: jump @861 if a0 != 1901074598\n      : @858 (gas: 8)\n 23029: u64 [a2 + 1120] = 0\n 23033: u64 [a2 + 1112] = 0\n 23037: u64 [a2 + 1104] = 0\n 23041: u64 [a2 + 1096] = 0\n 23045: a0 = s1 + 0x2000\n 23049: i32 a0 = a0 + 0x4a0\n 23053: ecalli 15 // 'value_transferred'\n 23055: fallthrough\n      : @859 (gas: 10)\n 23056: a3 = s1 + 0x2058\n 23060: a4 = a3 + 0x400\n 23064: a0 = u64 [a4 + 0x58]\n 23067: a1 = u64 [a4 + 0x60]\n 23070: a2 = u64 [a4 + 0x50]\n 23073: a3 = u64 [a4 + 0x48]\n 23076: a1 = a1 | a2\n 23079: a0 = a0 | a3\n 23082: a0 = a0 | a1\n 23085: jump @870 if a0 == 0\n      : @860 (gas: 6)\n 23089: a1 = 0x20250\n 23094: i32 a1 = a1 + 0\n 23096: a0 = 0x1\n 23099: a2 = 0\n 23101: ecalli 12 // 'seal_return'\n 23103: jump @863\n      : @861 (gas: 6)\n 23105: a1 = 0x20250\n 23110: i32 a1 = a1 + 0\n 23112: a0 = 0x1\n 23115: a2 = 0\n 23117: ecalli 12 // 'seal_return'\n 23119: jump @863\n      : @862 (gas: 5)\n 23121: i32 a1 = a1 + 0\n 23123: a0 = 0x1\n 23126: a2 = 0\n 23128: ecalli 12 // 'seal_return'\n 23130: fallthrough\n      : @863 (gas: 3)\n 23131: a0 = u64 [s1 + 0xd8]\n 23135: a0 = i32 [a0]\n 23137: jump @867 if a0 >u 35\n      : @864 (gas: 2)\n 23141: a1 = 0x20250\n 23146: jump @862\n      : @865 (gas: 3)\n 23148: a0 = u64 [s1 + 0xd8]\n 23152: a0 = i32 [a0]\n 23154: jump @872 if a0 >u 35\n      : @866 (gas: 2)\n 23158: a1 = 0x20250\n 23163: jump @862\n      : @867 (gas: 5)\n 23165: a0 = s1 + 0x3000\n 23169: i32 a0 = a0 + 0xfffffffffffffc00\n 23173: a1 = 0x4\n 23176: ecalli 3 // 'call_data_load'\n 23178: fallthrough\n      : @868 (gas: 13)\n 23179: a0 = s1 + 0x2858\n 23183: a1 = u64 [a0 + 0x3b8]\n 23187: a2 = u64 [a0 + 0x3c0]\n 23191: a0 = 0x100000000\n 23201: a0 = a0 ^ a1\n 23204: a0 = a0 | a2\n 23207: u64 [s1 + 0xd8] = a1\n 23211: a1 = a1 >> 0x20\n 23214: a1 = a1 <u 0x1\n 23217: u64 [s1 + 0xb8] = a2\n 23221: a1 = 0 if a2 != 0\n 23223: a1 = 0 if a0 == 0\n 23225: jump @876 if a1 != 0\n      : @869 (gas: 2)\n 23228: a1 = 0x20250\n 23233: jump @862\n      : @870 (gas: 3)\n 23235: a0 = u64 [s1 + 0xd8]\n 23239: a0 = i32 [a0]\n 23241: jump @883 if a0 >u 3\n      : @871 (gas: 2)\n 23246: a1 = 0x20250\n 23251: jump @862\n      : @872 (gas: 6)\n 23254: a0 = s1 + 0x2000\n 23258: i32 a0 = a0 + 0x300\n 23262: a1 = 0x4\n 23265: ra = 0x386\n 23269: ecalli 3 // 'call_data_load'\n 23271: fallthrough\n      : @873 [@dyn 451] (gas: 4)\n 23272: a0 = s1 + 0x2058\n 23276: a1 = u64 [a0 + 0x2b8]\n 23280: a0 = u64 [a0 + 0x2c0]\n 23284: t0 = 904, jump @1007\n      : @874 [@dyn 452] (gas: 1)\n 23290: jump @888 if a3 != 0\n      : @875 (gas: 2)\n 23294: a1 = 0x20250\n 23299: jump @862\n      : @876 (gas: 10)\n 23302: a0 = s1 + 0x2858\n 23306: a1 = u64 [a0 + 0x3b0]\n 23310: u64 [s1 + 0xc8] = a1\n 23314: a0 = u64 [a0 + 0x3a8]\n 23318: u64 [s1 + 0xd0] = a0\n 23322: a0 = u64 [s1 + 0xd8]\n 23326: a0 = a0 << 0x20\n 23329: a0 = a0 >> 0x20\n 23332: u64 [s1 + 0xc0] = a0\n 23336: ra = 906, jump @979\n      : @877 [@dyn 453] (gas: 6)\n 23342: a0 = u64 [s1 + 0xc8]\n 23346: a1 = u64 [s1 + 0xd0]\n 23350: a0 = a0 | a1\n 23353: a1 = u64 [s1 + 0xc0]\n 23357: a0 = a0 | a1\n 23360: jump @899 if a0 == 0\n      : @878 (gas: 10)\n 23364: a0 = 0xffffffff\n 23374: u64 [s1 + 0xb0] = a0\n 23378: a0 = s1 + 0x2858\n 23382: u64 [a0 + 992] = 0\n 23386: u64 [a0 + 984] = 0\n 23390: u64 [a0 + 976] = 0\n 23394: u64 [a0 + 968] = 0\n 23398: a0 = s1 + 0x2280\n 23402: a1 = s1 + 0x2c20\n 23406: ra = 908, jump @6\n      : @879 [@dyn 454] (gas: 1)\n 23412: t0 = 910, jump @1023\n      : @880 [@dyn 455] (gas: 28)\n 23418: a1 = u64 [a4 + 0x38]\n 23421: u64 [s1 + 0xa8] = a1\n 23425: a0 = u64 [a4 + 0x40]\n 23428: a1 = a1 >> 0x20\n 23431: a1 = a1 << 0x20\n 23434: a2 = u64 [s1 + 0xd8]\n 23438: a1 = a1 | a2\n 23441: a2 = u64 [a4 + 0x30]\n 23444: u64 [s1 + 0xd8] = a2\n 23448: a2 = u64 [s1 + 0xb8]\n 23452: a0 = a0 | a2\n 23455: a2 = u64 [a4 + 0x28]\n 23458: u64 [s1 + 0xb8] = a2\n 23462: a2 = s1 + 0x2858\n 23466: a3 = a2 + 0x400\n 23470: u64 [a3 + 0x20] = a0\n 23473: u64 [a3 + 0x18] = a1\n 23476: u64 [a2 + 1024] = 0\n 23480: u64 [a2 + 1016] = 0\n 23484: u64 [a2 + 1008] = 0\n 23488: u64 [a2 + 1000] = 0\n 23492: a0 = u64 [s1 + 0xc8]\n 23496: u64 [a3 + 0x10] = a0\n 23499: a0 = u64 [s1 + 0xd0]\n 23503: u64 [a3 + 0x8] = a0\n 23506: a0 = s1 + 0x2c40\n 23510: a1 = s1 + 0x2c60\n 23514: ra = 912, jump @7\n      : @881 [@dyn 456] (gas: 36)\n 23520: a0 = u64 [s1 + 0xb8]\n 23524: a0 = a0 & 0xffffffffffffffff\n 23527: a2 = u64 [s1 + 0xd8]\n 23531: a1 = a2 & 0xffffffffffffffff\n 23534: a2 = u64 [s1 + 0xb0]\n 23538: a3 = u64 [s1 + 0xa8]\n 23542: a2 = a2 & a3\n 23545: a4 = s1 + 0x2058\n 23549: u64 [a4 + 480] = 0\n 23553: a3 = u64 [s1 + 0xc0]\n 23557: a5 = a4 + 0x100\n 23561: u64 [a5 + 0xd8] = a3\n 23565: a3 = u64 [s1 + 0xc8]\n 23569: u64 [a5 + 0xd0] = a3\n 23573: a3 = u64 [s1 + 0xd0]\n 23577: u64 [a5 + 0xc8] = a3\n 23581: u64 [a4 + 512] = 0\n 23585: u64 [a5 + 0xf8] = a2\n 23589: u64 [a5 + 0xf0] = a1\n 23593: a1 = u64 [0x20020]\n 23598: a2 = u64 [0x20028]\n 23603: a3 = u64 [0x20030]\n 23608: u64 [a5 + 0xe8] = a0\n 23612: a0 = a4 + 0x200\n 23616: u64 [a0 + 0x20] = a1\n 23619: u64 [a0 + 0x18] = a2\n 23622: u64 [a0 + 0x10] = a3\n 23625: a1 = a4\n 23627: a0 = u64 [0x20038]\n 23632: a2 = s1 + 0x2260\n 23636: a3 = s1 + 0x2240\n 23640: a4 = s1 + 0x2220\n 23644: u64 [a1 + 0x208] = a0\n 23648: a0 = 0\n 23650: a1 = 0\n 23652: ra = 914, jump @13\n      : @882 [@dyn 457] (gas: 2)\n 23658: a1 = 0x20250\n 23663: jump @856\n      : @883 (gas: 1)\n 23666: ra = 916, jump @979\n      : @884 [@dyn 458] (gas: 9)\n 23672: a0 = s1 + 0x2058\n 23676: u64 [a0 + 1152] = 0\n 23680: u64 [a0 + 1144] = 0\n 23684: u64 [a0 + 1136] = 0\n 23688: u64 [a0 + 1128] = 0\n 23692: a0 = s1 + 0x7ff\n 23696: a0 = a0 + 0x61\n 23699: a1 = s1 + 0x24c0\n 23703: ra = 918, jump @6\n      : @885 [@dyn 459] (gas: 23)\n 23709: a1 = s1 + 0x7ff\n 23713: a1 = a1 + 0x59\n 23716: a2 = u64 [a1 + 0x18]\n 23719: u64 [s1 + 0xc8] = a2\n 23723: a0 = u64 [a1 + 0x8]\n 23726: u64 [s1 + 0xd8] = a0\n 23730: a0 = u64 [a1 + 0x10]\n 23733: u64 [s1 + 0xd0] = a0\n 23737: a0 = u64 [a1 + 0x20]\n 23740: a1 = a2 >> 0x20\n 23743: a1 = a1 << 0x20\n 23746: a2 = s1 + 0x2058\n 23750: u64 [a2 + 1184] = 0\n 23754: u64 [a2 + 1176] = 0\n 23758: u64 [a2 + 1168] = 0\n 23762: u64 [a2 + 1160] = 0\n 23766: u64 [a2 + 1200] = 0\n 23770: u64 [a2 + 1192] = 0\n 23774: u64 [a2 + 0x4c0] = a0\n 23778: u64 [a2 + 0x4b8] = a1\n 23782: a0 = s1 + 0x24e0\n 23786: a1 = s1 + 0x2500\n 23790: ra = 920, jump @7\n      : @886 [@dyn 460] (gas: 42)\n 23796: a0 = u64 [s1 + 0xc8]\n 23800: a0 = a0 << 0x20\n 23803: a0 = a0 >> 0x20\n 23806: a1 = s1 + 0x1000\n 23810: u64 [a1 + 4294965272] = 0\n 23814: a1 = s1 + 0x1000\n 23818: u64 [a1 + 4294965264] = 0\n 23822: a1 = s1 + 0x1000\n 23826: u64 [a1 + 4294965256] = 0\n 23830: a1 = s1 + 0x1000\n 23834: u64 [a1 + 4294965248] = 0\n 23838: a1 = s1 + 0x1000\n 23842: u64 [a1 + 4294965304] = 0\n 23846: a1 = s1 + 0x1000\n 23850: u64 [a1 + 0xfffffffffffff830] = a0\n 23854: a0 = u64 [s1 + 0xd0]\n 23858: a1 = s1 + 0x1000\n 23862: u64 [a1 + 0xfffffffffffff828] = a0\n 23866: a0 = u64 [0x20020]\n 23871: a1 = u64 [0x20028]\n 23876: a2 = u64 [0x20030]\n 23881: a3 = u64 [s1 + 0xd8]\n 23885: a4 = s1 + 0x1000\n 23889: u64 [a4 + 0xfffffffffffff820] = a3\n 23893: a3 = s1 + 0x7ff\n 23897: a3 = a3 + 0x59\n 23900: u64 [a3] = a0\n 23902: u64 [a3 + 0xfffffffffffffff8] = a1\n 23905: a0 = s1 + 0x1000\n 23909: u64 [a0 + 0xfffffffffffff848] = a2\n 23913: a0 = u64 [0x20038]\n 23918: a2 = s1 + 0x7ff\n 23922: a2 = a2 + 0x41\n 23925: a3 = s1 + 0x7ff\n 23929: a3 = a3 + 0x21\n 23932: a4 = s1 + 0x7ff\n 23936: a4 = a4 + 0x1\n 23939: a1 = s1 + 0x1000\n 23943: u64 [a1 + 0xfffffffffffff840] = a0\n 23947: a0 = 0\n 23949: a1 = 0\n 23951: ra = 922, jump @13\n      : @887 [@dyn 461] (gas: 2)\n 23957: a1 = 0x20250\n 23962: jump @856\n      : @888 (gas: 10)\n 23965: a3 = s1 + 0x2058\n 23969: a2 = u64 [a3 + 0x2b0]\n 23973: a3 = u64 [a3 + 0x2a8]\n 23977: u64 [s1 + 0x140] = a3\n 23981: u64 [s1 + 0x148] = a2\n 23985: u64 [s1 + 0x150] = a1\n 23989: a1 = s1 + 0x140\n 23993: u64 [s1 + 0x158] = a0\n 23997: a0 = 0\n 23999: ra = 924, jump @4\n      : @889 [@dyn 462] (gas: 7)\n 24005: u64 [s1 + 312] = 0\n 24009: u64 [s1 + 304] = 0\n 24013: u64 [s1 + 288] = 0x4\n 24018: a0 = 0x20\n 24021: a1 = s1 + 0x120\n 24025: u64 [s1 + 296] = 0\n 24029: ra = 926, jump @4\n      : @890 [@dyn 463] (gas: 4)\n 24035: a0 = 0x2023c\n 24040: u64 [s1 + 0xd8] = a0\n 24044: a0 = i32 [0x2023c]\n 24049: jump @892 if a0 >u 63\n      : @891 (gas: 3)\n 24053: a1 = u64 [s1 + 0xd8]\n 24057: u32 [a1 + 0] = 0x40\n 24060: fallthrough\n      : @892 (gas: 14)\n 24061: a0 = sp + 0xffffffffffffffe0\n 24064: a2 = a0 & 0xffffffffffffffe0\n 24067: u64 [s1 + 0xc8] = a2\n 24071: sp = a2\n 24073: a0 = 0x20250\n 24078: u64 [s1 + 0xd0] = a0\n 24082: i32 a0 = a0 + 0\n 24084: i32 a2 = a2 + 0\n 24086: a1 = 0x40\n 24089: ra = 0x3a0\n 24093: ecalli 8 // 'hash_keccak_256'\n 24095: a3 = u64 [s1 + 0xc8]\n 24099: t0 = 0x3a2\n 24103: jump @1000\n      : @893 [@dyn 464] (gas: 2)\n 24106: a3 = u64 [s1 + 0xc8]\n 24110: t0 = 930, jump @1000\n      : @894 [@dyn 465] (gas: 8)\n 24116: a5 = a4 + 0x200\n 24120: u64 [a5 + 0xe0] = a3\n 24124: u64 [a5 + 0xd8] = a2\n 24128: u64 [a5 + 0xd0] = a1\n 24132: u64 [a5 + 0xc8] = a0\n 24136: a0 = s1 + 0x100\n 24140: a1 = s1 + 0x2320\n 24144: ra = 932, jump @6\n      : @895 [@dyn 466] (gas: 12)\n 24150: a4 = s1 + 0x100\n 24154: a2 = u64 [a4]\n 24156: a0 = u64 [a4 + 0x8]\n 24159: a1 = u64 [a4 + 0x10]\n 24162: a3 = u64 [a4 + 0x18]\n 24165: u64 [s1 + 0xf8] = a3\n 24169: u64 [s1 + 0xf0] = a1\n 24173: u64 [s1 + 0xe8] = a0\n 24177: a0 = 0x80\n 24181: a1 = s1 + 0xe0\n 24185: u64 [s1 + 0xe0] = a2\n 24189: ra = 934, jump @4\n      : @896 [@dyn 467] (gas: 3)\n 24195: a0 = u64 [s1 + 0xd8]\n 24199: a0 = i32 [a0]\n 24201: jump @898 if a0 >u 159\n      : @897 (gas: 5)\n 24206: a1 = u64 [s1 + 0xd8]\n 24210: u32 [a1 + 0] = 0xa0\n 24214: a0 = u64 [s1 + 0xd0]\n 24218: i32 a1 = a0 + 0x80\n 24222: jump @380\n      : @898 (gas: 3)\n 24225: a0 = u64 [s1 + 0xd0]\n 24229: i32 a1 = a0 + 0x80\n 24233: jump @380\n      : @899 (gas: 10)\n 24236: a0 = s1 + 0x2058\n 24240: u64 [a0 + 440] = 0\n 24244: u64 [a0 + 432] = 0\n 24248: u64 [a0 + 424] = 0\n 24252: a2 = a0\n 24254: a0 = 0x1e4fbdf700000000\n 24264: a1 = s1 + 0x2200\n 24268: u64 [a2 + 0x1c0] = a0\n 24272: a0 = 0\n 24274: ra = 936, jump @4\n      : @900 [@dyn 468] (gas: 9)\n 24280: a0 = s1 + 0x2058\n 24284: u64 [a0 + 416] = 0\n 24288: u64 [a0 + 408] = 0\n 24292: u64 [a0 + 400] = 0\n 24296: a2 = a0\n 24298: a0 = 0x4\n 24301: a1 = s1 + 0x21e0\n 24305: u64 [a2 + 392] = 0\n 24309: ra = 938, jump @4\n      : @901 [@dyn 469] (gas: 2)\n 24315: a1 = i32 [0x2023c]\n 24320: jump @903 if a1 >u 63\n      : @902 (gas: 2)\n 24324: u32 [0x2023c] = 0x40\n 24330: fallthrough\n      : @903 (gas: 6)\n 24331: a1 = 0x20250\n 24336: i32 a1 = a1 + 0\n 24338: a0 = 0x1\n 24341: a2 = 0x24\n 24344: ecalli 12 // 'seal_return'\n 24346: fallthrough\n      : @904 (gas: 10)\n 24347: a0 = s1 + 0x1058\n 24351: u64 [a0 + 120] = 0\n 24354: u64 [a0 + 112] = 0\n 24357: u64 [a0 + 104] = 0\n 24360: a2 = a0\n 24362: a0 = 0x4e487b7100000000\n 24372: a1 = s1 + 0x10c0\n 24376: u64 [a2 + 0x80] = a0\n 24380: a0 = 0\n 24382: ra = 940, jump @4\n      : @905 [@dyn 470] (gas: 9)\n 24388: a1 = s1 + 0x1058\n 24392: u64 [a1 + 96] = 0\n 24395: u64 [a1 + 88] = 0\n 24398: u64 [a1 + 72] = 0x11\n 24402: a2 = a1\n 24404: a0 = 0x4\n 24407: a1 = s1 + 0x10a0\n 24411: u64 [a2 + 80] = 0\n 24414: ra = 942, jump @4\n      : @906 [@dyn 471] (gas: 3)\n 24420: a0 = u64 [s1 + 0x28]\n 24423: a0 = i32 [a0]\n 24425: jump @908 if a0 >u 63\n      : @907 (gas: 3)\n 24429: a1 = u64 [s1 + 0x28]\n 24432: u32 [a1 + 0] = 0x40\n 24435: fallthrough\n      : @908 (gas: 6)\n 24436: a0 = 0x1\n 24439: a2 = 0x24\n 24442: a1 = u64 [s1 + 0x30]\n 24445: ra = 0x3b0\n 24449: ecalli 12 // 'seal_return'\n 24451: fallthrough\n      : @909 [@dyn 472] (gas: 18)\n 24452: sp = sp + 0xffffffffffffffc0\n 24455: u64 [sp + 0x38] = ra\n 24458: u64 [sp + 0x30] = s0\n 24461: u64 [sp + 0x28] = s1\n 24464: s0 = sp + 0x40\n 24467: sp = sp & 0xfffffffffffffff0\n 24470: a2 = u64 [a1 + 0x10]\n 24473: a3 = u64 [a1 + 0x18]\n 24476: a4 = u64 [a1 + 0x8]\n 24479: a1 = u64 [a1]\n 24481: a3 = a3 | a4\n 24484: a4 = a1 | a2\n 24487: a4 = a4 | a3\n 24490: a4 = a4 >> 0x20\n 24493: a2 = a2 | a3\n 24496: a2 = a2 << 0x20\n 24499: a2 = a2 | a4\n 24502: jump @913 if a2 != 0\n      : @910 (gas: 3)\n 24505: s1 = a0\n 24507: a0 = sp\n 24509: ra = 946, jump @2\n      : @911 [@dyn 473] (gas: 10)\n 24515: a0 = u64 [sp + 0x10]\n 24518: a1 = u64 [sp + 0x18]\n 24521: a2 = 0x100000000\n 24531: a2 = a2 ^ a0\n 24534: a2 = a2 | a1\n 24537: a3 = a0 >> 0x20\n 24540: a3 = a3 <u 0x1\n 24543: a3 = 0 if a1 != 0\n 24545: a3 = 0 if a2 == 0\n 24547: jump @914 if a3 == 0\n      : @912 (gas: 12)\n 24550: a2 = u64 [sp]\n 24552: a3 = u64 [sp + 0x8]\n 24555: u64 [s1] = a2\n 24557: u64 [s1 + 0x8] = a3\n 24560: u64 [s1 + 0x10] = a0\n 24563: u64 [s1 + 0x18] = a1\n 24566: sp = s0 + 0xffffffffffffffc0\n 24569: ra = u64 [sp + 0x38]\n 24572: s0 = u64 [sp + 0x30]\n 24575: s1 = u64 [sp + 0x28]\n 24578: sp = sp + 0x40\n 24581: ret\n      : @913 (gas: 1)\n 24583: trap\n      : @914 (gas: 7)\n 24584: a1 = 0x20250\n 24589: i32 a1 = a1 + 0\n 24591: a0 = 0x1\n 24594: a2 = 0\n 24596: ra = 0x3b4\n 24600: ecalli 12 // 'seal_return'\n 24602: fallthrough\n      : @915 [@dyn 474] (gas: 23)\n 24603: sp = sp + 0xffffffffffffff10\n 24607: u64 [sp + 0xe8] = ra\n 24611: u64 [sp + 0xe0] = s0\n 24615: u64 [sp + 0xd8] = s1\n 24619: s0 = sp + 0xf0\n 24623: sp = sp & 0xfffffffffffffff0\n 24626: s1 = u64 [a1 + 0x10]\n 24629: t0 = u64 [a1 + 0x18]\n 24632: a5 = u64 [a1 + 0x8]\n 24635: a1 = u64 [a1]\n 24637: u64 [sp + 0x68] = a5\n 24640: u64 [sp + 0x58] = t0\n 24643: t1 = a5 | t0\n 24646: t0 = a1\n 24648: a5 = a1 | s1\n 24651: a5 = a5 | t1\n 24654: a5 = a5 >> 0x20\n 24657: u64 [sp + 0x60] = s1\n 24660: a1 = t1 | s1\n 24663: a1 = a1 << 0x20\n 24666: a1 = a1 | a5\n 24669: u64 [sp + 0x50] = a0\n 24672: jump @922 if a1 != 0\n      : @916 (gas: 28)\n 24676: a0 = u64 [a4 + 0x18]\n 24679: u64 [sp + 0x18] = a0\n 24682: a0 = u64 [a4 + 0x10]\n 24685: u64 [sp + 0x8] = a0\n 24688: a0 = u64 [a4 + 0x8]\n 24691: u64 [sp + 0x10] = a0\n 24694: a0 = u64 [a4]\n 24696: u64 [sp] = a0\n 24698: a0 = u64 [a3 + 0x18]\n 24701: u64 [sp + 0x48] = a0\n 24704: a0 = u64 [a3 + 0x10]\n 24707: u64 [sp + 0x40] = a0\n 24710: a0 = u64 [a3 + 0x8]\n 24713: u64 [sp + 0x38] = a0\n 24716: a0 = u64 [a3]\n 24718: u64 [sp + 0x30] = a0\n 24721: a0 = u64 [a2 + 0x18]\n 24724: a1 = u64 [a2 + 0x10]\n 24727: a3 = u64 [a2 + 0x8]\n 24730: a2 = u64 [a2]\n 24732: u64 [sp + 0xb0] = a2\n 24736: u64 [sp + 0xb8] = a3\n 24740: u64 [sp + 0xc0] = a1\n 24744: a1 = sp + 0xb0\n 24748: u64 [sp + 0xc8] = a0\n 24752: s1 = t0\n 24754: a0 = t0\n 24756: ra = 950, jump @4\n      : @917 [@dyn 475] (gas: 12)\n 24762: a0 = u64 [sp + 0x60]\n 24765: a1 = u64 [sp + 0x58]\n 24768: a2 = a0 | a1\n 24771: a0 = 0x100000000\n 24781: u64 [sp + 0x20] = a0\n 24784: a0 = 0xffffffe0\n 24794: a0 = s1 <u a0\n 24797: a1 = u64 [sp + 0x68]\n 24800: a0 = 0 if a1 != 0\n 24802: u64 [sp + 0x28] = a2\n 24805: a0 = 0 if a2 != 0\n 24807: jump @922 if a0 == 0\n      : @918 (gas: 11)\n 24811: i32 a0 = s1 + 0x20\n 24814: a1 = u64 [sp + 0x30]\n 24817: u64 [sp + 0x90] = a1\n 24821: a1 = u64 [sp + 0x38]\n 24824: u64 [sp + 0x98] = a1\n 24828: a1 = u64 [sp + 0x40]\n 24831: u64 [sp + 0xa0] = a1\n 24835: a1 = sp + 0x90\n 24839: a2 = u64 [sp + 0x48]\n 24842: u64 [sp + 0xa8] = a2\n 24846: ra = 952, jump @4\n      : @919 [@dyn 476] (gas: 8)\n 24852: a0 = u64 [sp + 0x20]\n 24855: a0 = a0 + 0xffffffffffffffc0\n 24858: a0 = s1 <u a0\n 24861: a1 = u64 [sp + 0x68]\n 24864: a0 = 0 if a1 != 0\n 24866: a1 = u64 [sp + 0x28]\n 24869: a0 = 0 if a1 != 0\n 24871: jump @922 if a0 == 0\n      : @920 (gas: 30)\n 24875: a0 = u64 [sp + 0x8]\n 24878: a1 = u64 [sp]\n 24880: a0 = a0 | a1\n 24883: a1 = u64 [sp + 0x18]\n 24886: a2 = u64 [sp + 0x10]\n 24889: a1 = a1 | a2\n 24892: a0 = a0 | a1\n 24895: a1 = a0 >u 0\n 24897: a0 = s1 + 0x60\n 24900: u64 [sp + 0x48] = a0\n 24903: a0 = a0 <u s1\n 24906: a2 = u64 [sp + 0x68]\n 24909: a3 = a2 + a0\n 24912: u64 [sp + 0x40] = a3\n 24915: a2 = a3 <u a2\n 24918: a2 = a0 if a0 == 0\n 24921: a0 = u64 [sp + 0x60]\n 24924: a2 = a2 + a0\n 24927: u64 [sp + 0x68] = a2\n 24930: a0 = a2 <u a0\n 24933: a2 = u64 [sp + 0x58]\n 24936: a0 = a0 + a2\n 24939: u64 [sp + 0x60] = a0\n 24942: i32 a0 = s1 + 0x40\n 24945: u64 [sp + 136] = 0\n 24949: u64 [sp + 128] = 0\n 24953: u64 [sp + 0x70] = a1\n 24956: a1 = sp + 0x70\n 24959: u64 [sp + 120] = 0\n 24962: ra = 954, jump @4\n      : @921 [@dyn 477] (gas: 15)\n 24968: a0 = u64 [sp + 0x50]\n 24971: a1 = u64 [sp + 0x60]\n 24974: u64 [a0 + 0x18] = a1\n 24977: a1 = u64 [sp + 0x68]\n 24980: u64 [a0 + 0x10] = a1\n 24983: a1 = u64 [sp + 0x40]\n 24986: u64 [a0 + 0x8] = a1\n 24989: a1 = u64 [sp + 0x48]\n 24992: u64 [a0] = a1\n 24994: sp = s0 + 0xffffffffffffff10\n 24998: ra = u64 [sp + 0xe8]\n 25002: s0 = u64 [sp + 0xe0]\n 25006: s1 = u64 [sp + 0xd8]\n 25010: sp = sp + 0xf0\n 25014: ret\n      : @922 (gas: 1)\n 25016: trap\n      : @923 (gas: 19)\n 25017: sp = sp + 0xffffffffffffff90\n 25020: u64 [sp + 0x68] = ra\n 25023: u64 [sp + 0x60] = s0\n 25026: s0 = sp + 0x70\n 25029: sp = sp & 0xfffffffffffffff0\n 25032: a3 = u64 [a0 + 0x18]\n 25035: a2 = u64 [a0 + 0x10]\n 25038: t1 = u64 [a0]\n 25040: a0 = u64 [a0 + 0x8]\n 25043: a4 = a3 >u 0\n 25045: a5 = a2 >u 0\n 25047: a5 = a4 if a3 != 0\n 25050: t0 = a0 >u 0\n 25052: a4 = t1 <u 0xffffffffffffffa0\n 25055: a4 = a4 ^ 0x1\n 25058: a4 = t0 if a0 != 0\n 25061: a1 = a2 | a3\n 25064: a4 = a5 if a1 != 0\n 25067: jump @926 if a4 != 0\n      : @924 (gas: 15)\n 25070: a1 = t1 + 0x60\n 25073: a4 = a1 <u t1\n 25076: a5 = a0 + a4\n 25079: a0 = a5 <u a0\n 25082: a0 = a4 if a4 == 0\n 25085: a0 = a0 + a2\n 25088: a2 = a0 <u a2\n 25091: a2 = a2 + a3\n 25094: u64 [sp + 0x40] = a1\n 25097: u64 [sp + 0x48] = a5\n 25100: u64 [sp + 0x50] = a0\n 25103: a0 = 0x40\n 25106: a1 = sp + a0\n 25109: u64 [sp + 0x58] = a2\n 25112: ra = 956, jump @4\n      : @925 [@dyn 478] (gas: 5)\n 25118: sp = s0 + 0xffffffffffffff90\n 25121: ra = u64 [sp + 0x68]\n 25124: s0 = u64 [sp + 0x60]\n 25127: sp = sp + 0x70\n 25130: ret\n      : @926 (gas: 8)\n 25132: u64 [sp + 48] = 0\n 25135: u64 [sp + 40] = 0\n 25138: u64 [sp + 32] = 0\n 25141: a0 = 0x4e487b7100000000\n 25151: a1 = sp + 0x20\n 25154: u64 [sp + 0x38] = a0\n 25157: a0 = 0\n 25159: ra = 958, jump @4\n      : @927 [@dyn 479] (gas: 7)\n 25165: u64 [sp + 24] = 0\n 25168: u64 [sp + 16] = 0\n 25171: u64 [sp + 0] = 0x41\n 25174: a0 = 0x4\n 25177: a1 = sp\n 25179: u64 [sp + 8] = 0\n 25182: ra = 960, jump @4\n      : @928 [@dyn 480] (gas: 2)\n 25188: a1 = i32 [0x2023c]\n 25193: jump @930 if a1 >u 63\n      : @929 (gas: 2)\n 25197: u32 [0x2023c] = 0x40\n 25203: fallthrough\n      : @930 (gas: 7)\n 25204: a1 = 0x20250\n 25209: i32 a1 = a1 + 0\n 25211: a0 = 0x1\n 25214: a2 = 0x24\n 25217: ra = 0x3c2\n 25221: ecalli 12 // 'seal_return'\n 25223: fallthrough\n      : @931 [@dyn 481] (gas: 46)\n 25224: sp = sp + 0xffffffffffffff70\n 25228: u64 [sp + 0x88] = ra\n 25232: u64 [sp + 0x80] = s0\n 25236: u64 [sp + 0x78] = s1\n 25239: s0 = sp + 0x90\n 25243: sp = sp & 0xfffffffffffffff0\n 25246: t0 = a0\n 25248: a2 = u64 [a1]\n 25250: t2 = u64 [a0 + 0x8]\n 25253: a5 = u64 [a1 + 0x8]\n 25256: t1 = u64 [a0]\n 25258: a3 = a2 + 0x1f\n 25261: ra = a3 <u a2\n 25264: a2 = a5 + ra\n 25267: a3 = a3 & 0xffffffffffffffe0\n 25270: u64 [sp + 0x8] = t1\n 25273: t1 = t1 + a3\n 25276: a4 = t1 <u a3\n 25279: a3 = a2 + t2\n 25282: a3 = a3 + a4\n 25285: s1 = a3 ^ a2\n 25288: a0 = a3 <u a2\n 25291: a0 = a4 if s1 == 0\n 25294: a4 = u64 [t0 + 0x18]\n 25297: a5 = a2 <u a5\n 25300: s1 = u64 [a1 + 0x10]\n 25303: t0 = u64 [t0 + 0x10]\n 25306: a1 = u64 [a1 + 0x18]\n 25309: a5 = ra if ra == 0\n 25312: a5 = a5 + s1\n 25315: s1 = a5 <u s1\n 25318: a2 = a5 + t0\n 25321: a0 = a0 + a2\n 25324: a5 = a2 <u a5\n 25327: a2 = a0 <u a2\n 25330: a1 = a1 + a4\n 25333: a1 = a1 + s1\n 25336: a1 = a1 + a5\n 25339: a5 = a1 + a2\n 25342: a1 = a5 >u 0\n 25344: a2 = a0 >u 0\n 25346: a2 = a1 if a5 != 0\n 25349: a1 = a0 | a5\n 25352: s1 = a3 >u 0\n 25354: s1 = a2 if a1 != 0\n 25357: jump @935 if s1 != 0\n      : @932 (gas: 13)\n 25360: a1 = u64 [sp + 0x8]\n 25363: a1 = t1 <u a1\n 25366: a2 = a3 ^ t2\n 25369: s1 = a3 <u t2\n 25372: s1 = a1 if a2 == 0\n 25375: a1 = a0 <u t0\n 25378: a2 = a5 ^ a4\n 25381: a4 = a5 <u a4\n 25384: a4 = a1 if a2 == 0\n 25387: a1 = a0 ^ t0\n 25390: a1 = a1 | a2\n 25393: a4 = s1 if a1 == 0\n 25396: jump @935 if a4 != 0\n      : @933 (gas: 7)\n 25399: u64 [sp + 0x50] = t1\n 25402: u64 [sp + 0x58] = a3\n 25405: u64 [sp + 0x60] = a0\n 25408: a0 = 0x40\n 25411: a1 = sp + 0x50\n 25414: u64 [sp + 0x68] = a5\n 25417: ra = 964, jump @4\n      : @934 [@dyn 482] (gas: 6)\n 25423: sp = s0 + 0xffffffffffffff70\n 25427: ra = u64 [sp + 0x88]\n 25431: s0 = u64 [sp + 0x80]\n 25435: s1 = u64 [sp + 0x78]\n 25438: sp = sp + 0x90\n 25442: ret\n      : @935 (gas: 1)\n 25444: t0 = 966, jump @1022\n      : @936 [@dyn 483] (gas: 1)\n 25450: ra = 968, jump @4\n      : @937 [@dyn 484] (gas: 7)\n 25456: u64 [sp + 40] = 0\n 25459: u64 [sp + 32] = 0\n 25462: u64 [sp + 16] = 0x41\n 25466: a0 = 0x4\n 25469: a1 = sp + 0x10\n 25472: u64 [sp + 24] = 0\n 25475: ra = 970, jump @4\n      : @938 [@dyn 485] (gas: 2)\n 25481: a1 = i32 [0x2023c]\n 25486: jump @940 if a1 >u 63\n      : @939 (gas: 2)\n 25490: u32 [0x2023c] = 0x40\n 25496: fallthrough\n      : @940 (gas: 7)\n 25497: a1 = 0x20250\n 25502: i32 a1 = a1 + 0\n 25504: a0 = 0x1\n 25507: a2 = 0x24\n 25510: ra = 0x3cc\n 25514: ecalli 12 // 'seal_return'\n 25516: fallthrough\n      : @941 [@dyn 486] (gas: 30)\n 25517: sp = sp + 0xffffffffffffff80\n 25520: u64 [sp + 0x78] = ra\n 25523: u64 [sp + 0x70] = s0\n 25526: u64 [sp + 0x68] = s1\n 25529: s0 = sp + 0x80\n 25533: sp = sp & 0xfffffffffffffff0\n 25536: a4 = u64 [a2]\n 25538: a3 = u64 [a1]\n 25540: s1 = u64 [a2 + 0x8]\n 25543: t1 = u64 [a1 + 0x8]\n 25546: t2 = u64 [a2 + 0x10]\n 25549: a5 = u64 [a1 + 0x10]\n 25552: a2 = u64 [a2 + 0x18]\n 25555: a1 = u64 [a1 + 0x18]\n 25558: t0 = t1 ^ s1\n 25561: u64 [sp + 0x8] = s1\n 25564: s1 = t1 <u s1\n 25567: u64 [sp + 0x18] = a4\n 25570: u64 [sp + 0x10] = a3\n 25573: a3 = a3 <u a4\n 25576: u64 [sp] = a3\n 25578: s1 = a3 if t0 == 0\n 25581: a3 = a1 ^ a2\n 25584: ra = a1 <u a2\n 25587: t0 = a5 <u t2\n 25590: ra = t0 if a3 == 0\n 25593: a4 = a5 ^ t2\n 25596: a3 = a3 | a4\n 25599: ra = s1 if a3 == 0\n 25602: jump @943 if ra != 0\n      : @942 (gas: 23)\n 25605: a3 = a5 - t2\n 25608: a1 = a1 - a2\n 25611: a1 = a1 - t0\n 25614: a2 = a3 <u s1\n 25617: a1 = a1 - a2\n 25620: a3 = a3 - s1\n 25623: a2 = u64 [sp + 0x8]\n 25626: a2 = t1 - a2\n 25629: a4 = u64 [sp]\n 25631: a2 = a2 - a4\n 25634: a4 = u64 [sp + 0x18]\n 25637: a5 = u64 [sp + 0x10]\n 25640: a4 = a5 - a4\n 25643: u64 [a0] = a4\n 25645: u64 [a0 + 0x8] = a2\n 25648: u64 [a0 + 0x10] = a3\n 25651: u64 [a0 + 0x18] = a1\n 25654: sp = s0 + 0xffffffffffffff80\n 25657: ra = u64 [sp + 0x78]\n 25660: s0 = u64 [sp + 0x70]\n 25663: s1 = u64 [sp + 0x68]\n 25666: sp = sp + 0x80\n 25670: ret\n      : @943 (gas: 8)\n 25672: u64 [sp + 80] = 0\n 25675: u64 [sp + 72] = 0\n 25678: u64 [sp + 64] = 0\n 25681: a0 = 0x4e487b7100000000\n 25691: a1 = sp + 0x40\n 25694: u64 [sp + 0x58] = a0\n 25697: a0 = 0\n 25699: ra = 974, jump @4\n      : @944 [@dyn 487] (gas: 7)\n 25705: u64 [sp + 56] = 0\n 25708: u64 [sp + 48] = 0\n 25711: u64 [sp + 32] = 0x11\n 25715: a0 = 0x4\n 25718: a1 = sp + 0x20\n 25721: u64 [sp + 40] = 0\n 25724: ra = 976, jump @4\n      : @945 [@dyn 488] (gas: 2)\n 25730: a1 = i32 [0x2023c]\n 25735: jump @947 if a1 >u 63\n      : @946 (gas: 2)\n 25739: u32 [0x2023c] = 0x40\n 25745: fallthrough\n      : @947 (gas: 7)\n 25746: a1 = 0x20250\n 25751: i32 a1 = a1 + 0\n 25753: a0 = 0x1\n 25756: a2 = 0x24\n 25759: ra = 0x3d2\n 25763: ecalli 12 // 'seal_return'\n 25765: fallthrough\n      : @948 [@dyn 489] (gas: 53)\n 25766: sp = sp + 0xffffffffffffff90\n 25769: u64 [sp + 0x68] = ra\n 25772: u64 [sp + 0x60] = s0\n 25775: u64 [sp + 0x58] = s1\n 25778: s0 = sp + 0x70\n 25781: sp = sp & 0xfffffffffffffff0\n 25784: a3 = a1\n 25786: t2 = u64 [a1 + 0x10]\n 25789: a1 = u64 [a1 + 0x8]\n 25792: t0 = u64 [a2 + 0x8]\n 25795: s1 = u64 [a3]\n 25797: u64 [sp] = s1\n 25799: a4 = u64 [a2]\n 25801: u64 [sp + 0x8] = a4\n 25804: ra = u64 [a2 + 0x10]\n 25807: a5 = t0 ^ a1\n 25810: u64 [sp + 0x28] = a5\n 25813: a5 = t0 <u a1\n 25816: a4 = a4 <u s1\n 25819: t1 = u64 [sp + 0x28]\n 25822: a5 = a4 if t1 == 0\n 25825: s1 = a4\n 25827: a3 = u64 [a3 + 0x18]\n 25830: u64 [sp + 0x18] = a3\n 25833: a2 = u64 [a2 + 0x18]\n 25836: u64 [sp + 0x10] = a2\n 25839: a3 = ra - t2\n 25842: a2 = a3 - a5\n 25845: u64 [sp + 0x20] = a2\n 25848: a2 = a3 <u a5\n 25851: u64 [sp + 0x28] = t2\n 25854: a4 = ra <u t2\n 25857: t2 = u64 [sp + 0x18]\n 25860: a3 = u64 [sp + 0x10]\n 25863: a3 = a3 - t2\n 25866: a3 = a3 - a4\n 25869: a3 = a3 - a2\n 25872: a2 = t0 - a1\n 25875: a2 = a2 - s1\n 25878: t0 = u64 [sp]\n 25880: a4 = u64 [sp + 0x8]\n 25883: a4 = a4 - t0\n 25886: a5 = a2 >u 0\n 25888: a4 = a4 <u 0x20\n 25891: a4 = a4 ^ 0x1\n 25894: a4 = a5 if a2 != 0\n 25897: s1 = a3 >s 0\n 25899: a2 = u64 [sp + 0x20]\n 25902: a5 = a2 >u 0\n 25904: a5 = s1 if a3 != 0\n 25907: a2 = a2 | a3\n 25910: a4 = a5 if a2 != 0\n 25913: jump @954 if a4 == 0\n      : @949 (gas: 10)\n 25916: s1 = a0\n 25918: a3 = u64 [sp + 0x28]\n 25921: a0 = t0 | a3\n 25924: a2 = a1 | t2\n 25927: a0 = a0 | a2\n 25930: a0 = a0 >> 0x20\n 25933: a2 = a2 | a3\n 25936: a2 = a2 << 0x20\n 25939: a0 = a0 | a2\n 25942: jump @953 if a0 != 0\n      : @950 (gas: 3)\n 25945: a0 = sp + 0x30\n 25948: a1 = t0\n 25950: ra = 980, jump @2\n      : @951 [@dyn 490] (gas: 9)\n 25956: a0 = u64 [sp + 0x48]\n 25959: a1 = u64 [sp + 0x40]\n 25962: a2 = u64 [sp + 0x30]\n 25965: a3 = u64 [sp + 0x38]\n 25968: a4 = a1 | a0\n 25971: a5 = a2 <u 0x2\n 25974: a5 = 0 if a3 != 0\n 25976: a5 = 0 if a4 != 0\n 25978: jump @955 if a5 == 0\n      : @952 (gas: 10)\n 25981: u64 [s1] = a2\n 25983: u64 [s1 + 0x8] = a3\n 25986: u64 [s1 + 0x10] = a1\n 25989: u64 [s1 + 0x18] = a0\n 25992: sp = s0 + 0xffffffffffffff90\n 25995: ra = u64 [sp + 0x68]\n 25998: s0 = u64 [sp + 0x60]\n 26001: s1 = u64 [sp + 0x58]\n 26004: sp = sp + 0x70\n 26007: ret\n      : @953 (gas: 1)\n 26009: trap\n      : @954 (gas: 2)\n 26010: a1 = 0x20250\n 26015: jump @956\n      : @955 (gas: 2)\n 26017: a1 = 0x20250\n 26022: fallthrough\n      : @956 (gas: 6)\n 26023: i32 a1 = a1 + 0\n 26025: a0 = 0x1\n 26028: a2 = 0\n 26030: ra = 0x3d6\n 26034: ecalli 12 // 'seal_return'\n 26036: fallthrough\n      : @957 [@dyn 491] (gas: 22)\n 26037: sp = sp + 0xffffffffffffff50\n 26041: u64 [sp + 0xa8] = ra\n 26045: u64 [sp + 0xa0] = s0\n 26049: u64 [sp + 0x98] = s1\n 26053: s0 = sp + 0xb0\n 26057: sp = sp & 0xfffffffffffffff0\n 26060: a5 = u64 [a1 + 0x10]\n 26063: a4 = u64 [a1 + 0x18]\n 26066: s1 = u64 [a1 + 0x8]\n 26069: t0 = u64 [a1]\n 26071: u64 [sp + 0x40] = a4\n 26074: u64 [sp + 0x38] = s1\n 26077: a1 = s1 | a4\n 26080: a4 = t0 | a5\n 26083: a4 = a4 | a1\n 26086: a4 = a4 >> 0x20\n 26089: u64 [sp + 0x48] = a5\n 26092: a1 = a1 | a5\n 26095: a1 = a1 << 0x20\n 26098: a1 = a1 | a4\n 26101: u64 [sp + 0x30] = a0\n 26104: jump @962 if a1 != 0\n      : @958 (gas: 21)\n 26108: s1 = t0\n 26110: a0 = u64 [a3 + 0x18]\n 26113: u64 [sp + 0x28] = a0\n 26116: a0 = u64 [a3 + 0x10]\n 26119: u64 [sp + 0x20] = a0\n 26122: a0 = u64 [a3 + 0x8]\n 26125: u64 [sp + 0x18] = a0\n 26128: a0 = u64 [a3]\n 26130: u64 [sp + 0x10] = a0\n 26133: a0 = u64 [a2 + 0x10]\n 26136: a1 = u64 [a2 + 0x8]\n 26139: a2 = u64 [a2]\n 26141: a0 = a0 << 0x20\n 26144: a0 = a0 >> 0x20\n 26147: u64 [sp + 136] = 0\n 26151: u64 [sp + 0x70] = a2\n 26154: u64 [sp + 0x78] = a1\n 26157: a1 = sp + 0x70\n 26160: u64 [sp + 0x80] = a0\n 26164: a0 = t0\n 26166: ra = 984, jump @4\n      : @959 [@dyn 492] (gas: 9)\n 26172: a2 = u64 [sp + 0x48]\n 26175: a3 = u64 [sp + 0x40]\n 26178: a0 = a2 | a3\n 26181: a1 = 0xffffffe0\n 26191: a1 = s1 <u a1\n 26194: a4 = u64 [sp + 0x38]\n 26197: a1 = 0 if a4 != 0\n 26199: a1 = 0 if a0 != 0\n 26201: jump @962 if a1 == 0\n      : @960 (gas: 23)\n 26204: a0 = s1 + 0x40\n 26207: u64 [sp + 0x8] = a0\n 26210: a0 = a0 <u s1\n 26213: a1 = a4 + a0\n 26216: u64 [sp] = a1\n 26218: a1 = a1 <u a4\n 26221: a1 = a0 if a0 == 0\n 26224: a1 = a1 + a2\n 26227: u64 [sp + 0x38] = a1\n 26230: a0 = a1 <u a2\n 26233: a0 = a0 + a3\n 26236: u64 [sp + 0x48] = a0\n 26239: i32 a0 = s1 + 0x20\n 26242: a1 = u64 [sp + 0x10]\n 26245: u64 [sp + 0x50] = a1\n 26248: a1 = u64 [sp + 0x18]\n 26251: u64 [sp + 0x58] = a1\n 26254: a1 = u64 [sp + 0x20]\n 26257: u64 [sp + 0x60] = a1\n 26260: a1 = sp + 0x50\n 26263: a2 = u64 [sp + 0x28]\n 26266: u64 [sp + 0x68] = a2\n 26269: ra = 986, jump @4\n      : @961 [@dyn 493] (gas: 15)\n 26275: a0 = u64 [sp + 0x30]\n 26278: a1 = u64 [sp + 0x38]\n 26281: u64 [a0 + 0x10] = a1\n 26284: a1 = u64 [sp]\n 26286: u64 [a0 + 0x8] = a1\n 26289: a1 = u64 [sp + 0x8]\n 26292: u64 [a0] = a1\n 26294: a1 = u64 [sp + 0x48]\n 26297: u64 [a0 + 0x18] = a1\n 26300: sp = s0 + 0xffffffffffffff50\n 26304: ra = u64 [sp + 0xa8]\n 26308: s0 = u64 [sp + 0xa0]\n 26312: s1 = u64 [sp + 0x98]\n 26316: sp = sp + 0xb0\n 26320: ret\n      : @962 (gas: 1)\n 26322: trap\n      : @963 (gas: 45)\n 26323: sp = sp + 0xffffffffffffff90\n 26326: u64 [sp + 0x68] = ra\n 26329: u64 [sp + 0x60] = s0\n 26332: u64 [sp + 0x58] = s1\n 26335: s0 = sp + 0x70\n 26338: sp = sp & 0xfffffffffffffff0\n 26341: a3 = u64 [a1 + 0x18]\n 26344: u64 [sp + 0x8] = a3\n 26347: a4 = u64 [a2 + 0x18]\n 26350: t2 = u64 [a1]\n 26352: u64 [sp] = t2\n 26354: a3 = u64 [a1 + 0x8]\n 26357: s1 = u64 [a2 + 0x8]\n 26360: a5 = u64 [a2]\n 26362: t1 = u64 [a1 + 0x10]\n 26365: t0 = u64 [a2 + 0x10]\n 26368: a2 = s1 + a3\n 26371: t2 = t2 + a5\n 26374: a5 = t2 <u a5\n 26377: a2 = a2 + a5\n 26380: ra = a2 ^ s1\n 26383: s1 = a2 <u s1\n 26386: s1 = a5 if ra == 0\n 26389: a1 = t0 + t1\n 26392: a5 = u64 [sp + 0x8]\n 26395: a5 = a5 + a4\n 26398: a4 = a1 <u t0\n 26401: a4 = a4 + a5\n 26404: a5 = a1 + s1\n 26407: a1 = a5 <u a1\n 26410: ra = a4 + a1\n 26413: a4 = a2 ^ a3\n 26416: a3 = a2 <u a3\n 26419: a1 = u64 [sp]\n 26421: s1 = t2 <u a1\n 26424: s1 = a3 if a4 != 0\n 26427: t0 = a5 <u t1\n 26430: a1 = u64 [sp + 0x8]\n 26433: a4 = ra ^ a1\n 26436: a3 = ra <u a1\n 26439: a3 = t0 if a4 == 0\n 26442: a1 = a5 ^ t1\n 26445: a1 = a1 | a4\n 26448: s1 = a3 if a1 != 0\n 26451: jump @965 if s1 != 0\n      : @964 (gas: 10)\n 26454: u64 [a0] = t2\n 26456: u64 [a0 + 0x8] = a2\n 26459: u64 [a0 + 0x10] = a5\n 26462: u64 [a0 + 0x18] = ra\n 26465: sp = s0 + 0xffffffffffffff90\n 26468: ra = u64 [sp + 0x68]\n 26471: s0 = u64 [sp + 0x60]\n 26474: s1 = u64 [sp + 0x58]\n 26477: sp = sp + 0x70\n 26480: ret\n      : @965 (gas: 1)\n 26482: t0 = 988, jump @1022\n      : @966 [@dyn 494] (gas: 1)\n 26488: ra = 990, jump @4\n      : @967 [@dyn 495] (gas: 7)\n 26494: u64 [sp + 40] = 0\n 26497: u64 [sp + 32] = 0\n 26500: u64 [sp + 16] = 0x11\n 26504: a0 = 0x4\n 26507: a1 = sp + 0x10\n 26510: u64 [sp + 24] = 0\n 26513: ra = 992, jump @4\n      : @968 [@dyn 496] (gas: 2)\n 26519: a1 = i32 [0x2023c]\n 26524: jump @970 if a1 >u 63\n      : @969 (gas: 2)\n 26528: u32 [0x2023c] = 0x40\n 26534: fallthrough\n      : @970 (gas: 7)\n 26535: a1 = 0x20250\n 26540: i32 a1 = a1 + 0\n 26542: a0 = 0x1\n 26545: a2 = 0x24\n 26548: ra = 0x3e2\n 26552: ecalli 12 // 'seal_return'\n 26554: fallthrough\n      : @971 [@dyn 497] (gas: 23)\n 26555: sp = sp + 0xffffffffffffff10\n 26559: u64 [sp + 0xe8] = ra\n 26563: u64 [sp + 0xe0] = s0\n 26567: u64 [sp + 0xd8] = s1\n 26571: s0 = sp + 0xf0\n 26575: sp = sp & 0xfffffffffffffff0\n 26578: s1 = u64 [a1 + 0x10]\n 26581: t0 = u64 [a1 + 0x18]\n 26584: a5 = u64 [a1 + 0x8]\n 26587: a1 = u64 [a1]\n 26589: u64 [sp + 0x68] = a5\n 26592: u64 [sp + 0x58] = t0\n 26595: t1 = a5 | t0\n 26598: t0 = a1\n 26600: a5 = a1 | s1\n 26603: a5 = a5 | t1\n 26606: a5 = a5 >> 0x20\n 26609: u64 [sp + 0x60] = s1\n 26612: a1 = t1 | s1\n 26615: a1 = a1 << 0x20\n 26618: a1 = a1 | a5\n 26621: u64 [sp + 0x50] = a0\n 26624: jump @978 if a1 != 0\n      : @972 (gas: 27)\n 26628: a0 = u64 [a4 + 0x18]\n 26631: u64 [sp + 0x20] = a0\n 26634: a0 = u64 [a4 + 0x10]\n 26637: u64 [sp + 0x18] = a0\n 26640: a0 = u64 [a4 + 0x8]\n 26643: u64 [sp + 0x10] = a0\n 26646: a0 = u64 [a4]\n 26648: u64 [sp + 0x8] = a0\n 26651: a0 = u64 [a3 + 0x10]\n 26654: u64 [sp + 0x30] = a0\n 26657: a0 = u64 [a3 + 0x8]\n 26660: u64 [sp + 0x38] = a0\n 26663: a0 = u64 [a3]\n 26665: u64 [sp + 0x40] = a0\n 26668: a0 = u64 [a2 + 0x10]\n 26671: a1 = u64 [a2 + 0x8]\n 26674: a2 = u64 [a2]\n 26676: a0 = a0 << 0x20\n 26679: a0 = a0 >> 0x20\n 26682: u64 [sp + 200] = 0\n 26686: u64 [sp + 0xb0] = a2\n 26690: u64 [sp + 0xb8] = a1\n 26694: a1 = sp + 0xb0\n 26698: u64 [sp + 0xc0] = a0\n 26702: s1 = t0\n 26704: a0 = t0\n 26706: ra = 996, jump @4\n      : @973 [@dyn 498] (gas: 12)\n 26712: a0 = u64 [sp + 0x60]\n 26715: a1 = u64 [sp + 0x58]\n 26718: a2 = a0 | a1\n 26721: a0 = 0x100000000\n 26731: u64 [sp + 0x28] = a0\n 26734: a0 = 0xffffffe0\n 26744: a0 = s1 <u a0\n 26747: a1 = u64 [sp + 0x68]\n 26750: a0 = 0 if a1 != 0\n 26752: u64 [sp + 0x48] = a2\n 26755: a0 = 0 if a2 != 0\n 26757: jump @978 if a0 == 0\n      : @974 (gas: 14)\n 26761: a1 = 0xffffffff\n 26771: a2 = u64 [sp + 0x30]\n 26774: a2 = a2 & a1\n 26777: a1 = u64 [sp + 0x38]\n 26780: a1 = a1 & 0xffffffffffffffff\n 26783: a3 = u64 [sp + 0x40]\n 26786: a3 = a3 & 0xffffffffffffffff\n 26789: i32 a0 = s1 + 0x20\n 26792: u64 [sp + 168] = 0\n 26796: u64 [sp + 0x90] = a3\n 26800: u64 [sp + 0x98] = a1\n 26804: a1 = sp + 0x90\n 26808: u64 [sp + 0xa0] = a2\n 26812: ra = 998, jump @4\n      : @975 [@dyn 499] (gas: 8)\n 26818: a0 = u64 [sp + 0x28]\n 26821: a0 = a0 + 0xffffffffffffffc0\n 26824: a0 = s1 <u a0\n 26827: a1 = u64 [sp + 0x68]\n 26830: a0 = 0 if a1 != 0\n 26832: a1 = u64 [sp + 0x48]\n 26835: a0 = 0 if a1 != 0\n 26837: jump @978 if a0 == 0\n      : @976 (gas: 26)\n 26841: a0 = s1 + 0x60\n 26844: u64 [sp + 0x48] = a0\n 26847: a0 = a0 <u s1\n 26850: a1 = u64 [sp + 0x68]\n 26853: a2 = a1 + a0\n 26856: u64 [sp + 0x40] = a2\n 26859: a1 = a2 <u a1\n 26862: a1 = a0 if a0 == 0\n 26865: a0 = u64 [sp + 0x60]\n 26868: a1 = a1 + a0\n 26871: u64 [sp + 0x38] = a1\n 26874: a0 = a1 <u a0\n 26877: a1 = u64 [sp + 0x58]\n 26880: a0 = a0 + a1\n 26883: u64 [sp + 0x68] = a0\n 26886: i32 a0 = s1 + 0x40\n 26889: a1 = u64 [sp + 0x8]\n 26892: u64 [sp + 0x70] = a1\n 26895: a1 = u64 [sp + 0x10]\n 26898: u64 [sp + 0x78] = a1\n 26901: a1 = u64 [sp + 0x18]\n 26904: u64 [sp + 0x80] = a1\n 26908: a1 = sp + 0x70\n 26911: a2 = u64 [sp + 0x20]\n 26914: u64 [sp + 0x88] = a2\n 26918: ra = 1000, jump @4\n      : @977 [@dyn 500] (gas: 15)\n 26924: a0 = u64 [sp + 0x50]\n 26927: a1 = u64 [sp + 0x38]\n 26930: u64 [a0 + 0x10] = a1\n 26933: a1 = u64 [sp + 0x40]\n 26936: u64 [a0 + 0x8] = a1\n 26939: a1 = u64 [sp + 0x48]\n 26942: u64 [a0] = a1\n 26944: a1 = u64 [sp + 0x68]\n 26947: u64 [a0 + 0x18] = a1\n 26950: sp = s0 + 0xffffffffffffff10\n 26954: ra = u64 [sp + 0xe8]\n 26958: s0 = u64 [sp + 0xe0]\n 26962: s1 = u64 [sp + 0xd8]\n 26966: sp = sp + 0xf0\n 26970: ret\n      : @978 (gas: 1)\n 26972: trap\n      : @979 (gas: 13)\n 26973: sp = sp + 0xffffffffffffff40\n 26977: u64 [sp + 0xb8] = ra\n 26981: u64 [sp + 0xb0] = s0\n 26985: u64 [sp + 0xa8] = s1\n 26989: s0 = sp + 0xc0\n 26993: sp = sp & 0xffffffffffffffe0\n 26996: u64 [sp + 152] = 0\n 27000: u64 [sp + 144] = 0\n 27004: u64 [sp + 136] = 0\n 27008: u64 [sp + 128] = 0\n 27012: a0 = sp + 0x60\n 27015: a1 = sp + 0x80\n 27019: ra = 1002, jump @6\n      : @980 [@dyn 501] (gas: 11)\n 27025: a0 = u64 [sp + 0x68]\n 27028: u64 [sp + 0x18] = a0\n 27031: a0 = u64 [sp + 0x60]\n 27034: u64 [sp + 0x10] = a0\n 27037: a0 = u32 [sp + 0x70]\n 27040: u64 [sp + 0x8] = a0\n 27043: s1 = 0x30250\n 27048: i32 a0 = s1 + 0\n 27050: u64 [sp] = a0\n 27052: ecalli 5 // 'caller'\n 27054: fallthrough\n      : @981 (gas: 22)\n 27055: a0 = u64 [0x30258]\n 27060: a1 = u64 [0x30250]\n 27065: a2 = i32 [0x30260]\n 27070: a0 = reverse a0\n 27072: a3 = a0 >> 0x20\n 27075: a1 = reverse a1\n 27077: a4 = a1 << 0x20\n 27080: a3 = a3 | a4\n 27083: a0 = a0 << 0x20\n 27086: a2 = reverse a2\n 27088: a2 = a2 >> 0x20\n 27091: a0 = a0 | a2\n 27094: a1 = a1 >> 0x20\n 27097: a2 = u64 [sp + 0x8]\n 27100: a1 = a1 ^ a2\n 27103: a2 = u64 [sp + 0x10]\n 27106: a0 = a0 ^ a2\n 27109: a0 = a0 | a1\n 27112: a1 = u64 [sp + 0x18]\n 27115: a1 = a1 ^ a3\n 27118: a0 = a0 | a1\n 27121: jump @983 if a0 != 0\n      : @982 (gas: 6)\n 27124: sp = s0 + 0xffffffffffffff40\n 27128: ra = u64 [sp + 0xb8]\n 27132: s0 = u64 [sp + 0xb0]\n 27136: s1 = u64 [sp + 0xa8]\n 27140: sp = sp + 0xc0\n 27144: ret\n      : @983 (gas: 8)\n 27146: u64 [sp + 80] = 0\n 27149: u64 [sp + 72] = 0\n 27152: u64 [sp + 64] = 0\n 27155: a0 = 0x118cdaa700000000\n 27165: a1 = sp + 0x40\n 27168: u64 [sp + 0x58] = a0\n 27171: a0 = 0\n 27173: ra = 1004, jump @4\n      : @984 [@dyn 502] (gas: 4)\n 27179: a0 = u64 [sp]\n 27181: ra = 0x3ee\n 27185: ecalli 5 // 'caller'\n 27187: fallthrough\n      : @985 [@dyn 503] (gas: 4)\n 27188: a0 = u64 [s1 + 0x8]\n 27191: a1 = i32 [s1 + 0x10]\n 27194: a2 = u64 [s1]\n 27196: t0 = 1008, jump @1001\n      : @986 [@dyn 504] (gas: 7)\n 27202: u64 [sp + 56] = 0\n 27205: u64 [sp + 0x30] = a1\n 27208: u64 [sp + 0x28] = a0\n 27211: a0 = 0x4\n 27214: a1 = sp + 0x20\n 27217: u64 [sp + 0x20] = a3\n 27220: ra = 1010, jump @4\n      : @987 [@dyn 505] (gas: 2)\n 27226: a1 = i32 [0x2023c]\n 27231: jump @989 if a1 >u 63\n      : @988 (gas: 2)\n 27235: u32 [0x2023c] = 0x40\n 27241: fallthrough\n      : @989 (gas: 8)\n 27242: a1 = 0x20250\n 27247: i32 a1 = a1 + 0\n 27249: a0 = 0x1\n 27252: a2 = 0x24\n 27255: ecalli 12 // 'seal_return'\n 27257: a0 = 0\n 27259: ra = 0x3f4\n 27263: jump @22\n      : @990 [export #0: 'call'] (gas: 2)\n 27266: a0 = 0\n 27268: ra = 1012, jump @22\n      : @991 [@dyn 506] [export #1: 'deploy'] (gas: 2)\n 27274: a0 = 0x1\n 27277: ra = 1014, jump @22\n      : @992 [@dyn 507] (gas: 11)\n 27283: a1 = u64 [s1 + 0xd8]\n 27287: a0 = u64 [s1 + 0xc8]\n 27291: a3 = u64 [s1 + 0xc0]\n 27295: a3 = a3 | a0\n 27298: a4 = 0x100000000\n 27308: a0 = 0xfffffffc\n 27318: a0 = a1 <u a0\n 27321: a2 = u64 [s1 + 0xd0]\n 27325: a0 = 0 if a2 != 0\n 27327: a0 = 0 if a3 != 0\n 27329: jump [t0]\n      : @993 (gas: 7)\n 27331: a4 = 0x100000000\n 27341: a0 = 0xfffffffc\n 27351: a0 = a1 <u a0\n 27354: a2 = u64 [s1 + 0xd0]\n 27358: a0 = 0 if a2 != 0\n 27360: a0 = 0 if a3 != 0\n 27362: jump [t0]\n      : @994 (gas: 9)\n 27364: a1 = u64 [s1 + 0xd8]\n 27368: a0 = u64 [s1 + 0xc0]\n 27372: a0 = a0 + 0xffffffffffffffdc\n 27375: a0 = a1 <u a0\n 27378: a2 = u64 [s1 + 0xd0]\n 27382: a0 = 0 if a2 != 0\n 27384: a2 = u64 [s1 + 0xc8]\n 27388: a0 = 0 if a2 != 0\n 27390: jump [t0]\n      : @995 (gas: 9)\n 27392: a2 = u64 [s1 + 0xd8]\n 27396: a0 = u64 [s1 + 0xc0]\n 27400: a0 = a0 + 0xffffffffffffff9c\n 27403: a0 = a2 <u a0\n 27406: a1 = u64 [s1 + 0xd0]\n 27410: a0 = 0 if a1 != 0\n 27412: a1 = u64 [s1 + 0xc8]\n 27416: a0 = 0 if a1 != 0\n 27418: jump [t0]\n      : @996 (gas: 9)\n 27420: a3 = u64 [s1 + 0xc8]\n 27424: a4 = u64 [s1 + 0xd0]\n 27428: a1 = u64 [s1 + 0xd8]\n 27432: a2 = 0x100000000\n 27442: a0 = 0xffffffbc\n 27452: a0 = a1 <u a0\n 27455: a0 = 0 if a4 != 0\n 27457: a0 = 0 if a3 != 0\n 27459: jump [t0]\n      : @997 (gas: 8)\n 27461: a0 = u64 [a2 + 0x8]\n 27464: a1 = i32 [a2 + 0x10]\n 27467: a2 = u64 [a2]\n 27469: a3 = reverse a0\n 27471: a0 = a3 << 0x20\n 27474: a1 = reverse a1\n 27476: a1 = a1 >> 0x20\n 27479: jump [t0]\n      : @998 (gas: 16)\n 27481: a2 = u64 [s1 + 0x60]\n 27484: a0 = u64 [a2 + 0x8]\n 27487: a1 = i32 [a2 + 0x10]\n 27490: a2 = u64 [a2]\n 27492: a0 = reverse a0\n 27494: a3 = a0 << 0x20\n 27497: a1 = reverse a1\n 27499: a1 = a1 >> 0x20\n 27502: a3 = a3 | a1\n 27505: a0 = a0 >> 0x20\n 27508: a1 = reverse a2\n 27510: a2 = a1 << 0x20\n 27513: a0 = a0 | a2\n 27516: a1 = a1 >> 0x20\n 27519: a2 = s1 + 0x1058\n 27523: jump [t0]\n      : @999 (gas: 15)\n 27525: a0 = u64 [a2 + 0x8]\n 27528: a1 = i32 [a2 + 0x10]\n 27531: a2 = u64 [a2]\n 27533: a0 = reverse a0\n 27535: a3 = a0 << 0x20\n 27538: a1 = reverse a1\n 27540: a1 = a1 >> 0x20\n 27543: a3 = a3 | a1\n 27546: a0 = a0 >> 0x20\n 27549: a1 = reverse a2\n 27551: a2 = a1 << 0x20\n 27554: a0 = a0 | a2\n 27557: a1 = a1 >> 0x20\n 27560: a2 = s1 + 0x1858\n 27564: jump [t0]\n      : @1000 (gas: 10)\n 27566: a0 = u64 [a3 + 0x18]\n 27569: a1 = u64 [a3 + 0x10]\n 27572: a2 = u64 [a3 + 0x8]\n 27575: a3 = u64 [a3]\n 27577: a0 = reverse a0\n 27579: a1 = reverse a1\n 27581: a2 = reverse a2\n 27583: a3 = reverse a3\n 27585: a4 = s1 + 0x2058\n 27589: jump [t0]\n      : @1001 (gas: 11)\n 27591: a0 = reverse a0\n 27593: a3 = a0 << 0x20\n 27596: a1 = reverse a1\n 27598: a1 = a1 >> 0x20\n 27601: a3 = a3 | a1\n 27604: a0 = a0 >> 0x20\n 27607: a1 = reverse a2\n 27609: a2 = a1 << 0x20\n 27612: a0 = a0 | a2\n 27615: a1 = a1 >> 0x20\n 27618: jump [t0]\n      : @1002 (gas: 14)\n 27620: a0 = u64 [a3 + 0x18]\n 27623: a1 = u64 [a3 + 0x10]\n 27626: a2 = u64 [a3 + 0x8]\n 27629: a3 = u64 [a3]\n 27631: a0 = reverse a0\n 27633: a4 = reverse a1\n 27635: a2 = reverse a2\n 27637: a3 = reverse a3\n 27639: a1 = u64 [s1 + 0xd8]\n 27643: u64 [a1 + 0x18] = a3\n 27646: u64 [a1 + 0x10] = a2\n 27649: u64 [a1 + 0x8] = a4\n 27652: u64 [a1] = a0\n 27654: jump [t0]\n      : @1003 (gas: 11)\n 27656: a0 = u64 [s1 + 0xc0]\n 27660: a1 = u64 [s1 + 0xb8]\n 27664: a2 = a1 | a0\n 27667: a3 = 0x100000000\n 27677: a0 = 0xffffffe0\n 27687: a1 = u64 [s1 + 0xd8]\n 27691: a0 = a1 <u a0\n 27694: a1 = u64 [s1 + 0xc8]\n 27698: a0 = 0 if a1 != 0\n 27700: a0 = 0 if a2 != 0\n 27702: jump [t0]\n      : @1004 (gas: 12)\n 27704: a1 = u64 [s1 + 0xd0]\n 27708: a2 = u64 [s1 + 0xc0]\n 27712: a1 = a1 | a2\n 27715: a3 = u64 [s1 + 0xc8]\n 27719: a2 = u64 [s1 + 0xd8]\n 27723: a2 = a2 | a3\n 27726: a2 = a2 | a1\n 27729: a2 = a2 >> 0x20\n 27732: a1 = a1 | a3\n 27735: a1 = a1 << 0x20\n 27738: a1 = a1 | a2\n 27741: jump [t0]\n      : @1005 (gas: 17)\n 27743: a2 = u64 [s1 + 0x60]\n 27746: a0 = u64 [a2 + 0x8]\n 27749: a1 = i32 [a2 + 0x10]\n 27752: a2 = u64 [a2]\n 27754: a0 = reverse a0\n 27756: a3 = a0 << 0x20\n 27759: a1 = reverse a1\n 27761: a1 = a1 >> 0x20\n 27764: a3 = a3 | a1\n 27767: a0 = a0 >> 0x20\n 27770: a1 = reverse a2\n 27772: a2 = a1 << 0x20\n 27775: a0 = a0 | a2\n 27778: a1 = a1 >> 0x20\n 27781: a2 = s1 + 0x7ff\n 27785: a2 = a2 + 0x59\n 27788: jump [t0]\n      : @1006 (gas: 19)\n 27790: a3 = u64 [s1 + 0xd8]\n 27794: a0 = u64 [a3 + 0x18]\n 27797: a1 = u64 [a3 + 0x10]\n 27800: a2 = u64 [a3 + 0x8]\n 27803: a3 = u64 [a3]\n 27805: a5 = reverse a0\n 27807: a4 = reverse a1\n 27809: a0 = reverse a2\n 27811: a1 = reverse a3\n 27813: u64 [s1 + 0xa8] = a1\n 27817: a2 = u64 [s1 + 0xd0]\n 27821: u64 [a2 + 0x18] = a1\n 27824: u64 [s1 + 0xb0] = a0\n 27828: u64 [a2 + 0x10] = a0\n 27831: u64 [s1 + 0xa0] = a4\n 27835: u64 [a2 + 0x8] = a4\n 27838: u64 [s1 + 0x98] = a5\n 27842: u64 [a2] = a5\n 27844: jump [t0]\n      : @1007 (gas: 8)\n 27846: a2 = 0x100000000\n 27856: a2 = a2 ^ a1\n 27859: a2 = a2 | a0\n 27862: a3 = a1 >> 0x20\n 27865: a3 = a3 <u 0x1\n 27868: a3 = 0 if a0 != 0\n 27870: a3 = 0 if a2 == 0\n 27872: jump [t0]\n      : @1008 (gas: 8)\n 27874: a0 = a0 | a2\n 27877: a2 = a4 | a1\n 27880: a2 = a2 | a0\n 27883: a2 = a2 >> 0x20\n 27886: a0 = a0 | a1\n 27889: a0 = a0 << 0x20\n 27892: a0 = a0 | a2\n 27895: jump [t0]\n      : @1009 (gas: 13)\n 27897: a1 = u64 [s1 + 0x98]\n 27901: a0 = a1 + 0x2\n 27904: a1 = a0 <u a1\n 27907: a3 = u64 [s1 + 0xa0]\n 27911: a2 = a3 + a1\n 27914: a3 = a2 <u a3\n 27917: a3 = a1 if a1 == 0\n 27920: a1 = u64 [s1 + 0xb0]\n 27924: a3 = a3 + a1\n 27927: a1 = a3 <u a1\n 27930: a4 = u64 [s1 + 0xa8]\n 27934: a1 = a1 + a4\n 27937: jump [t0]\n      : @1010 (gas: 9)\n 27939: a0 = u64 [a2 + 0x8]\n 27942: a1 = i32 [a2 + 0x10]\n 27945: a2 = u64 [a2]\n 27947: a0 = reverse a0\n 27949: a3 = a0 << 0x20\n 27952: a1 = reverse a1\n 27954: a1 = a1 >> 0x20\n 27957: a1 = a1 | a3\n 27960: jump [t0]\n      : @1011 (gas: 12)\n 27962: a0 = u64 [s1 + 0xc0]\n 27966: a1 = u64 [s1 + 0xc8]\n 27970: a0 = a0 | a1\n 27973: a2 = u64 [s1 + 0xb8]\n 27977: a1 = u64 [s1 + 0xd8]\n 27981: a1 = a1 | a2\n 27984: a1 = a1 | a0\n 27987: a1 = a1 >> 0x20\n 27990: a0 = a0 | a2\n 27993: a0 = a0 << 0x20\n 27996: a0 = a0 | a1\n 27999: jump [t0]\n      : @1012 (gas: 13)\n 28001: a0 = u64 [s1 + 0x98]\n 28005: a0 = a0 + 0x1\n 28008: a1 = a0 <u 0x1\n 28011: a2 = u64 [s1 + 0xa0]\n 28015: a1 = a1 + a2\n 28018: a2 = a0 | a1\n 28021: a2 = a2 <u 0x1\n 28024: a3 = u64 [s1 + 0xb0]\n 28028: a2 = a2 + a3\n 28031: a3 = a2 <u a3\n 28034: a4 = u64 [s1 + 0xa8]\n 28038: a3 = a3 + a4\n 28041: jump [t0]\n      : @1013 (gas: 8)\n 28043: a2 = a3 | a4\n 28046: a1 = a0 | a5\n 28049: a1 = a1 | a2\n 28052: a1 = a1 >> 0x20\n 28055: a2 = a2 | a5\n 28058: a2 = a2 << 0x20\n 28061: a1 = a1 | a2\n 28064: jump [t0]\n      : @1014 (gas: 9)\n 28066: a4 = u64 [s1 + 0xc8]\n 28070: a3 = u64 [s1 + 0xd0]\n 28074: a1 = u64 [s1 + 0xd8]\n 28078: a2 = 0x100000000\n 28088: a0 = 0xffffffbc\n 28098: a0 = a1 <u a0\n 28101: a0 = 0 if a3 != 0\n 28103: a0 = 0 if a4 != 0\n 28105: jump [t0]\n      : @1015 (gas: 8)\n 28107: a3 = u64 [s1 + 0xd8]\n 28111: a0 = 0xffffffbc\n 28121: a0 = a3 <u a0\n 28124: a1 = u64 [s1 + 0xd0]\n 28128: a0 = 0 if a1 != 0\n 28130: a1 = u64 [s1 + 0xc8]\n 28134: a0 = 0 if a1 != 0\n 28136: jump [t0]\n      : @1016 (gas: 11)\n 28138: a2 = a2 - a3\n 28141: a3 = a4 <u a5\n 28144: a2 = a2 - a3\n 28147: u64 [s1 + 0x60] = a2\n 28150: a4 = a4 - a5\n 28153: u64 [s1 + 0x58] = a4\n 28156: a0 = a0 - a1\n 28159: a0 = a0 - t2\n 28162: u64 [s1 + 0x50] = a0\n 28165: a0 = t1 - ra\n 28168: jump [t0]\n      : @1017 (gas: 8)\n 28170: a4 = a4 | a2\n 28173: a2 = a0 | a1\n 28176: a2 = a2 | a4\n 28179: a2 = a2 >> 0x20\n 28182: a1 = a1 | a4\n 28185: a1 = a1 << 0x20\n 28188: a1 = a1 | a2\n 28191: jump [t0]\n      : @1018 (gas: 9)\n 28193: a4 = u64 [s1 + 0xc8]\n 28197: a3 = u64 [s1 + 0xd0]\n 28201: a1 = u64 [s1 + 0xd8]\n 28205: a0 = u64 [s1 + 0xc0]\n 28209: a0 = a0 + 0xffffffffffffffdc\n 28212: a0 = a1 <u a0\n 28215: a0 = 0 if a3 != 0\n 28217: a0 = 0 if a4 != 0\n 28219: jump [t0]\n      : @1019 (gas: 9)\n 28221: a0 = u64 [s1 + 0xc0]\n 28225: a0 = a0 + 0xffffffffffffffc0\n 28228: a1 = u64 [s1 + 0xd8]\n 28232: a0 = a1 <u a0\n 28235: a1 = u64 [s1 + 0xc8]\n 28239: a0 = 0 if a1 != 0\n 28241: a1 = u64 [s1 + 0xd0]\n 28245: a0 = 0 if a1 != 0\n 28247: jump [t0]\n      : @1020 (gas: 9)\n 28249: a1 = u64 [sp]\n 28251: a1 = reverse a1\n 28253: a2 = u64 [sp + 0x8]\n 28256: a2 = reverse a2\n 28258: a3 = u64 [sp + 0x10]\n 28261: a3 = reverse a3\n 28263: a4 = u64 [sp + 0x18]\n 28266: a4 = reverse a4\n 28268: jump [t0]\n      : @1021 (gas: 9)\n 28270: a2 = reverse a2\n 28272: a2 = a2 >> 0x20\n 28275: a1 = a1 | a2\n 28278: a2 = u64 [s1 + 0xb8]\n 28282: a2 = reverse a2\n 28284: a3 = a2 << 0x20\n 28287: a0 = a0 >> 0x20\n 28290: a0 = a0 | a3\n 28293: jump [t0]\n      : @1022 (gas: 8)\n 28295: u64 [sp + 64] = 0\n 28298: u64 [sp + 56] = 0\n 28301: u64 [sp + 48] = 0\n 28304: a0 = 0x4e487b7100000000\n 28314: a1 = sp + 0x30\n 28317: u64 [sp + 0x48] = a0\n 28320: a0 = 0\n 28322: jump [t0]\n      : @1023 (gas: 4)\n 28324: a0 = 0x2058\n 28328: a3 = s1 + a0\n 28331: a4 = a3 + 0x200\n 28335: jump [t0]\n      : @1024 (gas: 4)\n 28337: a0 = 0x2858\n 28341: a3 = s1 + a0\n 28344: a4 = a3 + 0x100\n 28348: jump [t0]\n      : @1025 (gas: 7)\n 28350: a2 = a3 + a1\n 28353: a3 = a2 <u a3\n 28356: a3 = a1 if a1 == 0\n 28359: a1 = u64 [s1 + 0xa8]\n 28363: a3 = a3 + a1\n 28366: a1 = a3 <u a1\n 28369: jump [t0]\n      : @1026 (gas: 5)\n 28371: sp = a0\n 28373: i32 a2 = a0 + 0\n 28375: a1 = 0x40\n 28378: a0 = u64 [s1 + 0x30]\n 28381: jump [t0]\n      : @1027 (gas: 5)\n 28383: a0 = sp + 0xffffffffffffffe0\n 28386: a2 = a0 & 0xffffffffffffffe0\n 28389: u64 [s1 + 0xd8] = a2\n 28393: sp = a2\n 28395: jump [t0]\n      : @1028 (gas: 6)\n 28397: u64 [a1 + 352] = 0\n 28401: u64 [a1 + 344] = 0\n 28405: u64 [a1 + 328] = 0x5\n 28410: a2 = a1\n 28412: a0 = 0x20\n 28415: jump [t0]\n      : @1029 (gas: 8)\n 28417: a0 = u64 [a4 + 0xd8]\n 28421: a1 = u64 [a4 + 0xe0]\n 28425: a2 = u64 [a4 + 0xd0]\n 28429: a3 = u64 [a4 + 0xc8]\n 28433: a1 = a1 | a2\n 28436: a0 = a0 | a3\n 28439: a0 = a0 | a1\n 28442: jump [t0]\n      : @1030 (gas: 4)\n 28444: i32 a0 = a1 + 0x24\n 28447: a1 = 0x1858\n 28451: a2 = s1 + a1\n 28454: jump [t0]\n      : @1031 (gas: 4)\n 28456: i32 a0 = a1 + 0x24\n 28459: a1 = 0x1058\n 28463: a2 = s1 + a1\n 28466: jump [t0]\n      : @1032 (gas: 4)\n 28468: i32 a0 = a1 + 0x4\n 28471: a1 = 0x1858\n 28475: a2 = s1 + a1\n 28478: jump [t0]\n      : @1033 (gas: 4)\n 28480: i32 a0 = a1 + 0x4\n 28483: a1 = 0x1058\n 28487: a2 = s1 + a1\n 28490: jump [t0]\n      : @1034 (gas: 2)\n 28492: a3 = a2 & 0x40\n 28495: jump @1038 if a3 != 0\n      : @1035 (gas: 1)\n 28498: jump @1037 if a2 == 0\n      : @1036 (gas: 6)\n 28501: i32 a3 = 0x40 - a2\n 28504: a3 = a1 << a3\n 28507: a1 = a1 >> a2\n 28510: a0 = a0 >> a2\n 28513: a0 = a0 | a3\n 28516: ret\n      : @1037 (gas: 1)\n 28518: ret\n      : @1038 (gas: 4)\n 28520: a0 = a2 + 0xffffffffffffffc0\n 28523: a0 = a1 >> a0\n 28526: a1 = 0\n 28528: ret\n      : @1039 (gas: 2)\n 28530: a3 = a2 & 0x40\n 28533: jump @1043 if a3 != 0\n      : @1040 (gas: 1)\n 28536: jump @1042 if a2 == 0\n      : @1041 (gas: 6)\n 28539: i32 a3 = 0x40 - a2\n 28542: a3 = a0 >> a3\n 28545: a0 = a0 << a2\n 28548: a1 = a1 << a2\n 28551: a1 = a1 | a3\n 28554: ret\n      : @1042 (gas: 1)\n 28556: ret\n      : @1043 (gas: 4)\n 28558: a1 = a2 + 0xffffffffffffffc0\n 28561: a1 = a0 << a1\n 28564: a0 = 0\n 28566: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "collateralBalances(address)": "29bc969d",
              "collateralFactor()": "df011c41",
              "collateralToken()": "b2016bd4",
              "depositCollateral(uint256)": "bad4a01f",
              "getLoanDetails(address)": "e8a7da8e",
              "lendingToken()": "aaaca558",
              "loans(address)": "73b4086b",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "repayLoan(uint256)": "ab7b1c89",
              "setCollateralFactor(uint256)": "b5c22157",
              "takeLoan(uint256)": "8c803fc2",
              "transferOwnership(address)": "f2fde38b",
              "withdrawCollateral(uint256)": "6112fe2e"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"contracts/LendingBorrowing.sol\"\nobject \"LendingBorrowing_1361\" {\n    code {\n        {\n            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"LendingBorrowing_1361\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n            let value0 := abi_decode_contract_IERC20_fromMemory(_1)\n            let value1 := abi_decode_contract_IERC20_fromMemory(add(_1, 32))\n            let value := mload(add(_1, 64))\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 6:982:992  \"msg.sender\" */ caller())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 36)\n            }\n            let _2 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 6:982:992  \"msg.sender\" */ caller()))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _3 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 6:982:992  \"msg.sender\" */ caller())\n            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n            sstore(1, or(and(sload(1), not(sub(shl(160, 1), 1))), and(value0, sub(shl(160, 1), 1))))\n            sstore(/** @src 6:1050:1078  \"lendingToken = _lendingToken\" */ 0x02, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ or(and(sload(/** @src 6:1050:1078  \"lendingToken = _lendingToken\" */ 0x02), /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ not(sub(shl(160, 1), 1))), and(value1, sub(shl(160, 1), 1))))\n            sstore(/** @src 6:1089:1125  \"collateralFactor = _collateralFactor\" */ 0x03, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ value)\n            let _4 := datasize(\"LendingBorrowing_1361_deployed\")\n            codecopy(_3, dataoffset(\"LendingBorrowing_1361_deployed\"), _4)\n            return(_3, _4)\n        }\n        function abi_decode_contract_IERC20_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"contracts/LendingBorrowing.sol\"\n    object \"LendingBorrowing_1361_deployed\" {\n        code {\n            {\n                /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x29bc969d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, sub(shl(160, 1), 1))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        mstore(0, _2)\n                        mstore(32, 4)\n                        mstore(_1, sload(keccak256(0, 64)))\n                        return(_1, 32)\n                    }\n                    case 0x6112fe2e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        if /** @src 6:1876:1887  \"_amount > 0\" */ iszero(value_1)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 43)\n                            mstore(add(memPtr, 68), \"Withdrawal amount must be greate\")\n                            mstore(add(memPtr, 100), \"r than zero\")\n                            revert(memPtr, 132)\n                        }\n                        mstore(0, /** @src 6:1971:1981  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 6:1965:1970  \"loans\" */ 0x05)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_8992(memPtr_1)\n                        mstore(memPtr_1, sload(dataSlot))\n                        mstore(add(memPtr_1, 32), sload(add(dataSlot, 1)))\n                        let _3 := iszero(iszero(and(sload(add(dataSlot, 2)), 0xff)))\n                        mstore(add(memPtr_1, 64), _3)\n                        if _3\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 33)\n                            mstore(add(memPtr_2, 68), \"Cannot withdraw locked collatera\")\n                            mstore(add(memPtr_2, 100), \"l\")\n                            revert(memPtr_2, 132)\n                        }\n                        mstore(0, /** @src 6:1971:1981  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        if /** @src 6:2155:2183  \"currentCollateral >= _amount\" */ lt(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ sload(keccak256(0, 64)), /** @src 6:2155:2183  \"currentCollateral >= _amount\" */ value_1)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, 36), 31)\n                            mstore(add(memPtr_3, 68), \"Insufficient collateral balance\")\n                            revert(memPtr_3, 100)\n                        }\n                        mstore(0, /** @src 6:1971:1981  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        let dataSlot_1 := keccak256(0, 64)\n                        sstore(dataSlot_1, /** @src 6:2253:2294  \"collateralBalances[msg.sender] -= _amount\" */ checked_sub_uint256(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ sload(/** @src 6:2253:2294  \"collateralBalances[msg.sender] -= _amount\" */ dataSlot_1), value_1))\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let value_2 := and(sload(1), sub(shl(160, 1), 1))\n                        /// @src 6:2305:2350  \"collateralToken.transfer(msg.sender, _amount)\"\n                        let _4 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 6:2305:2350  \"collateralToken.transfer(msg.sender, _amount)\"\n                        mstore(_4, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 6:2305:2350  \"collateralToken.transfer(msg.sender, _amount)\"\n                        let _5 := call(gas(), value_2, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 6:2305:2350  \"collateralToken.transfer(msg.sender, _amount)\" */ _4, sub(abi_encode_address_uint256(add(_4, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 6:1971:1981  \"msg.sender\" */ caller(), /** @src 6:2305:2350  \"collateralToken.transfer(msg.sender, _amount)\" */ value_1), _4), _4, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 6:2305:2350  \"collateralToken.transfer(msg.sender, _amount)\"\n                        if iszero(_5)\n                        {\n                            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 6:2305:2350  \"collateralToken.transfer(msg.sender, _amount)\"\n                        let expr := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 6:2305:2350  \"collateralToken.transfer(msg.sender, _amount)\"\n                        if _5\n                        {\n                            let _6 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 6:2305:2350  \"collateralToken.transfer(msg.sender, _amount)\"\n                            if gt(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:2305:2350  \"collateralToken.transfer(msg.sender, _amount)\" */ returndatasize()) { _6 := returndatasize() }\n                            finalize_allocation(_4, _6)\n                            expr := abi_decode_bool_fromMemory(_4, add(_4, _6))\n                        }\n                        /// @src 6:2366:2406  \"CollateralWithdrawn(msg.sender, _amount)\"\n                        let _7 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_7, value_1)\n                        /// @src 6:2366:2406  \"CollateralWithdrawn(msg.sender, _amount)\"\n                        log2(_7, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:2366:2406  \"CollateralWithdrawn(msg.sender, _amount)\" */ 0xc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d, /** @src 6:1971:1981  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let _8 := sload(0)\n                        sstore(0, and(_8, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ and(_8, sub(shl(160, 1), 1)), 0)\n                        return(0, 0)\n                    }\n                    case 0x73b4086b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        let _9 := and(value_3, sub(shl(160, 1), 1))\n                        if iszero(eq(value_3, _9)) { revert(0, 0) }\n                        mstore(0, _9)\n                        mstore(32, /** @src 6:490:527  \"mapping(address => Loan) public loans\" */ 5)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        let _10 := sload(/** @src 6:490:527  \"mapping(address => Loan) public loans\" */ dataSlot_2)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let _11 := sload(/** @src 6:490:527  \"mapping(address => Loan) public loans\" */ add(dataSlot_2, 1))\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let value_4 := and(sload(/** @src 6:490:527  \"mapping(address => Loan) public loans\" */ add(dataSlot_2, 2)), /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0xff)\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_uint256_uint256_bool(memPos, _10, _11, value_4), memPos))\n                    }\n                    case 0x8c803fc2 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        mstore(0, /** @src 6:2502:2512  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 6:2496:2501  \"loans\" */ 0x05)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_3 := keccak256(0, 64)\n                        let memPtr_4 := mload(64)\n                        finalize_allocation_8992(memPtr_4)\n                        mstore(memPtr_4, sload(dataSlot_3))\n                        mstore(add(memPtr_4, 32), sload(add(dataSlot_3, 1)))\n                        let _12 := iszero(iszero(and(sload(add(dataSlot_3, 2)), 0xff)))\n                        mstore(add(memPtr_4, 64), _12)\n                        if _12\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), 34)\n                            mstore(add(memPtr_5, 68), \"Existing loan must be repaid fir\")\n                            mstore(add(memPtr_5, 100), \"st\")\n                            revert(memPtr_5, 132)\n                        }\n                        if /** @src 6:2604:2615  \"_amount > 0\" */ iszero(value_5)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 32)\n                            mstore(add(memPtr_6, 36), 37)\n                            mstore(add(memPtr_6, 68), \"Loan amount must be greater than\")\n                            mstore(add(memPtr_6, 100), \" zero\")\n                            revert(memPtr_6, 132)\n                        }\n                        mstore(0, /** @src 6:2502:2512  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        let _13 := sload(keccak256(0, 64))\n                        let _14 := sload(/** @src 6:4017:4033  \"collateralFactor\" */ 0x03)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let product := mul(_13, _14)\n                        if iszero(or(iszero(_13), eq(_14, div(product, _13))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        if /** @src 6:2743:2767  \"maxBorrowable >= _amount\" */ lt(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ div(product, /** @src 6:4037:4040  \"100\" */ 0x64), /** @src 6:2743:2767  \"maxBorrowable >= _amount\" */ value_5)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 32)\n                            mstore(add(memPtr_7, 36), 32)\n                            mstore(add(memPtr_7, 68), \"Insufficient collateral for loan\")\n                            revert(memPtr_7, /** @src 6:4037:4040  \"100\" */ 0x64)\n                        }\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 6:2502:2512  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        let _15 := sload(keccak256(0, 64))\n                        mstore(0, /** @src 6:2502:2512  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, /** @src 6:2886:2937  \"collateralBalances[msg.sender] -= currentCollateral\" */ checked_sub_uint256(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ sload(/** @src 6:2886:2937  \"collateralBalances[msg.sender] -= currentCollateral\" */ dataSlot_4), _15))\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let memPtr_8 := mload(64)\n                        finalize_allocation_8992(memPtr_8)\n                        mstore(memPtr_8, value_5)\n                        /// @src 6:2970:3090  \"Loan({...\"\n                        let _16 := add(memPtr_8, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        mstore(_16, _15)\n                        /// @src 6:2970:3090  \"Loan({...\"\n                        let _17 := add(memPtr_8, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 64)\n                        mstore(_17, 1)\n                        mstore(0, /** @src 6:2502:2512  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 6:2496:2501  \"loans\" */ 0x05)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        sstore(dataSlot_5, mload(memPtr_8))\n                        sstore(add(dataSlot_5, 1), mload(_16))\n                        let memberSlot := add(dataSlot_5, 2)\n                        let cleaned := iszero(iszero(mload(_17)))\n                        let value_6 := and(sload(memberSlot), not(255))\n                        sstore(memberSlot, or(value_6, and(cleaned, 0xff)))\n                        let value_7 := and(sload(2), sub(shl(160, 1), 1))\n                        /// @src 6:3103:3145  \"lendingToken.transfer(msg.sender, _amount)\"\n                        let _18 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 6:3103:3145  \"lendingToken.transfer(msg.sender, _amount)\"\n                        mstore(_18, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 6:3103:3145  \"lendingToken.transfer(msg.sender, _amount)\"\n                        let _19 := call(gas(), value_7, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 6:3103:3145  \"lendingToken.transfer(msg.sender, _amount)\" */ _18, sub(abi_encode_address_uint256(add(_18, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 6:2502:2512  \"msg.sender\" */ caller(), /** @src 6:3103:3145  \"lendingToken.transfer(msg.sender, _amount)\" */ value_5), _18), _18, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 6:3103:3145  \"lendingToken.transfer(msg.sender, _amount)\"\n                        if iszero(_19)\n                        {\n                            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 6:3103:3145  \"lendingToken.transfer(msg.sender, _amount)\"\n                        let expr_1 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 6:3103:3145  \"lendingToken.transfer(msg.sender, _amount)\"\n                        if _19\n                        {\n                            let _20 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 6:3103:3145  \"lendingToken.transfer(msg.sender, _amount)\"\n                            if gt(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:3103:3145  \"lendingToken.transfer(msg.sender, _amount)\" */ returndatasize()) { _20 := returndatasize() }\n                            finalize_allocation(_18, _20)\n                            expr_1 := abi_decode_bool_fromMemory(_18, add(_18, _20))\n                        }\n                        /// @src 6:3161:3191  \"LoanTaken(msg.sender, _amount)\"\n                        let _21 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_21, value_5)\n                        /// @src 6:3161:3191  \"LoanTaken(msg.sender, _amount)\"\n                        log2(_21, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:3161:3191  \"LoanTaken(msg.sender, _amount)\" */ 0xd5c776eab9418d89c040ffee59f2310d225f5ff682191bcee59b0413a7fd4835, /** @src 6:2502:2512  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_8 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, value_8)\n                        return(memPos_1, 32)\n                    }\n                    case 0xaaaca558 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_9 := and(sload(/** @src 6:359:385  \"IERC20 public lendingToken\" */ 2), /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, value_9)\n                        return(memPos_2, 32)\n                    }\n                    case 0xab7b1c89 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_10 := calldataload(4)\n                        if /** @src 6:3271:3282  \"_amount > 0\" */ iszero(value_10)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 42)\n                            mstore(add(memPtr_9, 68), \"Repayment amount must be greater\")\n                            mstore(add(memPtr_9, 100), \" than zero\")\n                            revert(memPtr_9, 132)\n                        }\n                        mstore(0, /** @src 6:3366:3376  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 6:3360:3365  \"loans\" */ 0x05)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        /// @src 6:3396:3409  \"loan.isActive\"\n                        let _22 := add(dataSlot_6, 2)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let _23 := sload(/** @src 6:3396:3409  \"loan.isActive\" */ _22)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        if iszero(and(_23, 0xff))\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, 36), 29)\n                            mstore(add(memPtr_10, 68), \"No active loan found for user\")\n                            revert(memPtr_10, 100)\n                        }\n                        let _24 := sload(/** @src 6:3473:3484  \"loan.amount\" */ dataSlot_6)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        if /** @src 6:3462:3484  \"_amount <= loan.amount\" */ gt(value_10, _24)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_11 := mload(64)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 32)\n                            mstore(add(memPtr_11, 36), 36)\n                            mstore(add(memPtr_11, 68), \"Repayment amount exceeds loan am\")\n                            mstore(add(memPtr_11, 100), \"ount\")\n                            revert(memPtr_11, 132)\n                        }\n                        /// @src 6:3538:3560  \"loan.amount -= _amount\"\n                        let _25 := checked_sub_uint256(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ _24, /** @src 6:3538:3560  \"loan.amount -= _amount\" */ value_10)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        sstore(dataSlot_6, _25)\n                        /// @src 6:3573:3741  \"if (loan.amount == 0) {...\"\n                        if /** @src 6:3577:3593  \"loan.amount == 0\" */ iszero(_25)\n                        /// @src 6:3573:3741  \"if (loan.amount == 0) {...\"\n                        {\n                            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                            sstore(_22, and(_23, not(255)))\n                            /// @src 6:3680:3695  \"loan.collateral\"\n                            let _26 := add(dataSlot_6, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 1)\n                            let _27 := sload(/** @src 6:3680:3695  \"loan.collateral\" */ _26)\n                            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                            mstore(0, /** @src 6:3366:3376  \"msg.sender\" */ caller())\n                            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                            mstore(32, 4)\n                            let dataSlot_7 := keccak256(0, 64)\n                            sstore(dataSlot_7, /** @src 6:3646:3695  \"collateralBalances[msg.sender] += loan.collateral\" */ checked_add_uint256(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ sload(/** @src 6:3646:3695  \"collateralBalances[msg.sender] += loan.collateral\" */ dataSlot_7), _27))\n                            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                            sstore(_26, 0)\n                        }\n                        let value_11 := and(sload(/** @src 6:3396:3409  \"loan.isActive\" */ 2), /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 6:3753:3814  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let _28 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 6:3753:3814  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        mstore(_28, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x23b872dd))\n                        /// @src 6:3753:3814  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let _29 := call(gas(), value_11, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 6:3753:3814  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\" */ _28, sub(abi_encode_address_address_uint256(add(_28, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 6:3366:3376  \"msg.sender\" */ caller(), /** @src 6:3799:3803  \"this\" */ address(), /** @src 6:3753:3814  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\" */ value_10), _28), _28, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 6:3753:3814  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        if iszero(_29)\n                        {\n                            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 6:3753:3814  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let expr_2 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 6:3753:3814  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                        if _29\n                        {\n                            let _30 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 6:3753:3814  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\"\n                            if gt(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:3753:3814  \"lendingToken.transferFrom(msg.sender, address(this), _amount)\" */ returndatasize()) { _30 := returndatasize() }\n                            finalize_allocation(_28, _30)\n                            expr_2 := abi_decode_bool_fromMemory(_28, add(_28, _30))\n                        }\n                        /// @src 6:3830:3861  \"LoanRepaid(msg.sender, _amount)\"\n                        let _31 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_31, value_10)\n                        /// @src 6:3830:3861  \"LoanRepaid(msg.sender, _amount)\"\n                        log2(_31, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:3830:3861  \"LoanRepaid(msg.sender, _amount)\" */ 0xc200a1f31dd659e356e0f112c82558e25f49f7b0f84438691cd96f5cb3558823, /** @src 6:3366:3376  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xb2016bd4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_12 := and(sload(/** @src 6:323:352  \"IERC20 public collateralToken\" */ 1), /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, value_12)\n                        return(memPos_3, 32)\n                    }\n                    case 0xb5c22157 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_13 := calldataload(4)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        if /** @src 6:1228:1242  \"_newFactor > 0\" */ iszero(value_13)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_12 := mload(64)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, 4), 32)\n                            mstore(add(memPtr_12, 36), 43)\n                            mstore(add(memPtr_12, 68), \"Collateral factor must be greate\")\n                            mstore(add(memPtr_12, 100), \"r than zero\")\n                            revert(memPtr_12, 132)\n                        }\n                        if /** @src 6:1309:1326  \"_newFactor <= 100\" */ gt(value_13, /** @src 6:1323:1326  \"100\" */ 0x64)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_13 := mload(64)\n                            mstore(memPtr_13, shl(229, 4594637))\n                            mstore(add(memPtr_13, 4), 32)\n                            mstore(add(memPtr_13, 36), 38)\n                            mstore(add(memPtr_13, 68), \"Collateral factor must not excee\")\n                            mstore(add(memPtr_13, /** @src 6:1323:1326  \"100\" */ 0x64), /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ \"d 100%\")\n                            revert(memPtr_13, 132)\n                        }\n                        sstore(/** @src 6:1380:1409  \"collateralFactor = _newFactor\" */ 0x03, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ value_13)\n                        /// @src 6:1425:1460  \"CollateralFactorUpdated(_newFactor)\"\n                        let _32 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_32, value_13)\n                        /// @src 6:1425:1460  \"CollateralFactorUpdated(_newFactor)\"\n                        log1(_32, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:1425:1460  \"CollateralFactorUpdated(_newFactor)\" */ 0x418ce44910b0288ea600897f5ddfb466bd41767ce3cc61fc8429a9c17ff8810c)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xbad4a01f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_14 := calldataload(4)\n                        if /** @src 6:1548:1559  \"_amount > 0\" */ iszero(value_14)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_14 := mload(64)\n                            mstore(memPtr_14, shl(229, 4594637))\n                            mstore(add(memPtr_14, 4), 32)\n                            mstore(add(memPtr_14, 36), 40)\n                            mstore(add(memPtr_14, 68), \"Deposit amount must be greater t\")\n                            mstore(add(memPtr_14, 100), \"han zero\")\n                            revert(memPtr_14, 132)\n                        }\n                        mstore(0, /** @src 6:1634:1644  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        let dataSlot_8 := keccak256(0, 64)\n                        sstore(dataSlot_8, /** @src 6:1615:1656  \"collateralBalances[msg.sender] += _amount\" */ checked_add_uint256(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ sload(/** @src 6:1615:1656  \"collateralBalances[msg.sender] += _amount\" */ dataSlot_8), value_14))\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let value_15 := and(sload(1), sub(shl(160, 1), 1))\n                        /// @src 6:1667:1731  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let _33 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 6:1667:1731  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        mstore(_33, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x23b872dd))\n                        /// @src 6:1667:1731  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let _34 := call(gas(), value_15, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 6:1667:1731  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\" */ _33, sub(abi_encode_address_address_uint256(add(_33, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 6:1634:1644  \"msg.sender\" */ caller(), /** @src 6:1716:1720  \"this\" */ address(), /** @src 6:1667:1731  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\" */ value_14), _33), _33, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 6:1667:1731  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        if iszero(_34)\n                        {\n                            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, 0, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 6:1667:1731  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        let expr_3 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 6:1667:1731  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                        if _34\n                        {\n                            let _35 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 6:1667:1731  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\"\n                            if gt(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:1667:1731  \"collateralToken.transferFrom(msg.sender, address(this), _amount)\" */ returndatasize()) { _35 := returndatasize() }\n                            finalize_allocation(_33, _35)\n                            expr_3 := abi_decode_bool_fromMemory(_33, add(_33, _35))\n                        }\n                        /// @src 6:1747:1787  \"CollateralDeposited(msg.sender, _amount)\"\n                        let _36 := /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_36, value_14)\n                        /// @src 6:1747:1787  \"CollateralDeposited(msg.sender, _amount)\"\n                        log2(_36, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:1747:1787  \"CollateralDeposited(msg.sender, _amount)\" */ 0xd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142, /** @src 6:1634:1644  \"msg.sender\" */ caller())\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xdf011c41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _37 := sload(/** @src 6:392:423  \"uint256 public collateralFactor\" */ 3)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _37)\n                        return(memPos_4, 32)\n                    }\n                    case 0xe8a7da8e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_16 := calldataload(4)\n                        let _38 := and(value_16, sub(shl(160, 1), 1))\n                        if iszero(eq(value_16, _38)) { revert(0, 0) }\n                        mstore(0, _38)\n                        mstore(32, /** @src 6:4247:4252  \"loans\" */ 0x05)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_9 := keccak256(0, 64)\n                        let memPtr_15 := mload(64)\n                        finalize_allocation_8992(memPtr_15)\n                        let _39 := sload(dataSlot_9)\n                        mstore(memPtr_15, _39)\n                        let _40 := sload(add(dataSlot_9, 1))\n                        mstore(add(memPtr_15, 32), _40)\n                        let _41 := iszero(iszero(and(sload(add(dataSlot_9, 2)), 0xff)))\n                        mstore(add(memPtr_15, 64), _41)\n                        let memPos_5 := mload(64)\n                        return(memPos_5, sub(abi_encode_uint256_uint256_bool(memPos_5, _39, _40, _41), memPos_5))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_17 := calldataload(4)\n                        let _42 := and(value_17, sub(shl(160, 1), 1))\n                        if iszero(eq(value_17, _42)) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ _42)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                            /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                            mstore(4, 0)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0, 36)\n                        }\n                        let _43 := sload(0)\n                        sstore(0, or(and(_43, shl(160, 0xffffffffffffffffffffffff)), _42))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ and(_43, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _42)\n                        /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_uint256_uint256_bool(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), iszero(iszero(value2)))\n            }\n            function finalize_allocation_8992(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                value0 := value\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                let value := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x00), /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ value, /** @src 5:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                    /// @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 5:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 6:173:4333  \"contract LendingBorrowing is Ownable {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201f9cb5d066ebd8fd62b32d3c5000e5e9c5ac66f20ade579c578e96ebec2a414864736f6c634300081a0033\"\n    }\n}\n",
          "hash": "ff82eefd256b9ff06ada91f908d47447c7c941338e0c5bd5717032aa19bcb42f",
          "factoryDependencies": {}
        }
      },
      "contracts/MyToken.sol": {
        "MockERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "initialSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MockERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0xedb37b81e24b32ca4ecda9f652eb5813aa5e29d3112f521a57fde2a4ad42dc4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71ec48e97ff07f9a4858dfa11f71e8e045ff187c852895d1877ef9416eae22e7\",\"dweb:/ipfs/QmPHNoGLHfP6GsbFuZTAjyFq2QJrQgL1wdjvvMTeBSUqrr\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 256/65840 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 6958\n// Code size = 24236 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20108]\n   117: jump @247 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x30130\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @247\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @26\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @26\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 48)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 5 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: sp = s0 + 0xffffffffffffffa0\n   804: ra = u64 [sp + 0x58]\n   807: s0 = u64 [sp + 0x50]\n   810: s1 = u64 [sp + 0x48]\n   813: sp = sp + 0x60\n   816: ret\n      : @22 (gas: 40)\n   818: sp = sp + 0xffffffffffffffa0\n   821: u64 [sp + 0x58] = ra\n   824: u64 [sp + 0x50] = s0\n   827: s0 = sp + 0x60\n   830: sp = sp & 0xffffffffffffffe0\n   833: t0 = u64 [a0]\n   835: a3 = u64 [a0 + 0x8]\n   838: a4 = u64 [a0 + 0x10]\n   841: a0 = u64 [a0 + 0x18]\n   844: t1 = u64 [a1]\n   846: a2 = u64 [a1 + 0x8]\n   849: a5 = u64 [a1 + 0x10]\n   852: a1 = u64 [a1 + 0x18]\n   855: t2 = reverse a0\n   857: a4 = reverse a4\n   859: a3 = reverse a3\n   861: a0 = reverse t0\n   863: t0 = reverse a1\n   865: a5 = reverse a5\n   867: a2 = reverse a2\n   869: a1 = reverse t1\n   871: u64 [sp + 0x18] = a0\n   874: u64 [sp + 0x10] = a3\n   877: u64 [sp + 0x8] = a4\n   880: u64 [sp] = t2\n   882: u64 [sp + 0x38] = a1\n   885: u64 [sp + 0x30] = a2\n   888: u64 [sp + 0x28] = a5\n   891: u64 [sp + 0x20] = t0\n   894: i32 a1 = sp + 0\n   896: i32 a3 = sp + 0x20\n   899: a2 = 0xffffffffffffffff\n   902: a4 = 0x20\n   905: a0 = 0\n   907: ecalli 9 // 'set_storage'\n   909: sp = s0 + 0xffffffffffffffa0\n   912: ra = u64 [sp + 0x58]\n   915: s0 = u64 [sp + 0x50]\n   918: sp = sp + 0x60\n   921: ret\n      : @23 (gas: 33)\n   923: sp = sp + 0xffffffffffffff20\n   927: u64 [sp + 0xd8] = ra\n   931: u64 [sp + 0xd0] = s0\n   935: u64 [sp + 0xc8] = s1\n   939: s0 = sp + 0xe0\n   943: sp = sp & 0xffffffffffffffe0\n   946: a5 = u64 [a4]\n   948: u64 [sp + 0x40] = a5\n   951: a5 = u64 [a4 + 0x8]\n   954: u64 [sp + 0x48] = a5\n   957: a5 = u64 [a4 + 0x10]\n   960: u64 [sp + 0x50] = a5\n   963: a4 = u64 [a4 + 0x18]\n   966: u64 [sp + 0x58] = a4\n   969: t0 = 0x6\n   972: a4 = u64 [a3]\n   974: u64 [sp + 0x18] = a4\n   977: a4 = u64 [a3 + 0x8]\n   980: u64 [sp + 0x20] = a4\n   983: a4 = u64 [a3 + 0x10]\n   986: u64 [sp + 0x28] = a4\n   989: a3 = u64 [a3 + 0x18]\n   992: u64 [sp + 0x30] = a3\n   995: s1 = u64 [a2]\n   997: a3 = u64 [a2 + 0x8]\n  1000: u64 [sp] = a3\n  1002: a3 = u64 [a2 + 0x10]\n  1005: u64 [sp + 0x8] = a3\n  1008: a2 = u64 [a2 + 0x18]\n  1011: u64 [sp + 0x10] = a2\n  1014: u64 [sp + 0x38] = a1\n  1017: ra = 0x8\n  1020: jump @26\n      : @24 [@dyn 3] (gas: 2)\n  1023: u64 [sp + 0x38] = a1\n  1026: ra = 8, jump @26\n      : @25 [@dyn 4] (gas: 46)\n  1031: a1 = reverse s1\n  1033: u64 [sp + 0x78] = a1\n  1036: a1 = u64 [sp]\n  1038: a1 = reverse a1\n  1040: u64 [sp + 0x70] = a1\n  1043: a1 = u64 [sp + 0x8]\n  1046: a1 = reverse a1\n  1048: u64 [sp + 0x68] = a1\n  1051: a1 = u64 [sp + 0x10]\n  1054: a1 = reverse a1\n  1056: u64 [sp + 0x60] = a1\n  1059: a1 = u64 [sp + 0x18]\n  1062: a1 = reverse a1\n  1064: u64 [sp + 0x98] = a1\n  1068: a1 = u64 [sp + 0x20]\n  1071: a1 = reverse a1\n  1073: u64 [sp + 0x90] = a1\n  1077: a1 = u64 [sp + 0x28]\n  1080: a1 = reverse a1\n  1082: u64 [sp + 0x88] = a1\n  1086: a1 = u64 [sp + 0x30]\n  1089: a1 = reverse a1\n  1091: u64 [sp + 0x80] = a1\n  1095: a1 = u64 [sp + 0x40]\n  1098: a1 = reverse a1\n  1100: u64 [sp + 0xb8] = a1\n  1104: a1 = u64 [sp + 0x48]\n  1107: a1 = reverse a1\n  1109: u64 [sp + 0xb0] = a1\n  1113: a1 = u64 [sp + 0x50]\n  1116: a1 = reverse a1\n  1118: u64 [sp + 0xa8] = a1\n  1122: a1 = u64 [sp + 0x58]\n  1125: a1 = reverse a1\n  1127: u64 [sp + 0xa0] = a1\n  1131: i32 a2 = a0 + 0\n  1133: a3 = i32 [sp + 0x38]\n  1136: i32 a0 = sp + 0x60\n  1139: a1 = 0x3\n  1142: ecalli 4 // 'deposit_event'\n  1144: sp = s0 + 0xffffffffffffff20\n  1148: ra = u64 [sp + 0xd8]\n  1152: s0 = u64 [sp + 0xd0]\n  1156: s1 = u64 [sp + 0xc8]\n  1160: sp = sp + 0xe0\n  1164: ret\n      : @26 (gas: 2)\n  1166: i32 a2 = a0 >> 0x10\n  1169: jump @31 if a2 != 0\n      : @27 (gas: 4)\n  1172: a1 = a1 + a0\n  1175: i32 a1 = a1 + 0x1f\n  1178: a1 = a1 & 0xffffffffffffffe0\n  1181: jump @31 if a1 >u 65536\n      : @28 (gas: 3)\n  1187: a2 = 0x20104\n  1192: a3 = i32 [0x20104]\n  1197: jump @30 if a3 >=u a1\n      : @29 (gas: 2)\n  1200: u32 [0x20104] = a1\n  1205: fallthrough\n      : @30 (gas: 4)\n  1206: a1 = 0x20110\n  1211: i32 a0 = a0 + 0\n  1213: a0 = a0 + a1\n  1216: ret\n      : @31 (gas: 1)\n  1218: trap\n      : @32 (gas: 6)\n  1219: sp = sp + 0xfffffffffffffff0\n  1222: u64 [sp + 0x8] = ra\n  1225: u64 [sp] = s0\n  1227: s0 = a0 & 0x1\n  1230: ecalli 2 // 'call_data_size'\n  1232: fallthrough\n      : @33 (gas: 3)\n  1233: a1 = 0x20100\n  1238: u32 [0x20100] = a0\n  1243: jump @35 if s0 == 0\n      : @34 (gas: 3)\n  1246: ra = 0xa\n  1249: t0 = 0xe\n  1252: jump @786\n      : @35 [@dyn 5] (gas: 3)\n  1255: ra = 0xc\n  1258: t0 = 0xf4\n  1262: jump @786\n      : @36 [@dyn 6] (gas: 1)\n  1265: t0 = 14, jump @786\n      : @37 [@dyn 7] (gas: 10)\n  1270: sp = sp + 0xfffffffffffffd38\n  1274: sp = sp & 0xffffffffffffffe0\n  1277: s1 = sp\n  1279: u64 [s1 + 1976] = 0\n  1283: u64 [s1 + 1968] = 0\n  1287: u64 [s1 + 1952] = 0x80\n  1293: a0 = 0x40\n  1296: a1 = s1 + 0x7a0\n  1300: u64 [s1 + 1960] = 0\n  1304: ra = 16, jump @19\n      : @38 [@dyn 8] (gas: 7)\n  1309: u64 [s1 + 2008] = 0\n  1313: u64 [s1 + 2000] = 0\n  1317: u64 [s1 + 1992] = 0\n  1321: u64 [s1 + 1984] = 0\n  1325: i32 a0 = s1 + 0x7c0\n  1329: ecalli 10 // 'value_transferred'\n  1331: fallthrough\n      : @39 (gas: 9)\n  1332: a4 = s1 + 0x700\n  1336: a0 = u64 [a4 + 0xd0]\n  1340: a1 = u64 [a4 + 0xd8]\n  1344: a2 = u64 [a4 + 0xc8]\n  1348: a3 = u64 [a4 + 0xc0]\n  1352: a1 = a1 | a2\n  1355: a0 = a0 | a3\n  1358: a0 = a0 | a1\n  1361: jump @41 if a0 == 0\n      : @40 (gas: 1)\n  1364: jump @204\n      : @41 (gas: 9)\n  1367: a2 = u32 [0x20100]\n  1372: u64 [s1 + 1912] = 0\n  1376: u64 [s1 + 1904] = 0\n  1380: u64 [s1 + 1896] = 0\n  1384: a0 = s1 + 0x780\n  1388: a1 = s1 + 0x760\n  1392: u64 [s1 + 0x130] = a2\n  1396: u64 [s1 + 0x760] = a2\n  1400: ra = 18, jump @638\n      : @42 [@dyn 9] (gas: 15)\n  1405: a4 = s1 + 0x700\n  1409: a2 = u64 [a4 + 0x98]\n  1413: a3 = u64 [a4 + 0x90]\n  1417: a0 = u64 [a4 + 0x88]\n  1421: a1 = u64 [a4 + 0x80]\n  1425: u64 [s1 + 0x128] = a0\n  1429: a0 = a0 | a2\n  1432: u64 [s1 + 0x138] = a1\n  1436: a1 = a1 | a3\n  1439: a1 = a1 | a0\n  1442: a1 = a1 >> 0x20\n  1445: a0 = a0 | a3\n  1448: a0 = a0 << 0x20\n  1451: a0 = a0 | a1\n  1454: jump @44 if a0 == 0\n      : @43 (gas: 1)\n  1457: jump @203\n      : @44 (gas: 5)\n  1460: u64 [s1 + 0x118] = a3\n  1464: u64 [s1 + 0x120] = a2\n  1468: a0 = u64 [s1 + 0x138]\n  1472: a1 = u64 [s1 + 0x130]\n  1476: ra = 20, jump @26\n      : @45 [@dyn 10] (gas: 5)\n  1481: i32 a0 = a0 + 0\n  1483: a1 = i32 [s1 + 0x130]\n  1487: a2 = 0\n  1489: ecalli 0 // 'call_data_copy'\n  1490: fallthrough\n      : @46 (gas: 2)\n  1491: a1 = u64 [s1 + 0x130]\n  1495: jump @48 if a1 >u 95\n      : @47 (gas: 1)\n  1499: jump @205\n      : @48 (gas: 3)\n  1502: a0 = s1 + 0x740\n  1506: a1 = u64 [s1 + 0x138]\n  1510: ra = 22, jump @17\n      : @49 [@dyn 11] (gas: 11)\n  1515: a3 = s1 + 0x100\n  1519: a0 = u64 [a3 + 0x20]\n  1522: a1 = u64 [a3 + 0x18]\n  1525: a2 = a1 | a0\n  1528: a0 = 0xffffffe0\n  1538: a1 = u64 [a3 + 0x38]\n  1541: a0 = a1 <u a0\n  1544: a1 = u64 [a3 + 0x28]\n  1547: a0 = 0 if a1 != 0\n  1549: a0 = 0 if a2 != 0\n  1551: jump @51 if a0 != 0\n      : @50 (gas: 1)\n  1554: jump @203\n      : @51 (gas: 13)\n  1557: u64 [s1 + 0x110] = a2\n  1561: a0 = u64 [s1 + 0x758]\n  1565: u64 [s1 + 0x88] = a0\n  1569: a0 = u64 [s1 + 0x750]\n  1573: u64 [s1 + 0x80] = a0\n  1577: a0 = u64 [s1 + 0x748]\n  1581: u64 [s1 + 0x78] = a0\n  1584: a0 = u64 [s1 + 0x740]\n  1588: u64 [s1 + 0x70] = a0\n  1591: a0 = u64 [s1 + 0x138]\n  1595: i32 a1 = a0 + 0x20\n  1598: a0 = s1 + 0x720\n  1602: ra = 24, jump @17\n      : @52 [@dyn 12] (gas: 7)\n  1607: t0 = u64 [s1 + 0x738]\n  1611: t2 = u64 [s1 + 0x730]\n  1615: a4 = u64 [s1 + 0x728]\n  1619: a2 = t2 | t0\n  1622: a3 = a4 <u 0x1\n  1625: a3 = 0 if a2 != 0\n  1627: jump @54 if a3 != 0\n      : @53 (gas: 1)\n  1630: jump @206\n      : @54 (gas: 48)\n  1633: a3 = u64 [s1 + 0x720]\n  1637: a2 = u64 [s1 + 0x138]\n  1641: a0 = u64 [s1 + 0x130]\n  1645: ra = a2 + a0\n  1648: a1 = ra <u a2\n  1651: a2 = a2 + a3\n  1654: u64 [s1 + 0x130] = a2\n  1658: a3 = a2 <u a3\n  1661: a5 = u64 [s1 + 0x128]\n  1665: a0 = a4 + a5\n  1668: t1 = a0 + a3\n  1671: a2 = t1 ^ a4\n  1674: a4 = t1 <u a4\n  1677: a4 = a3 if a2 == 0\n  1680: a0 = a5\n  1682: a5 = a5 + a1\n  1685: a2 = a5 <u a0\n  1688: a2 = a1 if a1 == 0\n  1691: a1 = u64 [s1 + 0x118]\n  1695: a3 = t2 + a1\n  1698: t2 = a3 <u t2\n  1701: a0 = u64 [s1 + 0x120]\n  1705: t0 = t0 + a0\n  1708: t0 = t0 + t2\n  1711: t2 = a1 + a2\n  1714: a4 = a4 + a3\n  1717: a2 = a4 <u a3\n  1720: a3 = t0 + a2\n  1723: a1 = t2 <u a1\n  1726: a0 = a0 + a1\n  1729: u64 [s1 + 0x108] = ra\n  1733: u64 [s1 + 0x6c0] = ra\n  1737: u64 [s1 + 0x100] = a5\n  1741: u64 [s1 + 0x6c8] = a5\n  1745: a1 = u64 [s1 + 0x130]\n  1749: a5 = s1 + 0x600\n  1753: u64 [a5 + 0xe0] = a1\n  1757: u64 [s1 + 0x130] = t2\n  1761: u64 [s1 + 0x6d0] = t2\n  1765: u64 [s1 + 0xf8] = a0\n  1769: u64 [a5 + 0xd8] = a0\n  1773: u64 [s1 + 0x6e8] = t1\n  1777: u64 [a5 + 0xf0] = a4\n  1781: a0 = s1 + 0x700\n  1785: a1 = s1 + 0x6e0\n  1789: a2 = s1 + 0x6c0\n  1793: u64 [a5 + 0xf8] = a3\n  1797: ra = 26, jump @649\n      : @55 [@dyn 13] (gas: 9)\n  1802: a0 = 0xffffffc0\n  1812: a2 = s1 + 0x100\n  1816: a1 = u64 [a2 + 0x38]\n  1819: a0 = a1 <u a0\n  1822: a1 = u64 [a2 + 0x28]\n  1825: a0 = 0 if a1 != 0\n  1827: a1 = u64 [a2 + 0x10]\n  1830: a0 = 0 if a1 != 0\n  1832: jump @57 if a0 != 0\n      : @56 (gas: 1)\n  1835: jump @203\n      : @57 (gas: 13)\n  1838: a1 = s1 + 0x700\n  1842: a0 = u64 [a1 + 0x18]\n  1845: u64 [s1 + 0xc0] = a0\n  1849: a0 = u64 [a1 + 0x10]\n  1852: u64 [s1 + 0xb8] = a0\n  1856: a0 = u64 [a1 + 0x8]\n  1859: u64 [s1 + 0xc8] = a0\n  1863: a0 = u64 [a1]\n  1865: u64 [s1 + 0xd0] = a0\n  1869: a0 = u64 [s1 + 0x138]\n  1873: i32 a1 = a0 + 0x40\n  1876: a0 = s1 + 0x6a0\n  1880: ra = 28, jump @17\n      : @58 [@dyn 14] (gas: 7)\n  1885: t0 = u64 [s1 + 0x6b8]\n  1889: a1 = u64 [s1 + 0x6b0]\n  1893: a2 = u64 [s1 + 0x6a8]\n  1897: a3 = a1 | t0\n  1900: a4 = a2 <u 0x1\n  1903: a4 = 0 if a3 != 0\n  1905: jump @60 if a4 != 0\n      : @59 (gas: 1)\n  1908: jump @207\n      : @60 (gas: 37)\n  1911: a3 = u64 [s1 + 0x6a0]\n  1915: a4 = u64 [s1 + 0x138]\n  1919: a4 = a4 + a3\n  1922: a3 = a4 <u a3\n  1925: a5 = u64 [s1 + 0x128]\n  1929: a5 = a5 + a2\n  1932: a5 = a5 + a3\n  1935: a0 = a5 ^ a2\n  1938: a2 = a5 <u a2\n  1941: a2 = a3 if a0 == 0\n  1944: a0 = u64 [s1 + 0x118]\n  1948: a0 = a0 + a1\n  1951: a2 = a2 + a0\n  1954: a3 = a2 <u a0\n  1957: a0 = a0 <u a1\n  1960: a1 = u64 [s1 + 0x120]\n  1964: t0 = t0 + a1\n  1967: a0 = a0 + t0\n  1970: a3 = a3 + a0\n  1973: a1 = s1 + 0x100\n  1977: a0 = u64 [a1 + 0x8]\n  1980: u64 [s1 + 0x640] = a0\n  1984: a0 = u64 [a1]\n  1986: u64 [s1 + 0x648] = a0\n  1990: u64 [s1 + 0x660] = a4\n  1994: a0 = u64 [a1 + 0x30]\n  1997: a4 = s1 + 0x600\n  2001: u64 [a4 + 0x50] = a0\n  2004: a0 = u64 [s1 + 0xf8]\n  2008: u64 [a4 + 0x58] = a0\n  2011: u64 [a4 + 0x68] = a5\n  2014: u64 [a4 + 0x70] = a2\n  2017: a0 = s1 + 0x680\n  2021: a1 = s1 + 0x660\n  2025: a2 = s1 + 0x640\n  2029: u64 [a4 + 0x78] = a3\n  2032: ra = 30, jump @649\n      : @61 [@dyn 15] (gas: 12)\n  2037: a2 = u64 [s1 + 0xb8]\n  2041: a4 = u64 [s1 + 0xd0]\n  2045: a0 = a4 | a2\n  2048: a1 = u64 [s1 + 0xc0]\n  2052: a3 = u64 [s1 + 0xc8]\n  2056: a1 = a1 | a3\n  2059: a0 = a0 | a1\n  2062: a0 = a0 >> 0x20\n  2065: a1 = a1 | a2\n  2068: a1 = a1 << 0x20\n  2071: a0 = a0 | a1\n  2074: jump @63 if a0 == 0\n      : @62 (gas: 1)\n  2077: jump @203\n      : @63 (gas: 11)\n  2080: a1 = a4\n  2082: a0 = u64 [s1 + 0x698]\n  2086: u64 [s1 + 0x98] = a0\n  2090: a0 = u64 [s1 + 0x690]\n  2094: u64 [s1 + 0x90] = a0\n  2098: a0 = u64 [s1 + 0x688]\n  2102: u64 [s1 + 0xa0] = a0\n  2106: a0 = u64 [s1 + 0x680]\n  2110: u64 [s1 + 0xa8] = a0\n  2114: a0 = s1 + 0x620\n  2118: ra = 32, jump @17\n      : @64 [@dyn 16] (gas: 17)\n  2123: a0 = s1 + 0x600\n  2127: a3 = u64 [a0 + 0x38]\n  2130: a1 = u64 [a0 + 0x30]\n  2133: a2 = u64 [a0 + 0x28]\n  2136: a0 = a3 >u 0\n  2138: a4 = a1 >u 0\n  2140: a4 = a0 if a3 != 0\n  2143: u64 [s1 + 0xf0] = a2\n  2147: a0 = a2 >u 0\n  2149: u64 [s1 + 0x60] = a1\n  2152: u64 [s1 + 0xe8] = a3\n  2156: a1 = a1 | a3\n  2159: u64 [s1 + 0x58] = a0\n  2162: u64 [s1 + 0xb0] = a4\n  2166: u64 [s1 + 0xe0] = a1\n  2170: a0 = a4 if a1 != 0\n  2173: jump @66 if a0 == 0\n      : @65 (gas: 1)\n  2176: jump @208\n      : @66 (gas: 9)\n  2179: a0 = u64 [s1 + 0x620]\n  2183: u64 [s1 + 0x68] = a0\n  2186: u64 [s1 + 2040] = 0\n  2190: u64 [s1 + 2032] = 0\n  2194: u64 [s1 + 2024] = 0\n  2198: u64 [s1 + 2016] = 0x3\n  2203: a0 = s1 + 0x600\n  2207: a1 = s1 + 0x7e0\n  2211: ra = 34, jump @21\n      : @67 [@dyn 17] (gas: 6)\n  2216: a4 = s1 + 0x600\n  2220: a0 = u64 [a4 + 0x10]\n  2223: a1 = u64 [a4 + 0x8]\n  2226: a2 = u64 [a4]\n  2228: a3 = u64 [a4 + 0x18]\n  2231: t0 = 36, jump @771\n      : @68 [@dyn 18] (gas: 12)\n  2236: t0 = a2 <u 0x1\n  2239: ra = a1 & 0x7f\n  2242: t2 = a5 & a0\n  2245: a4 = a5 & t1\n  2248: ra = a1 if a2 != 0\n  2251: a1 = ra <u 0x20\n  2254: a5 = a5 & a3\n  2257: a2 = a1\n  2259: a2 = 0 if a4 != 0\n  2261: a0 = t2 | a5\n  2264: a2 = 0 if a0 != 0\n  2266: jump @70 if t0 == a2\n      : @69 (gas: 1)\n  2269: jump @214\n      : @70 (gas: 1)\n  2272: t0 = 38, jump @775\n      : @71 [@dyn 19] (gas: 4)\n  2277: a0 = u64 [s1 + 0x68]\n  2280: a0 = a0 <u 0x20\n  2283: u64 [s1 + 0xd8] = a0\n  2287: jump @80 if a3 == 0\n      : @72 (gas: 11)\n  2291: u64 [s1 + 0x110] = a4\n  2295: u64 [s1 + 0x118] = ra\n  2299: u64 [s1 + 0x120] = a5\n  2303: u64 [s1 + 0x130] = t2\n  2307: u64 [s1 + 1528] = 0\n  2311: u64 [s1 + 1520] = 0\n  2315: u64 [s1 + 1512] = 0\n  2319: a1 = s1 + 0x5e0\n  2323: u64 [s1 + 1504] = 0x3\n  2328: a0 = 0\n  2330: ra = 40, jump @19\n      : @73 [@dyn 20] (gas: 2)\n  2335: a1 = i32 [0x20104]\n  2340: jump @75 if a1 >u 31\n      : @74 (gas: 2)\n  2344: u32 [0x20104] = 0x20\n  2350: fallthrough\n      : @75 (gas: 87)\n  2351: a0 = sp + 0xffffffffffffffe0\n  2354: a2 = a0 & 0xffffffffffffffe0\n  2357: u64 [s1 + 0x128] = a2\n  2361: sp = a2\n  2363: a0 = 0x20110\n  2368: i32 a0 = a0 + 0\n  2370: i32 a2 = a2 + 0\n  2372: a1 = 0x20\n  2375: ecalli 6 // 'hash_keccak_256'\n  2377: a0 = u64 [s1 + 0x68]\n  2380: a1 = a0 + 0x1f\n  2383: a0 = a1 <u a0\n  2386: a5 = u64 [s1 + 0xf0]\n  2390: a2 = a5 + a0\n  2393: a3 = a2 <u a5\n  2396: a3 = a0 if a0 == 0\n  2399: a4 = u64 [s1 + 0x60]\n  2402: a3 = a3 + a4\n  2405: u64 [s1 + 0x108] = a3\n  2409: a3 = a3 << 0x3b\n  2412: a4 = a2 >> 0x5\n  2415: a4 = a4 | a3\n  2418: a0 = u64 [s1 + 0x128]\n  2422: t1 = u64 [a0 + 0x18]\n  2425: a2 = a2 << 0x3b\n  2428: a3 = u64 [a0 + 0x10]\n  2431: a1 = a1 >> 0x5\n  2434: a0 = a1 | a2\n  2437: t2 = reverse t1\n  2439: a2 = reverse a3\n  2441: a1 = u64 [s1 + 0xd8]\n  2445: a1 = 0 if a5 != 0\n  2447: a3 = u64 [s1 + 0xe0]\n  2451: a1 = 0 if a3 != 0\n  2453: a4 = 0 if a1 != 0\n  2455: a0 = 0 if a1 != 0\n  2457: t0 = t2 + a0\n  2460: a0 = t0 <u t2\n  2463: a5 = a2 + a0\n  2466: a4 = a4 + a5\n  2469: u64 [s1 + 0x138] = a4\n  2473: a5 = a4 ^ a2\n  2476: a3 = a4 <u a2\n  2479: a3 = a0 if a5 == 0\n  2482: u64 [s1 + 0x100] = a3\n  2486: a0 = u64 [s1 + 0x118]\n  2490: ra = a0 + 0x1f\n  2493: a4 = ra <u a0\n  2496: a3 = u64 [s1 + 0x110]\n  2500: a0 = a3 + a4\n  2503: a5 = a0 <u a3\n  2506: a5 = a4 if a4 == 0\n  2509: t1 = u64 [s1 + 0x130]\n  2513: t1 = t1 + a5\n  2516: a4 = t1 << 0x3b\n  2519: a3 = a0 >> 0x5\n  2522: a3 = a3 | a4\n  2525: a0 = a0 << 0x3b\n  2528: a4 = ra >> 0x5\n  2531: a0 = a0 | a4\n  2534: a0 = a0 + t2\n  2537: u64 [s1 + 0x118] = a0\n  2541: a0 = a0 <u t2\n  2544: t2 = t0\n  2546: a4 = a2 + a0\n  2549: a4 = a4 + a3\n  2552: a3 = a4 ^ a2\n  2555: u64 [s1 + 0x110] = a4\n  2559: a2 = a4 <u a2\n  2562: a2 = a0 if a3 == 0\n  2565: a4 = u64 [s1 + 0x108]\n  2569: a0 = u64 [s1 + 0x60]\n  2572: a0 = a4 <u a0\n  2575: a3 = u64 [s1 + 0xe8]\n  2579: a0 = a0 + a3\n  2582: a3 = a4 >> 0x5\n  2585: a4 = a0 << 0x3b\n  2588: a3 = a3 | a4\n  2591: a4 = u64 [s1 + 0x128]\n  2595: t0 = u64 [a4]\n  2597: a4 = u64 [a4 + 0x8]\n  2600: a0 = a0 >> 0x5\n  2603: a3 = 0 if a1 != 0\n  2605: a0 = 0 if a1 != 0\n  2607: a1 = reverse a4\n  2609: a4 = reverse t0\n  2611: t0 = 42, jump @790\n      : @76 [@dyn 21] (gas: 25)\n  2616: t0 = a0 + a3\n  2619: a0 = u64 [s1 + 0x130]\n  2623: a0 = t1 <u a0\n  2626: a3 = u64 [s1 + 0x120]\n  2630: a0 = a0 + a3\n  2633: a3 = t1 >> 0x5\n  2636: a5 = a0 << 0x3b\n  2639: a3 = a3 | a5\n  2642: a0 = a0 >> 0x5\n  2645: a0 = a0 + a4\n  2648: a5 = s1 + 0x100\n  2652: a4 = u64 [a5 + 0x38]\n  2655: a3 = a3 + a1\n  2658: a1 = a3 <u a1\n  2661: a0 = a0 + a1\n  2664: a2 = a2 + a3\n  2667: u64 [a5 + 0x8] = a2\n  2670: a1 = a2 <u a3\n  2673: a0 = a0 + a1\n  2676: u64 [a5] = a0\n  2678: a0 = sp + 0xffffffffffffffe0\n  2681: t1 = a0 & 0xffffffffffffffe0\n  2684: sp = t1\n  2686: u64 [s1 + 0xf8] = t1\n  2690: fallthrough\n      : @77 (gas: 20)\n  2691: a0 = u64 [s1 + 0x118]\n  2695: a0 = t2 <u a0\n  2698: a2 = u64 [s1 + 0x110]\n  2702: a1 = a4 ^ a2\n  2705: a2 = a4 <u a2\n  2708: a2 = a0 if a1 == 0\n  2711: a5 = u64 [s1 + 0x108]\n  2715: a0 = ra <u a5\n  2718: a3 = u64 [s1 + 0x100]\n  2722: a1 = t0 ^ a3\n  2725: a3 = t0 <u a3\n  2728: a3 = a0 if a1 == 0\n  2731: a0 = ra ^ a5\n  2734: a0 = a0 | a1\n  2737: a3 = a2 if a0 == 0\n  2740: u64 [t1] = t2\n  2742: u64 [t1 + 0x8] = a4\n  2745: u64 [t1 + 0x10] = ra\n  2748: u64 [t1 + 0x18] = t0\n  2751: jump @80 if a3 == 0\n      : @78 (gas: 16)\n  2754: a0 = s1 + 0x1000\n  2758: u64 [a0 + 4294965272] = 0\n  2762: a0 = s1 + 0x1000\n  2766: u64 [a0 + 4294965264] = 0\n  2770: a0 = s1 + 0x1000\n  2774: u64 [a0 + 4294965256] = 0\n  2778: a0 = s1 + 0x1000\n  2782: u64 [a0 + 4294965248] = 0\n  2786: a1 = s1 + 0x7ff\n  2790: a1 = a1 + 0x1\n  2793: a0 = t1\n  2795: u64 [s1 + 0x130] = t2\n  2799: u64 [s1 + 0x138] = a4\n  2803: u64 [s1 + 0x128] = t0\n  2807: u64 [s1 + 0x120] = ra\n  2811: ra = 44, jump @22\n      : @79 [@dyn 22] (gas: 15)\n  2816: t1 = u64 [s1 + 0xf8]\n  2820: t0 = u64 [s1 + 0x128]\n  2824: a4 = u64 [s1 + 0x138]\n  2828: t2 = u64 [s1 + 0x130]\n  2832: t2 = t2 + 0x1\n  2835: a0 = t2 <u 0x1\n  2838: a4 = a4 + a0\n  2841: a0 = t2 | a4\n  2844: a0 = a0 <u 0x1\n  2847: a1 = u64 [s1 + 0x120]\n  2851: a0 = a0 + a1\n  2854: a1 = a0 <u a1\n  2857: t0 = t0 + a1\n  2860: ra = a0\n  2862: jump @77\n      : @80 (gas: 23)\n  2865: a0 = u64 [s1 + 0xd8]\n  2869: a0 = a0 ^ 0x1\n  2872: a5 = u64 [s1 + 0xf0]\n  2876: a1 = u64 [s1 + 0x58]\n  2879: a0 = a1 if a5 != 0\n  2882: a1 = u64 [s1 + 0xb0]\n  2886: a2 = u64 [s1 + 0xe0]\n  2890: a0 = a1 if a2 != 0\n  2893: ra = u64 [s1 + 0xe8]\n  2897: a4 = a5 | ra\n  2900: a1 = u64 [s1 + 0x60]\n  2903: t2 = a1 >> 0x3f\n  2906: ra = ra << 0x1\n  2909: a2 = a5 >> 0x3f\n  2912: u64 [s1 + 0x58] = a2\n  2915: a2 = a1 << 0x1\n  2918: u64 [s1 + 0x48] = a2\n  2921: a3 = u64 [s1 + 0x68]\n  2924: t0 = a3 >> 0x3f\n  2927: a2 = a5 << 0x1\n  2930: u64 [s1 + 0x50] = a2\n  2933: a2 = a3 << 0x1\n  2936: jump @92 if a0 == 0\n      : @81 (gas: 14)\n  2940: u64 [s1 + 0x20] = a4\n  2943: u64 [s1 + 0x30] = t0\n  2946: u64 [s1 + 0x38] = ra\n  2949: u64 [s1 + 0x28] = t2\n  2952: u64 [s1 + 0x40] = a2\n  2955: a3 = a3 & 0xffffffffffffffe0\n  2958: u64 [s1 + 0xb0] = a3\n  2962: u64 [s1 + 1464] = 0\n  2966: u64 [s1 + 1456] = 0\n  2970: u64 [s1 + 1448] = 0\n  2974: a1 = s1 + 0x5a0\n  2978: u64 [s1 + 1440] = 0x3\n  2983: a0 = 0\n  2985: ra = 46, jump @19\n      : @82 [@dyn 23] (gas: 7)\n  2990: a0 = sp + 0xffffffffffffffe0\n  2993: a0 = a0 & 0xffffffffffffffe0\n  2996: u64 [s1 + 0x110] = a0\n  3000: sp = a0\n  3002: a1 = 0x20\n  3005: a0 = 0\n  3007: ra = 48, jump @26\n      : @83 [@dyn 24] (gas: 1)\n  3012: t0 = 50, jump @783\n      : @84 [@dyn 25] (gas: 5)\n  3017: ecalli 6 // 'hash_keccak_256'\n  3019: u64 [s1 + 312] = 0x20\n  3024: a5 = 0\n  3026: u64 [s1 + 304] = 0\n  3030: t0 = 52, jump @777\n      : @85 [@dyn 26] (gas: 15)\n  3035: t0 = u64 [a3]\n  3037: t1 = reverse a0\n  3039: a1 = reverse a1\n  3041: a3 = reverse a2\n  3043: a2 = reverse t0\n  3045: t0 = a2\n  3047: a0 = u64 [s1 + 0x110]\n  3051: u64 [a0 + 0x18] = a2\n  3054: u64 [s1 + 0xf0] = a3\n  3058: u64 [a0 + 0x10] = a3\n  3061: u64 [s1 + 0x108] = a1\n  3065: u64 [a0 + 0x8] = a1\n  3068: a3 = t1\n  3070: u64 [a0] = t1\n  3072: fallthrough\n      : @86 (gas: 25)\n  3073: t2 = t0\n  3075: t1 = a3\n  3077: a0 = u64 [s1 + 0xb0]\n  3081: u64 [s1 + 0x100] = a4\n  3085: a0 = a4 <u a0\n  3088: a4 = a0 ^ 0x1\n  3091: u64 [s1 + 0xf8] = ra\n  3095: a4 = 0x1 if ra != 0\n  3098: a0 = u64 [s1 + 0x120]\n  3102: a2 = u64 [s1 + 0x118]\n  3106: a0 = a0 | a2\n  3109: a4 = 0x1 if a0 != 0\n  3112: a1 = u64 [s1 + 0xd0]\n  3116: a0 = u64 [s1 + 0x138]\n  3120: a1 = a1 + a0\n  3123: a3 = u64 [s1 + 0xc8]\n  3127: t0 = a5\n  3129: a3 = a3 + a5\n  3132: a2 = u64 [s1 + 0xb8]\n  3136: a0 = u64 [s1 + 0x130]\n  3140: a2 = a2 + a0\n  3143: a0 = u64 [s1 + 0xc0]\n  3147: a5 = u64 [s1 + 0x128]\n  3151: a0 = a0 + a5\n  3154: jump @94 if a4 != 0\n      : @87 (gas: 23)\n  3158: a4 = u64 [s1 + 0x138]\n  3162: a4 = a1 <u a4\n  3165: ra = a3 + a4\n  3168: a3 = t0\n  3170: t0 = ra ^ t0\n  3173: a5 = ra <u a3\n  3176: a5 = a4 if t0 == 0\n  3179: a5 = a5 + a2\n  3182: t0 = a5 <u a2\n  3185: a4 = u64 [s1 + 0x130]\n  3189: a2 = a2 <u a4\n  3192: a0 = a0 + a2\n  3195: a0 = a0 + t0\n  3198: a2 = a1 | a5\n  3201: a0 = ra | a0\n  3204: a2 = a2 | a0\n  3207: a2 = a2 >> 0x20\n  3210: a0 = a0 | a5\n  3213: a0 = a0 << 0x20\n  3216: a0 = a0 | a2\n  3219: u64 [s1 + 0xe8] = t1\n  3223: u64 [s1 + 0xe0] = t2\n  3227: jump @89 if a0 == 0\n      : @88 (gas: 1)\n  3230: jump @203\n      : @89 (gas: 3)\n  3233: a0 = s1 + 0x1c0\n  3237: u64 [s1 + 0xd8] = a3\n  3241: ra = 54, jump @17\n      : @90 [@dyn 27] (gas: 16)\n  3246: a0 = u64 [s1 + 0x1d8]\n  3250: a1 = u64 [s1 + 0x1d0]\n  3254: a2 = u64 [s1 + 0x1c8]\n  3258: a3 = u64 [s1 + 0x1c0]\n  3262: a4 = s1 + 0x1000\n  3266: u64 [a4 + 0xfffffffffffff838] = a0\n  3270: a0 = s1 + 0x1000\n  3274: u64 [a0 + 0xfffffffffffff830] = a1\n  3278: a0 = s1 + 0x1000\n  3282: u64 [a0 + 0xfffffffffffff828] = a2\n  3286: a0 = s1 + 0x1000\n  3290: u64 [a0 + 0xfffffffffffff820] = a3\n  3294: a1 = s1 + 0x7ff\n  3298: a1 = a1 + 0x21\n  3301: a0 = u64 [s1 + 0x110]\n  3305: ra = 56, jump @22\n      : @91 [@dyn 28] (gas: 56)\n  3310: ra = u64 [s1 + 0xe8]\n  3314: ra = ra + 0x1\n  3317: a0 = ra <u 0x1\n  3320: t0 = u64 [s1 + 0x108]\n  3324: t0 = t0 + a0\n  3327: a0 = ra | t0\n  3330: a0 = a0 <u 0x1\n  3333: a1 = u64 [s1 + 0xf0]\n  3337: t1 = a1 + a0\n  3340: a1 = t1 <u a1\n  3343: a0 = u64 [s1 + 0xe0]\n  3347: a0 = a0 + a1\n  3350: a1 = u64 [s1 + 0x138]\n  3354: a2 = a1 + 0x20\n  3357: u64 [s1 + 0xe8] = a2\n  3361: a3 = a2 <u a1\n  3364: a1 = u64 [s1 + 0xd8]\n  3368: a2 = a1 + a3\n  3371: u64 [s1 + 0xe0] = a2\n  3375: a4 = a2 <u a1\n  3378: a4 = a3 if a3 == 0\n  3381: a1 = u64 [s1 + 0x130]\n  3385: t2 = a1 + a4\n  3388: a4 = t2 <u a1\n  3391: a1 = u64 [s1 + 0x128]\n  3395: a1 = a1 + a4\n  3398: u64 [s1 + 0x128] = a1\n  3402: a1 = u64 [s1 + 0x100]\n  3406: a4 = a1 + 0x20\n  3409: a5 = a4 <u a1\n  3412: a2 = u64 [s1 + 0xf8]\n  3416: a1 = a2 + a5\n  3419: a2 = a1 <u a2\n  3422: a2 = a5 if a5 == 0\n  3425: a3 = u64 [s1 + 0x118]\n  3429: a2 = a2 + a3\n  3432: a5 = a2 <u a3\n  3435: a3 = u64 [s1 + 0x120]\n  3439: a3 = a3 + a5\n  3442: u64 [s1 + 0x120] = a3\n  3446: u64 [s1 + 0x108] = t0\n  3450: a5 = u64 [s1 + 0x110]\n  3454: u64 [a5 + 0x8] = t0\n  3457: a3 = ra\n  3459: u64 [a5] = ra\n  3461: u64 [a5 + 0x10] = t1\n  3464: t0 = a0\n  3466: u64 [a5 + 0x18] = a0\n  3469: u64 [s1 + 0xf0] = t1\n  3473: a0 = u64 [s1 + 0xe8]\n  3477: u64 [s1 + 0x138] = a0\n  3481: a5 = u64 [s1 + 0xe0]\n  3485: u64 [s1 + 0x130] = t2\n  3489: ra = a1\n  3491: u64 [s1 + 0x118] = a2\n  3495: jump @86\n      : @92 (gas: 7)\n  3498: a0 = a3 | a1\n  3501: a0 = a0 | a4\n  3504: a4 = u64 [s1 + 0xd0]\n  3508: t1 = u64 [s1 + 0xc8]\n  3512: a1 = u64 [s1 + 0xc0]\n  3516: a5 = u64 [s1 + 0xb8]\n  3520: jump @108 if a0 != 0\n      : @93 (gas: 6)\n  3524: u64 [s1 + 0x40] = a2\n  3527: u64 [s1 + 288] = 0\n  3531: u64 [s1 + 280] = 0\n  3535: u64 [s1 + 296] = 0\n  3539: u64 [s1 + 304] = 0\n  3543: jump @111\n      : @94 (gas: 11)\n  3546: ra = t0\n  3548: t1 = u64 [s1 + 0x68]\n  3551: a4 = u64 [s1 + 0xb0]\n  3555: a4 = a4 ^ t1\n  3558: a5 = u64 [s1 + 0x60]\n  3561: a4 = a4 | a5\n  3564: a5 = u64 [s1 + 0x20]\n  3567: a4 = a4 | a5\n  3570: a5 = u64 [s1 + 0x38]\n  3573: t0 = u64 [s1 + 0x30]\n  3576: jump @107 if a4 == 0\n      : @95 (gas: 13)\n  3580: a4 = u64 [s1 + 0x138]\n  3584: a4 = a1 <u a4\n  3587: a3 = a3 + a4\n  3590: t0 = a3 ^ ra\n  3593: a5 = a3 <u ra\n  3596: a5 = a4 if t0 == 0\n  3599: a5 = a5 + a2\n  3602: t0 = a5 <u a2\n  3605: a4 = u64 [s1 + 0x130]\n  3609: a2 = a2 <u a4\n  3612: a0 = a0 + a2\n  3615: a0 = a0 + t0\n  3618: t0 = 58, jump @779\n      : @96 [@dyn 29] (gas: 1)\n  3623: jump @98 if a0 == 0\n      : @97 (gas: 1)\n  3626: jump @203\n      : @98 (gas: 2)\n  3629: a0 = s1 + 0x580\n  3633: ra = 60, jump @17\n      : @99 [@dyn 30] (gas: 11)\n  3638: a1 = s1 + 0x500\n  3642: a0 = u64 [a1 + 0x98]\n  3646: u64 [s1 + 0x130] = a0\n  3650: a0 = u64 [a1 + 0x90]\n  3654: u64 [s1 + 0x128] = a0\n  3658: a0 = u64 [a1 + 0x88]\n  3662: u64 [s1 + 0x120] = a0\n  3666: a0 = u64 [a1 + 0x80]\n  3670: u64 [s1 + 0x118] = a0\n  3674: a0 = u64 [s1 + 0x68]\n  3677: t0 = 62, jump @782\n      : @100 [@dyn 31] (gas: 1)\n  3682: ra = 64, jump @800\n      : @101 [@dyn 32] (gas: 6)\n  3687: u64 [s1 + 0x108] = a0\n  3691: u64 [s1 + 0xf0] = a1\n  3695: a0 = 0xffffffffffffffff\n  3698: a1 = 0xffffffffffffffff\n  3701: a2 = u64 [s1 + 0x138]\n  3705: ra = 66, jump @795\n      : @102 [@dyn 33] (gas: 1)\n  3710: t0 = 68, jump @781\n      : @103 [@dyn 34] (gas: 1)\n  3715: ra = 70, jump @795\n      : @104 [@dyn 35] (gas: 1)\n  3720: t0 = 72, jump @767\n      : @105 [@dyn 36] (gas: 12)\n  3725: a4 = s1 + 0x1000\n  3729: u64 [a4 + 0xfffffffffffff858] = a3\n  3733: a3 = s1 + 0x1000\n  3737: u64 [a3 + 0xfffffffffffff850] = a2\n  3741: a2 = s1 + 0x1000\n  3745: u64 [a2 + 0xfffffffffffff848] = a1\n  3749: a1 = s1 + 0x1000\n  3753: u64 [a1 + 0xfffffffffffff840] = a0\n  3757: a1 = s1 + 0x7ff\n  3761: a1 = a1 + 0x41\n  3764: a0 = u64 [s1 + 0x110]\n  3768: ra = 74, jump @22\n      : @106 [@dyn 37] (gas: 3)\n  3773: t0 = u64 [s1 + 0x30]\n  3776: a5 = u64 [s1 + 0x38]\n  3779: fallthrough\n      : @107 (gas: 31)\n  3780: a0 = u64 [s1 + 0x28]\n  3783: a0 = a0 | a5\n  3786: a1 = u64 [s1 + 0x58]\n  3789: a2 = u64 [s1 + 0x48]\n  3792: a1 = a1 | a2\n  3795: a2 = u64 [s1 + 0x50]\n  3798: a2 = a2 | t0\n  3801: a3 = u64 [s1 + 0x40]\n  3804: a3 = a3 + 0x1\n  3807: a4 = s1 + 0x1000\n  3811: u64 [a4 + 4294965368] = 0\n  3815: a4 = s1 + 0x1000\n  3819: u64 [a4 + 4294965360] = 0\n  3823: a4 = s1 + 0x1000\n  3827: u64 [a4 + 4294965352] = 0\n  3831: a5 = s1 + 0x1000\n  3835: u64 [a5 + 4294965344] = 0x3\n  3840: a4 = s1 + 0x1000\n  3844: u64 [a4 + 0xfffffffffffff880] = a3\n  3848: a3 = s1 + 0x1000\n  3852: u64 [a3 + 0xfffffffffffff888] = a2\n  3856: a2 = s1 + 0x1000\n  3860: u64 [a2 + 0xfffffffffffff890] = a1\n  3864: a1 = s1 + 0x1000\n  3868: u64 [a1 + 0xfffffffffffff898] = a0\n  3872: a0 = s1 + 0x7ff\n  3876: a0 = a0 + 0x61\n  3879: a1 = s1 + 0x7ff\n  3883: a1 = a1 + 0x81\n  3887: ra = 0x5a\n  3890: jump @22\n      : @108 (gas: 6)\n  3893: a0 = a5 | a1\n  3896: a1 = 0xffffffe0\n  3906: a1 = a4 <u a1\n  3909: a1 = 0 if t1 != 0\n  3911: a1 = 0 if a0 != 0\n  3913: jump @203 if a1 == 0\n      : @109 (gas: 7)\n  3917: u64 [s1 + 0x40] = a2\n  3920: i32 a1 = a4 + 0x20\n  3923: a0 = s1 + 0x5c0\n  3927: u64 [s1 + 0x28] = t2\n  3930: u64 [s1 + 0x38] = ra\n  3933: u64 [s1 + 0x30] = t0\n  3936: ra = 76, jump @17\n      : @110 [@dyn 38] (gas: 15)\n  3941: t0 = u64 [s1 + 0x30]\n  3944: ra = u64 [s1 + 0x38]\n  3947: t2 = u64 [s1 + 0x28]\n  3950: a3 = u64 [s1 + 0x68]\n  3953: a1 = s1 + 0x500\n  3957: a0 = u64 [a1 + 0xd8]\n  3961: a2 = s1 + 0x100\n  3965: u64 [a2 + 0x30] = a0\n  3968: a0 = u64 [a1 + 0xd0]\n  3972: u64 [a2 + 0x28] = a0\n  3975: a0 = u64 [a1 + 0xc8]\n  3979: u64 [a2 + 0x18] = a0\n  3982: a0 = u64 [a1 + 0xc0]\n  3986: u64 [a2 + 0x20] = a0\n  3989: fallthrough\n      : @111 (gas: 10)\n  3990: a0 = u64 [s1 + 0x58]\n  3993: a1 = u64 [s1 + 0x48]\n  3996: a0 = a0 | a1\n  3999: u64 [s1 + 0x110] = a0\n  4003: a0 = ra | t2\n  4006: u64 [s1 + 0x108] = a0\n  4010: a0 = u64 [s1 + 0x50]\n  4013: a0 = a0 | t0\n  4016: u64 [s1 + 0x100] = a0\n  4020: t0 = 78, jump @791\n      : @112 [@dyn 39] (gas: 1)\n  4025: ra = 80, jump @800\n      : @113 [@dyn 40] (gas: 7)\n  4030: u64 [s1 + 0xe0] = a0\n  4034: u64 [s1 + 0xf8] = a1\n  4038: a0 = u64 [s1 + 0x68]\n  4041: i32 a2 = a0 << 0x3\n  4044: a0 = 0xffffffffffffffff\n  4047: a1 = 0xffffffffffffffff\n  4050: ra = 82, jump @795\n      : @114 [@dyn 41] (gas: 10)\n  4055: u64 [s1 + 0xf0] = a0\n  4059: u64 [s1 + 0xe8] = a1\n  4063: a1 = u64 [s1 + 0xe0]\n  4067: a0 = a0 | a1\n  4070: u64 [s1 + 0xe0] = a0\n  4074: a0 = u64 [s1 + 0x138]\n  4078: i32 a2 = a0 + 0xffffffffffffff80\n  4081: a0 = 0xffffffffffffffff\n  4084: a1 = 0xffffffffffffffff\n  4087: ra = 84, jump @795\n      : @115 [@dyn 42] (gas: 7)\n  4092: a4 = u64 [s1 + 0x138]\n  4096: a2 = a4 <u 0x80\n  4100: a3 = u64 [s1 + 0xe0]\n  4104: a0 = a3 if a2 != 0\n  4107: a5 = u64 [s1 + 0xe8]\n  4111: a3 = u64 [s1 + 0xf8]\n  4115: t0 = 86, jump @785\n      : @116 [@dyn 43] (gas: 2)\n  4120: a4 = u64 [s1 + 0xf0]\n  4124: t0 = 88, jump @770\n      : @117 [@dyn 44] (gas: 26)\n  4129: a4 = u64 [s1 + 0x40]\n  4132: a0 = a0 | a4\n  4135: a5 = s1 + 0x100\n  4139: a4 = u64 [a5]\n  4141: a1 = a1 | a4\n  4144: a4 = u64 [a5 + 0x8]\n  4147: a3 = a3 | a4\n  4150: a4 = u64 [a5 + 0x10]\n  4153: a2 = a2 | a4\n  4156: a5 = s1 + 0x1000\n  4160: u64 [a5 + 4294965408] = 0x3\n  4165: a4 = s1 + 0x7ff\n  4169: a4 = a4 + 0xb9\n  4173: u64 [a4 + 0x18] = a2\n  4176: u64 [a4 + 0x20] = a3\n  4179: u64 [a4 + 0x10] = a1\n  4182: u64 [a4 + 0x8] = a0\n  4185: u64 [a4 + 0] = 0\n  4187: u64 [a4 + 4294967288] = 0\n  4190: a0 = s1 + 0x1000\n  4194: u64 [a0 + 4294965416] = 0\n  4198: a0 = s1 + 0x7ff\n  4202: a0 = a0 + 0xa1\n  4206: a1 = s1 + 0x7ff\n  4210: a1 = a1 + 0xc1\n  4214: ra = 90, jump @22\n      : @118 [@dyn 45] (gas: 12)\n  4219: a1 = u64 [s1 + 0xa8]\n  4223: a4 = u64 [s1 + 0x90]\n  4227: a0 = a1 | a4\n  4230: a2 = u64 [s1 + 0xa0]\n  4234: a3 = u64 [s1 + 0x98]\n  4238: a2 = a2 | a3\n  4241: a0 = a0 | a2\n  4244: a0 = a0 >> 0x20\n  4247: a2 = a2 | a4\n  4250: a2 = a2 << 0x20\n  4253: a0 = a0 | a2\n  4256: jump @203 if a0 != 0\n      : @119 (gas: 2)\n  4260: a0 = s1 + 0x560\n  4264: ra = 92, jump @17\n      : @120 [@dyn 46] (gas: 17)\n  4269: a0 = s1 + 0x500\n  4273: a3 = u64 [a0 + 0x78]\n  4276: a2 = u64 [a0 + 0x70]\n  4279: a1 = u64 [a0 + 0x68]\n  4282: a0 = a3 >u 0\n  4284: a4 = a2 >u 0\n  4286: a4 = a0 if a3 != 0\n  4289: u64 [s1 + 0xc0] = a1\n  4293: a0 = a1 >u 0\n  4295: u64 [s1 + 0xb8] = a2\n  4299: u64 [s1 + 0xb0] = a3\n  4303: a2 = a2 | a3\n  4306: u64 [s1 + 0xd8] = a0\n  4310: u64 [s1 + 0xe0] = a4\n  4314: u64 [s1 + 0xf0] = a2\n  4318: a0 = a4 if a2 != 0\n  4321: jump @220 if a0 != 0\n      : @121 (gas: 12)\n  4325: a0 = u64 [s1 + 0x560]\n  4329: u64 [s1 + 0xc8] = a0\n  4333: a1 = s1 + 0x7ff\n  4337: a1 = a1 + 0xb9\n  4341: u64 [a1 + 64] = 0\n  4344: u64 [a1 + 56] = 0\n  4347: u64 [a1 + 48] = 0\n  4350: u64 [a1 + 40] = 0x4\n  4354: a0 = s1 + 0x540\n  4358: a1 = s1 + 0x7ff\n  4362: a1 = a1 + 0xe1\n  4366: ra = 94, jump @21\n      : @122 [@dyn 47] (gas: 6)\n  4371: a4 = s1 + 0x500\n  4375: a0 = u64 [a4 + 0x50]\n  4378: a1 = u64 [a4 + 0x48]\n  4381: a2 = u64 [a4 + 0x40]\n  4384: a3 = u64 [a4 + 0x58]\n  4387: t0 = 96, jump @771\n      : @123 [@dyn 48] (gas: 12)\n  4392: t0 = a2 <u 0x1\n  4395: ra = a1 & 0x7f\n  4398: t2 = a5 & a0\n  4401: a4 = a5 & t1\n  4404: ra = a1 if a2 != 0\n  4407: a1 = ra <u 0x20\n  4410: a5 = a5 & a3\n  4413: a2 = a1\n  4415: a2 = 0 if a4 != 0\n  4417: a0 = t2 | a5\n  4420: a2 = 0 if a0 != 0\n  4422: jump @226 if t0 != a2\n      : @124 (gas: 1)\n  4426: t0 = 98, jump @775\n      : @125 [@dyn 49] (gas: 4)\n  4431: a0 = u64 [s1 + 0xc8]\n  4435: a0 = a0 <u 0x20\n  4438: u64 [s1 + 0xe8] = a0\n  4442: jump @134 if a3 == 0\n      : @126 (gas: 11)\n  4446: u64 [s1 + 0x110] = a4\n  4450: u64 [s1 + 0x118] = ra\n  4454: u64 [s1 + 0x120] = a5\n  4458: u64 [s1 + 0x130] = t2\n  4462: u64 [s1 + 1336] = 0\n  4466: u64 [s1 + 1328] = 0\n  4470: u64 [s1 + 1320] = 0\n  4474: a1 = s1 + 0x520\n  4478: u64 [s1 + 1312] = 0x4\n  4483: a0 = 0\n  4485: ra = 100, jump @19\n      : @127 [@dyn 50] (gas: 2)\n  4490: a1 = i32 [0x20104]\n  4495: jump @129 if a1 >u 31\n      : @128 (gas: 2)\n  4499: u32 [0x20104] = 0x20\n  4505: fallthrough\n      : @129 (gas: 87)\n  4506: a0 = sp + 0xffffffffffffffe0\n  4509: a2 = a0 & 0xffffffffffffffe0\n  4512: u64 [s1 + 0x128] = a2\n  4516: sp = a2\n  4518: a0 = 0x20110\n  4523: i32 a0 = a0 + 0\n  4525: i32 a2 = a2 + 0\n  4527: a1 = 0x20\n  4530: ecalli 6 // 'hash_keccak_256'\n  4532: a0 = u64 [s1 + 0xc8]\n  4536: a1 = a0 + 0x1f\n  4539: a0 = a1 <u a0\n  4542: a5 = u64 [s1 + 0xc0]\n  4546: a2 = a5 + a0\n  4549: a3 = a2 <u a5\n  4552: a3 = a0 if a0 == 0\n  4555: a4 = u64 [s1 + 0xb8]\n  4559: a3 = a3 + a4\n  4562: u64 [s1 + 0x108] = a3\n  4566: a3 = a3 << 0x3b\n  4569: a4 = a2 >> 0x5\n  4572: a4 = a4 | a3\n  4575: a0 = u64 [s1 + 0x128]\n  4579: t0 = u64 [a0 + 0x18]\n  4582: a2 = a2 << 0x3b\n  4585: a0 = u64 [a0 + 0x10]\n  4588: a1 = a1 >> 0x5\n  4591: a2 = a2 | a1\n  4594: t2 = reverse t0\n  4596: a0 = reverse a0\n  4598: a1 = u64 [s1 + 0xe8]\n  4602: a1 = 0 if a5 != 0\n  4604: a3 = u64 [s1 + 0xf0]\n  4608: a1 = 0 if a3 != 0\n  4610: a4 = 0 if a1 != 0\n  4612: a2 = 0 if a1 != 0\n  4614: t0 = t2 + a2\n  4617: a2 = t0 <u t2\n  4620: a5 = a0 + a2\n  4623: a4 = a4 + a5\n  4626: u64 [s1 + 0x138] = a4\n  4630: a5 = a4 ^ a0\n  4633: a3 = a4 <u a0\n  4636: a3 = a2 if a5 == 0\n  4639: u64 [s1 + 0x100] = a3\n  4643: a2 = u64 [s1 + 0x118]\n  4647: ra = a2 + 0x1f\n  4650: a4 = ra <u a2\n  4653: a3 = u64 [s1 + 0x110]\n  4657: a2 = a3 + a4\n  4660: a5 = a2 <u a3\n  4663: a5 = a4 if a4 == 0\n  4666: t1 = u64 [s1 + 0x130]\n  4670: t1 = t1 + a5\n  4673: a4 = t1 << 0x3b\n  4676: a3 = a2 >> 0x5\n  4679: a3 = a3 | a4\n  4682: a2 = a2 << 0x3b\n  4685: a4 = ra >> 0x5\n  4688: a2 = a2 | a4\n  4691: a2 = a2 + t2\n  4694: u64 [s1 + 0x118] = a2\n  4698: a4 = a2 <u t2\n  4701: t2 = t0\n  4703: a2 = a0 + a4\n  4706: a2 = a2 + a3\n  4709: a3 = a2 ^ a0\n  4712: u64 [s1 + 0x110] = a2\n  4716: a2 = a2 <u a0\n  4719: a2 = a4 if a3 == 0\n  4722: a4 = u64 [s1 + 0x108]\n  4726: a0 = u64 [s1 + 0xb8]\n  4730: a0 = a4 <u a0\n  4733: a3 = u64 [s1 + 0xb0]\n  4737: a0 = a0 + a3\n  4740: a3 = a4 >> 0x5\n  4743: a4 = a0 << 0x3b\n  4746: a3 = a3 | a4\n  4749: a4 = u64 [s1 + 0x128]\n  4753: t0 = u64 [a4]\n  4755: a4 = u64 [a4 + 0x8]\n  4758: a0 = a0 >> 0x5\n  4761: a3 = 0 if a1 != 0\n  4763: a0 = 0 if a1 != 0\n  4765: a1 = reverse a4\n  4767: a4 = reverse t0\n  4769: t0 = 102, jump @790\n      : @130 [@dyn 51] (gas: 25)\n  4774: t0 = a0 + a3\n  4777: a0 = u64 [s1 + 0x130]\n  4781: a0 = t1 <u a0\n  4784: a3 = u64 [s1 + 0x120]\n  4788: a0 = a0 + a3\n  4791: a3 = t1 >> 0x5\n  4794: a5 = a0 << 0x3b\n  4797: a3 = a3 | a5\n  4800: a0 = a0 >> 0x5\n  4803: a0 = a0 + a4\n  4806: a5 = s1 + 0x100\n  4810: a4 = u64 [a5 + 0x38]\n  4813: a3 = a3 + a1\n  4816: a1 = a3 <u a1\n  4819: a0 = a0 + a1\n  4822: a2 = a2 + a3\n  4825: u64 [a5 + 0x8] = a2\n  4828: a1 = a2 <u a3\n  4831: a0 = a0 + a1\n  4834: u64 [a5] = a0\n  4836: a0 = sp + 0xffffffffffffffe0\n  4839: t1 = a0 & 0xffffffffffffffe0\n  4842: sp = t1\n  4844: u64 [s1 + 0xf8] = t1\n  4848: fallthrough\n      : @131 (gas: 20)\n  4849: a0 = u64 [s1 + 0x118]\n  4853: a0 = t2 <u a0\n  4856: a2 = u64 [s1 + 0x110]\n  4860: a1 = a4 ^ a2\n  4863: a2 = a4 <u a2\n  4866: a2 = a0 if a1 == 0\n  4869: a5 = u64 [s1 + 0x108]\n  4873: a0 = ra <u a5\n  4876: a3 = u64 [s1 + 0x100]\n  4880: a1 = t0 ^ a3\n  4883: a3 = t0 <u a3\n  4886: a3 = a0 if a1 == 0\n  4889: a0 = ra ^ a5\n  4892: a0 = a0 | a1\n  4895: a3 = a2 if a0 == 0\n  4898: u64 [t1] = t2\n  4900: u64 [t1 + 0x8] = a4\n  4903: u64 [t1 + 0x10] = ra\n  4906: u64 [t1 + 0x18] = t0\n  4909: jump @134 if a3 == 0\n      : @132 (gas: 14)\n  4912: a0 = s1 + 0x7ff\n  4916: a0 = a0 + 0xb9\n  4920: u64 [a0 + 96] = 0\n  4923: u64 [a0 + 88] = 0\n  4926: u64 [a0 + 80] = 0\n  4929: u64 [a0 + 72] = 0\n  4932: a1 = s1 + 0x7ff\n  4936: a1 = a1 + 0x101\n  4940: a0 = t1\n  4942: u64 [s1 + 0x130] = t2\n  4946: u64 [s1 + 0x138] = a4\n  4950: u64 [s1 + 0x128] = t0\n  4954: u64 [s1 + 0x120] = ra\n  4958: ra = 104, jump @22\n      : @133 [@dyn 52] (gas: 15)\n  4963: t1 = u64 [s1 + 0xf8]\n  4967: t0 = u64 [s1 + 0x128]\n  4971: a4 = u64 [s1 + 0x138]\n  4975: t2 = u64 [s1 + 0x130]\n  4979: t2 = t2 + 0x1\n  4982: a0 = t2 <u 0x1\n  4985: a4 = a4 + a0\n  4988: a0 = t2 | a4\n  4991: a0 = a0 <u 0x1\n  4994: a1 = u64 [s1 + 0x120]\n  4998: a0 = a0 + a1\n  5001: a1 = a0 <u a1\n  5004: t0 = t0 + a1\n  5007: ra = a0\n  5009: jump @131\n      : @134 (gas: 9)\n  5012: a0 = u64 [s1 + 0xe8]\n  5016: a0 = a0 ^ 0x1\n  5019: a4 = u64 [s1 + 0xc0]\n  5023: a1 = u64 [s1 + 0xd8]\n  5027: a0 = a1 if a4 != 0\n  5030: a1 = u64 [s1 + 0xe0]\n  5034: a2 = u64 [s1 + 0xf0]\n  5038: a0 = a1 if a2 != 0\n  5041: jump @146 if a0 == 0\n      : @135 (gas: 10)\n  5045: a0 = u64 [s1 + 0xc8]\n  5049: a0 = a0 & 0xffffffffffffffe0\n  5052: u64 [s1 + 0xd0] = a0\n  5056: u64 [s1 + 1272] = 0\n  5060: u64 [s1 + 1264] = 0\n  5064: u64 [s1 + 1256] = 0\n  5068: a1 = s1 + 0x4e0\n  5072: u64 [s1 + 1248] = 0x4\n  5077: a0 = 0\n  5079: ra = 106, jump @19\n      : @136 [@dyn 53] (gas: 7)\n  5084: a0 = sp + 0xffffffffffffffe0\n  5087: a0 = a0 & 0xffffffffffffffe0\n  5090: u64 [s1 + 0x110] = a0\n  5094: sp = a0\n  5096: a1 = 0x20\n  5099: a0 = 0\n  5101: ra = 108, jump @26\n      : @137 [@dyn 54] (gas: 1)\n  5106: t0 = 110, jump @783\n      : @138 [@dyn 55] (gas: 5)\n  5111: ecalli 6 // 'hash_keccak_256'\n  5113: u64 [s1 + 304] = 0x20\n  5118: a5 = 0\n  5120: u64 [s1 + 312] = 0\n  5124: t0 = 112, jump @777\n      : @139 [@dyn 56] (gas: 15)\n  5129: t0 = u64 [a3]\n  5131: t1 = reverse a0\n  5133: a1 = reverse a1\n  5135: a3 = reverse a2\n  5137: a2 = reverse t0\n  5139: t0 = a2\n  5141: a0 = u64 [s1 + 0x110]\n  5145: u64 [a0 + 0x18] = a2\n  5148: u64 [s1 + 0xe8] = a3\n  5152: u64 [a0 + 0x10] = a3\n  5155: u64 [s1 + 0x100] = a1\n  5159: u64 [a0 + 0x8] = a1\n  5162: a3 = t1\n  5164: u64 [a0] = t1\n  5166: fallthrough\n      : @140 (gas: 26)\n  5167: t1 = t0\n  5169: t2 = a3\n  5171: a0 = u64 [s1 + 0xd0]\n  5175: u64 [s1 + 0xf8] = a4\n  5179: a0 = a4 <u a0\n  5182: a4 = a0 ^ 0x1\n  5185: u64 [s1 + 0xf0] = ra\n  5189: a4 = 0x1 if ra != 0\n  5192: a0 = u64 [s1 + 0x120]\n  5196: a2 = u64 [s1 + 0x118]\n  5200: a0 = a0 | a2\n  5203: a4 = 0x1 if a0 != 0\n  5206: a1 = u64 [s1 + 0xa8]\n  5210: ra = u64 [s1 + 0x130]\n  5214: a1 = a1 + ra\n  5217: a3 = u64 [s1 + 0xa0]\n  5221: t0 = a5\n  5223: a3 = a3 + a5\n  5226: a2 = u64 [s1 + 0x90]\n  5230: a0 = u64 [s1 + 0x138]\n  5234: a2 = a2 + a0\n  5237: a0 = u64 [s1 + 0x98]\n  5241: a5 = u64 [s1 + 0x128]\n  5245: a0 = a0 + a5\n  5248: u64 [s1 + 0x108] = t0\n  5252: jump @148 if a4 != 0\n      : @141 (gas: 13)\n  5256: a4 = a1 <u ra\n  5259: a3 = a3 + a4\n  5262: a5 = t0\n  5264: t0 = a3 ^ t0\n  5267: a5 = a3 <u a5\n  5270: a5 = a4 if t0 == 0\n  5273: a5 = a5 + a2\n  5276: t0 = a5 <u a2\n  5279: a4 = u64 [s1 + 0x138]\n  5283: a2 = a2 <u a4\n  5286: a0 = a0 + a2\n  5289: a0 = a0 + t0\n  5292: t0 = 114, jump @779\n      : @142 [@dyn 57] (gas: 3)\n  5297: u64 [s1 + 0xe0] = t2\n  5301: u64 [s1 + 0xd8] = t1\n  5305: jump @203 if a0 != 0\n      : @143 (gas: 3)\n  5309: a0 = s1 + 0x260\n  5313: u64 [s1 + 0x130] = ra\n  5317: ra = 116, jump @17\n      : @144 [@dyn 58] (gas: 15)\n  5322: a4 = s1 + 0x200\n  5326: a0 = u64 [a4 + 0x78]\n  5329: a1 = u64 [a4 + 0x70]\n  5332: a2 = u64 [a4 + 0x68]\n  5335: a3 = u64 [a4 + 0x60]\n  5338: a4 = s1 + 0x7ff\n  5342: a4 = a4 + 0xb9\n  5346: u64 [a4 + 0x80] = a0\n  5350: u64 [a4 + 0x78] = a1\n  5353: u64 [a4 + 0x70] = a2\n  5356: u64 [a4 + 0x68] = a3\n  5359: a1 = s1 + 0x7ff\n  5363: a1 = a1 + 0x121\n  5367: a0 = u64 [s1 + 0x110]\n  5371: ra = 118, jump @22\n      : @145 [@dyn 59] (gas: 56)\n  5376: ra = u64 [s1 + 0xe0]\n  5380: ra = ra + 0x1\n  5383: a0 = ra <u 0x1\n  5386: t0 = u64 [s1 + 0x100]\n  5390: t0 = t0 + a0\n  5393: a0 = ra | t0\n  5396: a0 = a0 <u 0x1\n  5399: a1 = u64 [s1 + 0xe8]\n  5403: t1 = a1 + a0\n  5406: a1 = t1 <u a1\n  5409: a0 = u64 [s1 + 0xd8]\n  5413: a0 = a0 + a1\n  5416: a1 = u64 [s1 + 0x130]\n  5420: a2 = a1 + 0x20\n  5423: u64 [s1 + 0xe0] = a2\n  5427: a3 = a2 <u a1\n  5430: a1 = u64 [s1 + 0x108]\n  5434: a2 = a1 + a3\n  5437: u64 [s1 + 0xd8] = a2\n  5441: a4 = a2 <u a1\n  5444: a4 = a3 if a3 == 0\n  5447: a1 = u64 [s1 + 0x138]\n  5451: t2 = a1 + a4\n  5454: a4 = t2 <u a1\n  5457: a1 = u64 [s1 + 0x128]\n  5461: a1 = a1 + a4\n  5464: u64 [s1 + 0x128] = a1\n  5468: a1 = u64 [s1 + 0xf8]\n  5472: a4 = a1 + 0x20\n  5475: a5 = a4 <u a1\n  5478: a2 = u64 [s1 + 0xf0]\n  5482: a1 = a2 + a5\n  5485: a2 = a1 <u a2\n  5488: a2 = a5 if a5 == 0\n  5491: a3 = u64 [s1 + 0x118]\n  5495: a2 = a2 + a3\n  5498: a5 = a2 <u a3\n  5501: a3 = u64 [s1 + 0x120]\n  5505: a3 = a3 + a5\n  5508: u64 [s1 + 0x120] = a3\n  5512: u64 [s1 + 0x100] = t0\n  5516: a5 = u64 [s1 + 0x110]\n  5520: u64 [a5 + 0x8] = t0\n  5523: a3 = ra\n  5525: u64 [a5] = ra\n  5527: u64 [a5 + 0x10] = t1\n  5530: t0 = a0\n  5532: u64 [a5 + 0x18] = a0\n  5535: u64 [s1 + 0xe8] = t1\n  5539: a0 = u64 [s1 + 0xe0]\n  5543: u64 [s1 + 0x130] = a0\n  5547: a5 = u64 [s1 + 0xd8]\n  5551: u64 [s1 + 0x138] = t2\n  5555: ra = a1\n  5557: u64 [s1 + 0x118] = a2\n  5561: jump @140\n      : @146 (gas: 8)\n  5564: a3 = u64 [s1 + 0xc8]\n  5568: a5 = u64 [s1 + 0xb8]\n  5572: a0 = a3 | a5\n  5575: a2 = u64 [s1 + 0xb0]\n  5579: a1 = a4 | a2\n  5582: a0 = a0 | a1\n  5585: t0 = u64 [s1 + 0xa8]\n  5589: jump @161 if a0 != 0\n      : @147 (gas: 5)\n  5593: u64 [s1 + 288] = 0\n  5597: u64 [s1 + 280] = 0\n  5601: u64 [s1 + 296] = 0\n  5605: u64 [s1 + 304] = 0\n  5609: jump @164\n      : @148 (gas: 10)\n  5612: t0 = u64 [s1 + 0xc8]\n  5616: a4 = u64 [s1 + 0xd0]\n  5620: a4 = a4 ^ t0\n  5623: t2 = u64 [s1 + 0xb8]\n  5627: a4 = a4 | t2\n  5630: t1 = u64 [s1 + 0xc0]\n  5634: ra = u64 [s1 + 0xb0]\n  5638: a5 = t1 | ra\n  5641: a4 = a4 | a5\n  5644: jump @160 if a4 == 0\n      : @149 (gas: 14)\n  5648: a4 = u64 [s1 + 0x130]\n  5652: a4 = a1 <u a4\n  5655: a3 = a3 + a4\n  5658: a5 = u64 [s1 + 0x108]\n  5662: t0 = a3 ^ a5\n  5665: a5 = a3 <u a5\n  5668: a5 = a4 if t0 == 0\n  5671: a5 = a5 + a2\n  5674: t0 = a5 <u a2\n  5677: a4 = u64 [s1 + 0x138]\n  5681: a2 = a2 <u a4\n  5684: a0 = a0 + a2\n  5687: a0 = a0 + t0\n  5690: t0 = 120, jump @779\n      : @150 [@dyn 60] (gas: 1)\n  5695: jump @203 if a0 != 0\n      : @151 (gas: 2)\n  5699: a0 = s1 + 0x4c0\n  5703: ra = 122, jump @17\n      : @152 [@dyn 61] (gas: 11)\n  5708: a1 = s1 + 0x400\n  5712: a0 = u64 [a1 + 0xd8]\n  5716: u64 [s1 + 0x130] = a0\n  5720: a0 = u64 [a1 + 0xd0]\n  5724: u64 [s1 + 0x128] = a0\n  5728: a0 = u64 [a1 + 0xc8]\n  5732: u64 [s1 + 0x120] = a0\n  5736: a0 = u64 [a1 + 0xc0]\n  5740: u64 [s1 + 0x118] = a0\n  5744: a0 = u64 [s1 + 0xc8]\n  5748: t0 = 124, jump @782\n      : @153 [@dyn 62] (gas: 1)\n  5753: ra = 126, jump @800\n      : @154 [@dyn 63] (gas: 6)\n  5758: u64 [s1 + 0x108] = a0\n  5762: u64 [s1 + 0xf0] = a1\n  5766: a0 = 0xffffffffffffffff\n  5769: a1 = 0xffffffffffffffff\n  5772: a2 = u64 [s1 + 0x138]\n  5776: ra = 128, jump @795\n      : @155 [@dyn 64] (gas: 1)\n  5782: t0 = 130, jump @781\n      : @156 [@dyn 65] (gas: 1)\n  5788: ra = 132, jump @795\n      : @157 [@dyn 66] (gas: 1)\n  5794: t0 = 134, jump @767\n      : @158 [@dyn 67] (gas: 10)\n  5800: a4 = s1 + 0x7ff\n  5804: a4 = a4 + 0xb9\n  5808: u64 [a4 + 0xa0] = a3\n  5812: u64 [a4 + 0x98] = a2\n  5816: u64 [a4 + 0x90] = a1\n  5820: u64 [a4 + 0x88] = a0\n  5824: a1 = s1 + 0x7ff\n  5828: a1 = a1 + 0x141\n  5832: a0 = u64 [s1 + 0x110]\n  5836: ra = 136, jump @22\n      : @159 [@dyn 68] (gas: 5)\n  5842: t0 = u64 [s1 + 0xc8]\n  5846: t1 = u64 [s1 + 0xc0]\n  5850: t2 = u64 [s1 + 0xb8]\n  5854: ra = u64 [s1 + 0xb0]\n  5858: fallthrough\n      : @160 (gas: 27)\n  5859: a0 = t2 >> 0x3f\n  5862: a1 = ra << 0x1\n  5865: a0 = a0 | a1\n  5868: a1 = t1 >> 0x3f\n  5871: a2 = t2 << 0x1\n  5874: a1 = a1 | a2\n  5877: a2 = t0 >> 0x3f\n  5880: a3 = t1 << 0x1\n  5883: a2 = a2 | a3\n  5886: a3 = t0 << 0x1\n  5889: a3 = a3 + 0x1\n  5892: a5 = s1 + 0x7ff\n  5896: a5 = a5 + 0xb9\n  5900: u64 [a5 + 192] = 0\n  5904: u64 [a5 + 184] = 0\n  5908: u64 [a5 + 176] = 0\n  5912: u64 [a5 + 168] = 0x4\n  5917: u64 [a5 + 0xc8] = a3\n  5921: u64 [a5 + 0xd0] = a2\n  5925: u64 [a5 + 0xd8] = a1\n  5929: u64 [a5 + 0xe0] = a0\n  5933: a0 = s1 + 0x7ff\n  5937: a0 = a0 + 0x161\n  5941: a1 = s1 + 0x7ff\n  5945: a1 = a1 + 0x181\n  5949: ra = 0x98\n  5953: jump @22\n      : @161 (gas: 9)\n  5956: a0 = u64 [s1 + 0x98]\n  5960: a1 = u64 [s1 + 0x90]\n  5964: a0 = a0 | a1\n  5967: a1 = 0xffffffe0\n  5977: a1 = t0 <u a1\n  5980: a3 = u64 [s1 + 0xa0]\n  5984: a1 = 0 if a3 != 0\n  5986: a1 = 0 if a0 != 0\n  5988: jump @203 if a1 == 0\n      : @162 (gas: 3)\n  5992: i32 a1 = t0 + 0x20\n  5995: a0 = s1 + 0x500\n  5999: ra = 138, jump @17\n      : @163 [@dyn 69] (gas: 14)\n  6005: a2 = u64 [s1 + 0xb0]\n  6009: a5 = u64 [s1 + 0xb8]\n  6013: a4 = u64 [s1 + 0xc0]\n  6017: a3 = u64 [s1 + 0xc8]\n  6021: a1 = s1 + 0x500\n  6025: a0 = u64 [a1 + 0x18]\n  6028: u64 [s1 + 0x130] = a0\n  6032: a0 = u64 [a1 + 0x10]\n  6035: u64 [s1 + 0x128] = a0\n  6039: a0 = u64 [a1 + 0x8]\n  6042: u64 [s1 + 0x118] = a0\n  6046: a0 = u64 [a1]\n  6048: u64 [s1 + 0x120] = a0\n  6052: fallthrough\n      : @164 (gas: 15)\n  6053: a0 = a4 >> 0x3f\n  6056: a1 = a5 << 0x1\n  6059: a0 = a0 | a1\n  6062: u64 [s1 + 0x110] = a0\n  6066: a0 = a5 >> 0x3f\n  6069: a1 = a2 << 0x1\n  6072: a0 = a0 | a1\n  6075: u64 [s1 + 0x108] = a0\n  6079: a0 = a3 >> 0x3f\n  6082: a1 = a4 << 0x1\n  6085: a0 = a0 | a1\n  6088: u64 [s1 + 0x100] = a0\n  6092: a0 = a3 << 0x1\n  6095: u64 [s1 + 0xf8] = a0\n  6099: t0 = 140, jump @791\n      : @165 [@dyn 70] (gas: 1)\n  6105: ra = 142, jump @800\n      : @166 [@dyn 71] (gas: 7)\n  6111: u64 [s1 + 0xd8] = a0\n  6115: u64 [s1 + 0xf0] = a1\n  6119: a0 = u64 [s1 + 0xc8]\n  6123: i32 a2 = a0 << 0x3\n  6126: a0 = 0xffffffffffffffff\n  6129: a1 = 0xffffffffffffffff\n  6132: ra = 144, jump @795\n      : @167 [@dyn 72] (gas: 10)\n  6138: u64 [s1 + 0xe8] = a0\n  6142: u64 [s1 + 0xe0] = a1\n  6146: a1 = u64 [s1 + 0xd8]\n  6150: a0 = a0 | a1\n  6153: u64 [s1 + 0xd8] = a0\n  6157: a0 = u64 [s1 + 0x138]\n  6161: i32 a2 = a0 + 0xffffffffffffff80\n  6164: a0 = 0xffffffffffffffff\n  6167: a1 = 0xffffffffffffffff\n  6170: ra = 146, jump @795\n      : @168 [@dyn 73] (gas: 7)\n  6176: a4 = u64 [s1 + 0x138]\n  6180: a2 = a4 <u 0x80\n  6184: a3 = u64 [s1 + 0xd8]\n  6188: a0 = a3 if a2 != 0\n  6191: a5 = u64 [s1 + 0xe0]\n  6195: a3 = u64 [s1 + 0xf0]\n  6199: t0 = 148, jump @785\n      : @169 [@dyn 74] (gas: 2)\n  6205: a4 = u64 [s1 + 0xe8]\n  6209: t0 = 150, jump @770\n      : @170 [@dyn 75] (gas: 25)\n  6215: a4 = u64 [s1 + 0xf8]\n  6219: a0 = a0 | a4\n  6222: a5 = s1 + 0x100\n  6226: a4 = u64 [a5]\n  6228: a1 = a1 | a4\n  6231: a4 = u64 [a5 + 0x8]\n  6234: a3 = a3 | a4\n  6237: a4 = u64 [a5 + 0x10]\n  6240: a2 = a2 | a4\n  6243: a5 = s1 + 0x7ff\n  6247: a5 = a5 + 0xb9\n  6251: u64 [a5 + 232] = 0x4\n  6256: a4 = a5 + 0x100\n  6260: u64 [a4 + 0x18] = a2\n  6263: u64 [a4 + 0x20] = a3\n  6266: u64 [a4 + 0x10] = a1\n  6269: u64 [a4 + 0x8] = a0\n  6272: u64 [a5 + 256] = 0\n  6276: u64 [a5 + 248] = 0\n  6280: u64 [a5 + 240] = 0\n  6284: a0 = s1 + 0x7ff\n  6288: a0 = a0 + 0x1a1\n  6292: a1 = s1 + 0x7ff\n  6296: a1 = a1 + 0x1c1\n  6300: ra = 152, jump @22\n      : @171 [@dyn 76] (gas: 6)\n  6306: a0 = 0x30110\n  6311: u64 [s1 + 0x138] = a0\n  6315: i32 a0 = a0 + 0\n  6317: u64 [s1 + 0x130] = a0\n  6321: ecalli 3 // 'caller'\n  6323: fallthrough\n      : @172 (gas: 7)\n  6324: a2 = u64 [s1 + 0x138]\n  6328: a0 = u32 [a2 + 0x10]\n  6331: a1 = u64 [a2]\n  6333: a2 = u64 [a2 + 0x8]\n  6336: a0 = a0 | a1\n  6339: a0 = a0 | a2\n  6342: jump @232 if a0 == 0\n      : @173 (gas: 10)\n  6346: a1 = s1 + 0x7ff\n  6350: a1 = a1 + 0xb9\n  6354: u64 [a1 + 320] = 0\n  6358: u64 [a1 + 312] = 0\n  6362: u64 [a1 + 304] = 0\n  6366: u64 [a1 + 296] = 0x5\n  6371: a0 = s1 + 0x4a0\n  6375: a1 = s1 + 0x7ff\n  6379: a1 = a1 + 0x1e1\n  6383: ra = 154, jump @21\n      : @174 [@dyn 77] (gas: 14)\n  6389: a0 = u64 [s1 + 0x4a0]\n  6393: u64 [s1 + 0x120] = a0\n  6397: a0 = u64 [s1 + 0x4a8]\n  6401: u64 [s1 + 0x118] = a0\n  6405: a0 = u64 [s1 + 0x4b8]\n  6409: u64 [s1 + 0x110] = a0\n  6413: a0 = u64 [s1 + 0x4b0]\n  6417: u64 [s1 + 0x128] = a0\n  6421: a0 = u64 [s1 + 0x130]\n  6425: ra = 0x9c\n  6429: ecalli 3 // 'caller'\n  6431: a2 = u64 [s1 + 0x138]\n  6435: t0 = 0x9e\n  6439: jump @772\n      : @175 [@dyn 78] (gas: 2)\n  6442: a2 = u64 [s1 + 0x138]\n  6446: t0 = 158, jump @772\n      : @176 [@dyn 79] (gas: 21)\n  6452: a3 = u64 [s1 + 0x128]\n  6456: a3 = a3 >> 0x20\n  6459: a3 = a3 << 0x20\n  6462: a2 = a2 | a3\n  6465: a3 = s1 + 0x7ff\n  6469: a3 = a3 + 0xb9\n  6473: u64 [a3 + 352] = 0\n  6477: u64 [a3 + 344] = 0\n  6481: u64 [a3 + 336] = 0\n  6485: a5 = a3 + 0x100\n  6489: u64 [a5 + 72] = 0x5\n  6493: a4 = u64 [s1 + 0x110]\n  6497: u64 [a5 + 0x80] = a4\n  6501: u64 [a5 + 0x78] = a2\n  6504: u64 [a5 + 0x70] = a0\n  6507: u64 [a5 + 0x68] = a1\n  6510: a0 = s1 + 0x7ff\n  6514: a0 = a0 + 0x201\n  6518: a1 = s1 + 0x7ff\n  6522: a1 = a1 + 0x221\n  6526: ra = 160, jump @22\n      : @177 [@dyn 80] (gas: 6)\n  6532: a0 = u64 [s1 + 0x130]\n  6536: ra = 0xa2\n  6540: ecalli 3 // 'caller'\n  6542: a2 = u64 [s1 + 0x138]\n  6546: t0 = 0xa4\n  6550: jump @773\n      : @178 [@dyn 81] (gas: 2)\n  6553: a2 = u64 [s1 + 0x138]\n  6557: t0 = 164, jump @773\n      : @179 [@dyn 82] (gas: 33)\n  6563: t0 = a1 | a0\n  6566: a3 = a3 >> 0x20\n  6569: a2 = reverse a2\n  6571: a1 = a2 << 0x20\n  6574: a1 = a1 | a3\n  6577: a2 = a2 >> 0x20\n  6580: a3 = u64 [s1 + 0x128]\n  6584: a3 = a3 << 0x20\n  6587: a3 = a3 >> 0x20\n  6590: u64 [s1 + 1112] = 0\n  6594: u64 [s1 + 1144] = 0\n  6598: u64 [s1 + 0x470] = a3\n  6602: a0 = u64 [s1 + 0x118]\n  6606: u64 [s1 + 0x468] = a0\n  6610: a0 = u64 [s1 + 0x120]\n  6614: u64 [s1 + 0x460] = a0\n  6618: a3 = u64 [0x20000]\n  6623: a4 = u64 [0x20008]\n  6628: a5 = u64 [0x20010]\n  6633: a0 = u64 [0x20018]\n  6638: u64 [s1 + 0x498] = a3\n  6642: u64 [s1 + 0x490] = a4\n  6646: u64 [s1 + 0x488] = a5\n  6650: u64 [s1 + 0x480] = a0\n  6654: u64 [s1 + 0x450] = a2\n  6658: u64 [s1 + 0x448] = a1\n  6662: a2 = s1 + 0x480\n  6666: a3 = s1 + 0x460\n  6670: a4 = s1 + 0x440\n  6674: u64 [s1 + 0x440] = t0\n  6678: a0 = 0\n  6680: a1 = 0\n  6682: ra = 166, jump @23\n      : @180 [@dyn 83] (gas: 11)\n  6688: a0 = s1 + 0x7ff\n  6692: a0 = a0 + 0xb9\n  6696: u64 [a0 + 416] = 0\n  6700: u64 [a0 + 408] = 0\n  6704: u64 [a0 + 400] = 0\n  6708: a1 = a0\n  6710: u64 [a1 + 392] = 0x2\n  6715: a0 = s1 + 0x420\n  6719: a1 = s1 + 0x7ff\n  6723: a1 = a1 + 0x241\n  6727: ra = 168, jump @21\n      : @181 [@dyn 84] (gas: 43)\n  6733: t2 = u64 [s1 + 0x438]\n  6737: t1 = u64 [s1 + 0x430]\n  6741: ra = u64 [s1 + 0x420]\n  6745: u64 [s1 + 0x128] = ra\n  6749: a5 = u64 [s1 + 0x428]\n  6753: a1 = sp + 0xffffffffffffffe0\n  6756: a1 = a1 & 0xffffffffffffffe0\n  6759: sp = a1\n  6761: a2 = u64 [s1 + 0x78]\n  6764: a4 = a2 + a5\n  6767: a0 = u64 [s1 + 0x70]\n  6770: ra = ra + a0\n  6773: a0 = ra <u a0\n  6776: a4 = a4 + a0\n  6779: a3 = a4 ^ a2\n  6782: a2 = a4 <u a2\n  6785: a2 = a0 if a3 == 0\n  6788: t0 = u64 [s1 + 0x80]\n  6792: a0 = t0 + t1\n  6795: a3 = u64 [s1 + 0x88]\n  6799: a3 = a3 + t2\n  6802: t0 = a0 <u t0\n  6805: a3 = a3 + t0\n  6808: a2 = a2 + a0\n  6811: a0 = a2 <u a0\n  6814: t0 = a3 + a0\n  6817: a0 = a5 ^ a4\n  6820: a5 = a4 <u a5\n  6823: a3 = u64 [s1 + 0x128]\n  6827: a3 = ra <u a3\n  6830: a3 = a5 if a0 != 0\n  6833: a0 = a2 <u t1\n  6836: a5 = t2 ^ t0\n  6839: t2 = t0 <u t2\n  6842: t2 = a0 if a5 == 0\n  6845: a0 = t1 ^ a2\n  6848: a0 = a0 | a5\n  6851: a3 = t2 if a0 != 0\n  6854: u64 [a1 + 0x10] = a2\n  6857: u64 [a1 + 0x8] = a4\n  6860: u64 [a1] = ra\n  6862: u64 [a1 + 0x18] = t0\n  6865: jump @238 if a3 != 0\n      : @182 (gas: 9)\n  6869: a0 = s1 + 0x7ff\n  6873: a0 = a0 + 0xb9\n  6877: u64 [a0 + 448] = 0\n  6881: u64 [a0 + 440] = 0\n  6885: u64 [a0 + 432] = 0\n  6889: u64 [a0 + 424] = 0x2\n  6894: a0 = s1 + 0x7ff\n  6898: a0 = a0 + 0x261\n  6902: ra = 170, jump @22\n      : @183 [@dyn 85] (gas: 6)\n  6908: a0 = u64 [s1 + 0x130]\n  6912: ra = 0xac\n  6916: ecalli 3 // 'caller'\n  6918: a2 = u64 [s1 + 0x138]\n  6922: t0 = 0xae\n  6926: jump @766\n      : @184 [@dyn 86] (gas: 2)\n  6929: a2 = u64 [s1 + 0x138]\n  6933: t0 = 174, jump @766\n      : @185 [@dyn 87] (gas: 8)\n  6939: u64 [s1 + 1048] = 0\n  6943: a2 = s1 + 0x400\n  6947: u64 [a2 + 0x10] = a1\n  6950: u64 [a2 + 0x8] = a0\n  6953: a1 = s1 + 0x400\n  6957: u64 [a2] = a3\n  6959: a0 = 0\n  6961: ra = 176, jump @19\n      : @186 [@dyn 88] (gas: 7)\n  6967: u64 [s1 + 1016] = 0\n  6971: u64 [s1 + 1008] = 0\n  6975: u64 [s1 + 1000] = 0\n  6979: a0 = 0x20\n  6982: a1 = s1 + 0x3e0\n  6986: u64 [s1 + 992] = 0\n  6990: ra = 178, jump @19\n      : @187 [@dyn 89] (gas: 6)\n  6996: a0 = sp + 0xffffffffffffffe0\n  6999: a0 = a0 & 0xffffffffffffffe0\n  7002: u64 [s1 + 0x128] = a0\n  7006: sp = a0\n  7008: a1 = i32 [0x20104]\n  7013: jump @189 if a1 >u 63\n      : @188 (gas: 2)\n  7017: u32 [0x20104] = 0x40\n  7023: fallthrough\n      : @189 (gas: 13)\n  7024: a0 = sp + 0xffffffffffffffe0\n  7027: a2 = a0 & 0xffffffffffffffe0\n  7030: u64 [s1 + 0x120] = a2\n  7034: sp = a2\n  7036: a0 = 0x20110\n  7041: i32 a0 = a0 + 0\n  7043: i32 a2 = a2 + 0\n  7045: a1 = 0x40\n  7048: ra = 0xb4\n  7052: ecalli 6 // 'hash_keccak_256'\n  7054: a3 = u64 [s1 + 0x120]\n  7058: t0 = 0xb6\n  7062: jump @768\n      : @190 [@dyn 90] (gas: 2)\n  7065: a3 = u64 [s1 + 0x120]\n  7069: t0 = 182, jump @768\n      : @191 [@dyn 91] (gas: 7)\n  7075: a1 = u64 [s1 + 0x128]\n  7079: u64 [a1 + 0x18] = a3\n  7082: u64 [a1 + 0x10] = a2\n  7085: u64 [a1 + 0x8] = a4\n  7088: u64 [a1] = a0\n  7090: a0 = s1 + 0x3c0\n  7094: ra = 184, jump @21\n      : @192 [@dyn 92] (gas: 33)\n  7100: a0 = u64 [s1 + 0x3c8]\n  7104: a1 = u64 [s1 + 0x3c0]\n  7108: t0 = u64 [s1 + 0x3d8]\n  7112: a3 = u64 [s1 + 0x3d0]\n  7116: a4 = u64 [s1 + 0x78]\n  7119: a4 = a4 + a0\n  7122: a5 = u64 [s1 + 0x70]\n  7125: a5 = a5 + a1\n  7128: a1 = a5 <u a1\n  7131: a4 = a4 + a1\n  7134: a2 = a4 ^ a0\n  7137: a0 = a4 <u a0\n  7140: a0 = a1 if a2 == 0\n  7143: a1 = u64 [s1 + 0x80]\n  7147: a1 = a1 + a3\n  7150: a2 = u64 [s1 + 0x88]\n  7154: t0 = t0 + a2\n  7157: a2 = a1 <u a3\n  7160: a2 = a2 + t0\n  7163: a0 = a0 + a1\n  7166: a1 = a0 <u a1\n  7169: a1 = a1 + a2\n  7172: a2 = s1 + 0x7ff\n  7176: a2 = a2 + 0xb9\n  7180: a3 = a2 + 0x100\n  7184: u64 [a3 + 0xc8] = a5\n  7188: u64 [a3 + 0xd0] = a4\n  7192: u64 [a3 + 0xd8] = a0\n  7196: u64 [a3 + 0xe0] = a1\n  7200: a1 = s1 + 0x7ff\n  7204: a1 = a1 + 0x281\n  7208: a0 = u64 [s1 + 0x128]\n  7212: ra = 186, jump @22\n      : @193 [@dyn 93] (gas: 3)\n  7218: a0 = s1 + 0x3a0\n  7222: a1 = 0x40\n  7225: ra = 188, jump @17\n      : @194 [@dyn 94] (gas: 6)\n  7231: a4 = s1 + 0x300\n  7235: a3 = u64 [a4 + 0xb8]\n  7239: a1 = u64 [a4 + 0xb0]\n  7243: a2 = u64 [a4 + 0xa8]\n  7247: a0 = u64 [a4 + 0xa0]\n  7251: t0 = 190, jump @769\n      : @195 [@dyn 95] (gas: 1)\n  7257: jump @203 if a1 != 0\n      : @196 (gas: 11)\n  7261: a1 = u64 [s1 + 0x70]\n  7264: u64 [s1 + 0x380] = a1\n  7268: a1 = u64 [s1 + 0x78]\n  7271: u64 [s1 + 0x388] = a1\n  7275: a1 = u64 [s1 + 0x80]\n  7279: u64 [s1 + 0x390] = a1\n  7283: a1 = s1 + 0x380\n  7287: a2 = u64 [s1 + 0x88]\n  7291: u64 [s1 + 0x398] = a2\n  7295: u64 [s1 + 0x128] = a0\n  7299: ra = 192, jump @19\n      : @197 [@dyn 96] (gas: 6)\n  7305: a0 = u64 [s1 + 0x130]\n  7309: ra = 0xc2\n  7313: ecalli 3 // 'caller'\n  7315: a2 = u64 [s1 + 0x138]\n  7319: t0 = 0xc4\n  7323: jump @773\n      : @198 [@dyn 97] (gas: 2)\n  7326: a2 = u64 [s1 + 0x138]\n  7330: t0 = 196, jump @773\n      : @199 [@dyn 98] (gas: 28)\n  7336: t0 = a1 | a0\n  7339: a3 = a3 >> 0x20\n  7342: a2 = reverse a2\n  7344: a1 = a2 << 0x20\n  7347: a1 = a1 | a3\n  7350: a2 = a2 >> 0x20\n  7353: u64 [s1 + 824] = 0\n  7357: u64 [s1 + 856] = 0\n  7361: u64 [s1 + 848] = 0\n  7365: u64 [s1 + 840] = 0\n  7369: u64 [s1 + 832] = 0\n  7373: a3 = u64 [0x20020]\n  7378: a4 = u64 [0x20028]\n  7383: a5 = u64 [0x20030]\n  7388: a0 = u64 [0x20038]\n  7393: u64 [s1 + 0x378] = a3\n  7397: u64 [s1 + 0x370] = a4\n  7401: u64 [s1 + 0x368] = a5\n  7405: u64 [s1 + 0x360] = a0\n  7409: u64 [s1 + 0x330] = a2\n  7413: u64 [s1 + 0x328] = a1\n  7417: a1 = 0x20\n  7420: a2 = s1 + 0x360\n  7424: a3 = s1 + 0x340\n  7428: a4 = s1 + 0x320\n  7432: u64 [s1 + 0x320] = t0\n  7436: a0 = u64 [s1 + 0x128]\n  7440: ra = 198, jump @23\n      : @200 [@dyn 99] (gas: 3)\n  7446: a0 = s1 + 0x300\n  7450: a1 = 0x40\n  7453: ra = 200, jump @17\n      : @201 [@dyn 100] (gas: 6)\n  7459: a4 = s1 + 0x300\n  7463: a3 = u64 [a4 + 0x18]\n  7466: a1 = u64 [a4 + 0x10]\n  7469: a2 = u64 [a4 + 0x8]\n  7472: a0 = u64 [a4]\n  7474: t0 = 202, jump @769\n      : @202 [@dyn 101] (gas: 1)\n  7480: jump @245 if a1 == 0\n      : @203 (gas: 1)\n  7484: trap\n      : @204 (gas: 6)\n  7485: a1 = 0x20110\n  7490: i32 a1 = a1 + 0\n  7492: a0 = 0x1\n  7495: a2 = 0\n  7497: ecalli 7 // 'seal_return'\n  7499: jump @208\n      : @205 (gas: 6)\n  7501: a1 = 0x20110\n  7506: i32 a1 = a1 + 0\n  7508: a0 = 0x1\n  7511: a2 = 0\n  7513: ecalli 7 // 'seal_return'\n  7515: jump @208\n      : @206 (gas: 6)\n  7517: a1 = 0x20110\n  7522: i32 a1 = a1 + 0\n  7524: a0 = 0x1\n  7527: a2 = 0\n  7529: ecalli 7 // 'seal_return'\n  7531: jump @208\n      : @207 (gas: 6)\n  7533: a1 = 0x20110\n  7538: i32 a1 = a1 + 0\n  7540: a0 = 0x1\n  7543: a2 = 0\n  7545: ecalli 7 // 'seal_return'\n  7547: fallthrough\n      : @208 (gas: 6)\n  7548: u64 [s1 + 368] = 0\n  7552: u64 [s1 + 360] = 0\n  7556: u64 [s1 + 352] = 0\n  7560: t0 = 0xcc\n  7564: a0 = 0x4e487b7100000000\n  7574: fallthrough\n      : @209 [@dyn 102] (gas: 4)\n  7575: a1 = s1 + 0x160\n  7579: u64 [s1 + 0x178] = a0\n  7583: a0 = 0\n  7585: ra = 206, jump @19\n      : @210 [@dyn 103] (gas: 7)\n  7591: u64 [s1 + 344] = 0\n  7595: u64 [s1 + 336] = 0\n  7599: u64 [s1 + 320] = 0x41\n  7604: a0 = 0x4\n  7607: a1 = s1 + 0x140\n  7611: u64 [s1 + 328] = 0\n  7615: ra = 208, jump @19\n      : @211 [@dyn 104] (gas: 2)\n  7621: a1 = i32 [0x20104]\n  7626: jump @213 if a1 >u 63\n      : @212 (gas: 3)\n  7630: u32 [0x20104] = 0x40\n  7636: a1 = 0x20110\n  7641: jump @244\n      : @213 (gas: 2)\n  7644: a1 = 0x20110\n  7649: jump @244\n      : @214 (gas: 6)\n  7652: u64 [s1 + 432] = 0\n  7656: u64 [s1 + 424] = 0\n  7660: u64 [s1 + 416] = 0\n  7664: t0 = 0xd2\n  7668: a0 = 0x4e487b7100000000\n  7678: fallthrough\n      : @215 [@dyn 105] (gas: 4)\n  7679: a1 = s1 + 0x1a0\n  7683: u64 [s1 + 0x1b8] = a0\n  7687: a0 = 0\n  7689: ra = 212, jump @19\n      : @216 [@dyn 106] (gas: 7)\n  7695: u64 [s1 + 408] = 0\n  7699: u64 [s1 + 400] = 0\n  7703: u64 [s1 + 384] = 0x22\n  7708: a0 = 0x4\n  7711: a1 = s1 + 0x180\n  7715: u64 [s1 + 392] = 0\n  7719: ra = 214, jump @19\n      : @217 [@dyn 107] (gas: 2)\n  7725: a1 = i32 [0x20104]\n  7730: jump @219 if a1 >u 63\n      : @218 (gas: 3)\n  7734: u32 [0x20104] = 0x40\n  7740: a1 = 0x20110\n  7745: jump @244\n      : @219 (gas: 2)\n  7748: a1 = 0x20110\n  7753: jump @244\n      : @220 (gas: 6)\n  7756: u64 [s1 + 528] = 0\n  7760: u64 [s1 + 520] = 0\n  7764: u64 [s1 + 512] = 0\n  7768: t0 = 0xd8\n  7772: a0 = 0x4e487b7100000000\n  7782: fallthrough\n      : @221 [@dyn 108] (gas: 4)\n  7783: a1 = s1 + 0x200\n  7787: u64 [s1 + 0x218] = a0\n  7791: a0 = 0\n  7793: ra = 218, jump @19\n      : @222 [@dyn 109] (gas: 7)\n  7799: u64 [s1 + 504] = 0\n  7803: u64 [s1 + 496] = 0\n  7807: u64 [s1 + 480] = 0x41\n  7812: a0 = 0x4\n  7815: a1 = s1 + 0x1e0\n  7819: u64 [s1 + 488] = 0\n  7823: ra = 220, jump @19\n      : @223 [@dyn 110] (gas: 2)\n  7829: a1 = i32 [0x20104]\n  7834: jump @225 if a1 >u 63\n      : @224 (gas: 3)\n  7838: u32 [0x20104] = 0x40\n  7844: a1 = 0x20110\n  7849: jump @244\n      : @225 (gas: 2)\n  7852: a1 = 0x20110\n  7857: jump @244\n      : @226 (gas: 6)\n  7860: u64 [s1 + 592] = 0\n  7864: u64 [s1 + 584] = 0\n  7868: u64 [s1 + 576] = 0\n  7872: t0 = 0xde\n  7876: a0 = 0x4e487b7100000000\n  7886: fallthrough\n      : @227 [@dyn 111] (gas: 4)\n  7887: a1 = s1 + 0x240\n  7891: u64 [s1 + 0x258] = a0\n  7895: a0 = 0\n  7897: ra = 224, jump @19\n      : @228 [@dyn 112] (gas: 7)\n  7903: u64 [s1 + 568] = 0\n  7907: u64 [s1 + 560] = 0\n  7911: u64 [s1 + 544] = 0x22\n  7916: a0 = 0x4\n  7919: a1 = s1 + 0x220\n  7923: u64 [s1 + 552] = 0\n  7927: ra = 226, jump @19\n      : @229 [@dyn 113] (gas: 2)\n  7933: a1 = i32 [0x20104]\n  7938: jump @231 if a1 >u 63\n      : @230 (gas: 3)\n  7942: u32 [0x20104] = 0x40\n  7948: a1 = 0x20110\n  7953: jump @244\n      : @231 (gas: 2)\n  7956: a1 = 0x20110\n  7961: jump @244\n      : @232 (gas: 8)\n  7964: u64 [s1 + 688] = 0\n  7968: u64 [s1 + 680] = 0\n  7972: u64 [s1 + 672] = 0\n  7976: a0 = 0x1e4fbdf700000000\n  7986: a1 = s1 + 0x2a0\n  7990: u64 [s1 + 0x2b8] = a0\n  7994: a0 = 0\n  7996: ra = 228, jump @19\n      : @233 [@dyn 114] (gas: 1)\n  8002: t0 = 230, jump @784\n      : @234 [@dyn 115] (gas: 1)\n  8008: ra = 232, jump @19\n      : @235 [@dyn 116] (gas: 2)\n  8014: a1 = i32 [0x20104]\n  8019: jump @237 if a1 >u 63\n      : @236 (gas: 3)\n  8023: u32 [0x20104] = 0x40\n  8029: a1 = 0x20110\n  8034: jump @244\n      : @237 (gas: 2)\n  8036: a1 = 0x20110\n  8041: jump @244\n      : @238 (gas: 6)\n  8043: u64 [s1 + 752] = 0\n  8047: u64 [s1 + 744] = 0\n  8051: u64 [s1 + 736] = 0\n  8055: t0 = 0xea\n  8059: a0 = 0x4e487b7100000000\n  8069: fallthrough\n      : @239 [@dyn 117] (gas: 4)\n  8070: a1 = s1 + 0x2e0\n  8074: u64 [s1 + 0x2f8] = a0\n  8078: a0 = 0\n  8080: ra = 236, jump @19\n      : @240 [@dyn 118] (gas: 7)\n  8086: u64 [s1 + 728] = 0\n  8090: u64 [s1 + 720] = 0\n  8094: u64 [s1 + 704] = 0x11\n  8099: a0 = 0x4\n  8102: a1 = s1 + 0x2c0\n  8106: u64 [s1 + 712] = 0\n  8110: ra = 238, jump @19\n      : @241 [@dyn 119] (gas: 2)\n  8116: a1 = i32 [0x20104]\n  8121: jump @243 if a1 >u 63\n      : @242 (gas: 3)\n  8125: u32 [0x20104] = 0x40\n  8131: a1 = 0x20110\n  8136: jump @244\n      : @243 (gas: 2)\n  8138: a1 = 0x20110\n  8143: fallthrough\n      : @244 (gas: 7)\n  8144: i32 a1 = a1 + 0\n  8146: a0 = 0x1\n  8149: a2 = 0x24\n  8152: ecalli 7 // 'seal_return'\n  8154: u64 [s1 + 0x138] = a0\n  8158: ra = 0xf0\n  8162: jump @26\n      : @245 (gas: 2)\n  8165: u64 [s1 + 0x138] = a0\n  8169: ra = 240, jump @26\n      : @246 [@dyn 120] (gas: 5)\n  8175: i32 a0 = a0 + 0\n  8177: a1 = 0\n  8179: a2 = 0\n  8181: ecalli 0 // 'call_data_copy'\n  8182: jump @15\n      : @247 (gas: 3)\n  8185: a0 = u64 [s1 + 0x138]\n  8189: a1 = 0\n  8191: ra = 242, jump @26\n      : @248 [@dyn 121] (gas: 5)\n  8197: i32 a1 = a0 + 0\n  8199: a0 = 0\n  8201: a2 = 0\n  8203: ecalli 7 // 'seal_return'\n  8205: jump @208\n      : @249 [@dyn 122] (gas: 13)\n  8208: sp = sp + 0xfffffffffffff800\n  8212: sp = sp + 0xfffffffffffffb78\n  8216: sp = sp & 0xffffffffffffffe0\n  8219: s1 = sp\n  8221: a2 = s1 + 0x7ff\n  8225: a2 = a2 + 0x79\n  8228: u64 [a2 + 1984] = 0\n  8232: u64 [a2 + 1976] = 0\n  8236: u64 [a2 + 1960] = 0x80\n  8242: a0 = 0x40\n  8245: a1 = s1 + 0x1020\n  8249: u64 [a2 + 1968] = 0\n  8253: ra = 246, jump @19\n      : @250 [@dyn 123] (gas: 4)\n  8259: a0 = 0x20100\n  8264: u64 [s1 + 0xf8] = a0\n  8268: a0 = i32 [0x20100]\n  8273: jump @252 if a0 >=u 4\n      : @251 (gas: 1)\n  8277: jump @615\n      : @252 (gas: 6)\n  8280: a0 = s1 + 0x1000\n  8284: i32 a0 = a0 + 0x40\n  8287: a1 = 0\n  8289: ra = 0xf8\n  8293: ecalli 1 // 'call_data_load'\n  8295: fallthrough\n      : @253 [@dyn 124] (gas: 4)\n  8296: a0 = s1 + 0x7ff\n  8300: a0 = a0 + 0x79\n  8303: a0 = i32 [a0 + 0x7e4]\n  8307: jump @255 if a0 != 2376452955\n      : @254 (gas: 1)\n  8314: jump @477\n      : @255 (gas: 1)\n  8317: jump @307 if a0 == 2514000705\n      : @256 (gas: 2)\n  8325: a2 = s1 + 0x1078\n  8329: jump @258 if a0 != 2835717307\n      : @257 (gas: 1)\n  8336: jump @486\n      : @258 (gas: 1)\n  8339: jump @397 if a0 == 3714247998\n      : @259 (gas: 1)\n  8347: jump @261 if a0 != 117300739\n      : @260 (gas: 1)\n  8354: jump @468\n      : @261 (gas: 1)\n  8357: jump @263 if a0 != 157198259\n      : @262 (gas: 1)\n  8364: jump @438\n      : @263 (gas: 1)\n  8367: jump @297 if a0 == 404098525\n      : @264 (gas: 1)\n  8375: jump @349 if a0 == 599290589\n      : @265 (gas: 1)\n  8383: jump @337 if a0 == 826074471\n      : @266 (gas: 1)\n  8391: jump @268 if a0 == 1086394137\n      : @267 (gas: 1)\n  8398: jump @421\n      : @268 (gas: 10)\n  8401: u64 [a2 + 320] = 0\n  8405: u64 [a2 + 312] = 0\n  8409: u64 [a2 + 304] = 0\n  8413: u64 [a2 + 296] = 0\n  8417: a0 = s1 + 0x1000\n  8421: i32 a0 = a0 + 0x1a0\n  8425: ra = 0xfa\n  8429: ecalli 10 // 'value_transferred'\n  8431: t0 = 0xfc\n  8435: jump @792\n      : @269 [@dyn 125] (gas: 1)\n  8438: t0 = 252, jump @792\n      : @270 [@dyn 126] (gas: 8)\n  8444: a0 = u64 [a4 + 0x38]\n  8447: a1 = u64 [a4 + 0x40]\n  8450: a2 = u64 [a4 + 0x30]\n  8453: a3 = u64 [a4 + 0x28]\n  8456: a1 = a1 | a2\n  8459: a0 = a0 | a3\n  8462: a0 = a0 | a1\n  8465: jump @272 if a0 == 0\n      : @271 (gas: 1)\n  8468: jump @522\n      : @272 (gas: 4)\n  8471: a0 = u64 [s1 + 0xf8]\n  8475: a0 = i32 [a0]\n  8477: a1 = 0x43\n  8480: jump @274 if a1 <u a0\n      : @273 (gas: 1)\n  8483: jump @523\n      : @274 (gas: 5)\n  8486: a0 = s1 + 0x7ff\n  8490: a0 = a0 + 0x1c1\n  8494: ra = 0xfe\n  8498: t0 = 0x276\n  8502: jump @788\n      : @275 [@dyn 127] (gas: 23)\n  8505: a0 = s1 + 0x7ff\n  8509: a0 = a0 + 0x79\n  8512: a1 = u64 [a0 + 0x150]\n  8516: u64 [s1 + 0xf0] = a1\n  8520: a1 = u64 [a0 + 0x148]\n  8524: u64 [s1 + 0xf8] = a1\n  8528: a0 = u32 [a0 + 0x158]\n  8532: u64 [s1 + 0xe8] = a0\n  8536: a0 = s1 + 0x1000\n  8540: i32 a0 = a0 + 0x1c0\n  8544: a1 = 0x24\n  8547: ecalli 1 // 'call_data_load'\n  8549: a0 = s1 + 0x1078\n  8553: a2 = a0 + 0x100\n  8557: a1 = u64 [a2 + 0x60]\n  8560: u64 [s1 + 0xe0] = a1\n  8564: a1 = u64 [a2 + 0x58]\n  8567: u64 [s1 + 0xd8] = a1\n  8571: a1 = u64 [a2 + 0x50]\n  8574: u64 [s1 + 0xd0] = a1\n  8578: a0 = u64 [a2 + 0x48]\n  8581: u64 [s1 + 0xc8] = a0\n  8585: ra = 256, jump @755\n      : @276 [@dyn 128] (gas: 6)\n  8591: a0 = u64 [s1 + 0xf8]\n  8595: a1 = u64 [s1 + 0xe8]\n  8599: a0 = a0 | a1\n  8602: a1 = u64 [s1 + 0xf0]\n  8606: a0 = a0 | a1\n  8609: jump @278 if a0 != 0\n      : @277 (gas: 1)\n  8612: jump @524\n      : @278 (gas: 9)\n  8615: a0 = s1 + 0x1078\n  8619: u64 [a0 + 384] = 0\n  8623: u64 [a0 + 376] = 0\n  8627: u64 [a0 + 368] = 0\n  8631: u64 [a0 + 360] = 0x2\n  8636: a0 = s1 + 0x7ff\n  8640: a0 = a0 + 0x1a1\n  8644: a1 = s1 + 0x11e0\n  8648: ra = 258, jump @21\n      : @279 [@dyn 129] (gas: 40)\n  8654: a1 = s1 + 0x7ff\n  8658: a1 = a1 + 0x79\n  8661: t2 = u64 [a1 + 0x140]\n  8665: a2 = a1 + 0x100\n  8669: a0 = u64 [a2 + 0x38]\n  8672: a4 = u64 [a2 + 0x28]\n  8675: a5 = u64 [a2 + 0x30]\n  8678: a1 = sp + 0xffffffffffffffe0\n  8681: a1 = a1 & 0xffffffffffffffe0\n  8684: sp = a1\n  8686: a3 = u64 [s1 + 0xd0]\n  8690: a3 = a3 + a5\n  8693: t0 = u64 [s1 + 0xc8]\n  8697: t0 = t0 + a4\n  8700: a4 = t0 <u a4\n  8703: a3 = a3 + a4\n  8706: t1 = a3 ^ a5\n  8709: a2 = a3 <u a5\n  8712: a2 = a4 if t1 == 0\n  8715: a4 = u64 [s1 + 0xd8]\n  8719: a4 = a4 + a0\n  8722: a5 = a4 + a2\n  8725: t1 = a5 <u a4\n  8728: ra = u64 [s1 + 0xe0]\n  8732: ra = ra + t2\n  8735: a4 = a4 <u a0\n  8738: a4 = a4 + ra\n  8741: ra = a4 + t1\n  8744: t1 = a5 <u a0\n  8747: a4 = t2 ^ ra\n  8750: t2 = ra <u t2\n  8753: t2 = t1 if a4 == 0\n  8756: a0 = a0 ^ a5\n  8759: a0 = a0 | a4\n  8762: t2 = a2 if a0 == 0\n  8765: u64 [a1 + 0x10] = a5\n  8768: u64 [a1 + 0x8] = a3\n  8771: u64 [a1] = t0\n  8773: u64 [a1 + 0x18] = ra\n  8776: jump @281 if t2 == 0\n      : @280 (gas: 1)\n  8779: jump @529\n      : @281 (gas: 7)\n  8782: a0 = s1 + 0x1078\n  8786: u64 [a0 + 416] = 0\n  8790: u64 [a0 + 408] = 0\n  8794: u64 [a0 + 400] = 0\n  8798: u64 [a0 + 392] = 0x2\n  8803: a0 = s1 + 0x1200\n  8807: ra = 260, jump @22\n      : @282 [@dyn 130] (gas: 14)\n  8813: a2 = s1 + 0x7ff\n  8817: a2 = a2 + 0x79\n  8820: u64 [a2 + 288] = 0\n  8824: a0 = u64 [s1 + 0xe8]\n  8828: a3 = a2 + 0x100\n  8832: u64 [a3 + 0x18] = a0\n  8835: a0 = u64 [s1 + 0xf0]\n  8839: u64 [a3 + 0x10] = a0\n  8842: a1 = s1 + 0x7ff\n  8846: a1 = a1 + 0x181\n  8850: a0 = u64 [s1 + 0xf8]\n  8854: u64 [a3 + 0x8] = a0\n  8857: a0 = 0\n  8859: ra = 262, jump @19\n      : @283 [@dyn 131] (gas: 11)\n  8865: a0 = s1 + 0x7ff\n  8869: a0 = a0 + 0x79\n  8872: u64 [a0 + 256] = 0\n  8876: u64 [a0 + 248] = 0\n  8880: u64 [a0 + 240] = 0\n  8884: a2 = a0\n  8886: a0 = 0x20\n  8889: a1 = s1 + 0x7ff\n  8893: a1 = a1 + 0x161\n  8897: u64 [a2 + 232] = 0\n  8901: ra = 264, jump @19\n      : @284 [@dyn 132] (gas: 6)\n  8907: a0 = sp + 0xffffffffffffffe0\n  8910: a0 = a0 & 0xffffffffffffffe0\n  8913: u64 [s1 + 0xc0] = a0\n  8917: sp = a0\n  8919: a1 = i32 [0x20104]\n  8924: jump @286 if a1 >u 63\n      : @285 (gas: 2)\n  8928: u32 [0x20104] = 0x40\n  8934: fallthrough\n      : @286 (gas: 14)\n  8935: a0 = sp + 0xffffffffffffffe0\n  8938: a2 = a0 & 0xffffffffffffffe0\n  8941: u64 [s1 + 0xb8] = a2\n  8945: sp = a2\n  8947: a0 = 0x20110\n  8952: i32 a0 = a0 + 0\n  8954: i32 a2 = a2 + 0\n  8956: a1 = 0x40\n  8959: u64 [s1 + 0xb0] = a0\n  8963: ra = 0x10a\n  8967: ecalli 6 // 'hash_keccak_256'\n  8969: a3 = u64 [s1 + 0xb8]\n  8973: t0 = 0x10c\n  8977: jump @768\n      : @287 [@dyn 133] (gas: 2)\n  8980: a3 = u64 [s1 + 0xb8]\n  8984: t0 = 268, jump @768\n      : @288 [@dyn 134] (gas: 8)\n  8990: a1 = u64 [s1 + 0xc0]\n  8994: u64 [a1 + 0x18] = a3\n  8997: u64 [a1 + 0x10] = a2\n  9000: u64 [a1 + 0x8] = a4\n  9003: u64 [a1] = a0\n  9005: a0 = s1 + 0x7ff\n  9009: a0 = a0 + 0x141\n  9013: ra = 270, jump @21\n      : @289 [@dyn 135] (gas: 33)\n  9019: a2 = s1 + 0x7ff\n  9023: a2 = a2 + 0x79\n  9026: a0 = u64 [a2 + 0xd0]\n  9030: a1 = u64 [a2 + 0xc8]\n  9034: t0 = u64 [a2 + 0xe0]\n  9038: a3 = u64 [a2 + 0xd8]\n  9042: a4 = u64 [s1 + 0xd0]\n  9046: a4 = a4 + a0\n  9049: a5 = u64 [s1 + 0xc8]\n  9053: a5 = a5 + a1\n  9056: a1 = a5 <u a1\n  9059: a4 = a4 + a1\n  9062: a2 = a4 ^ a0\n  9065: a0 = a4 <u a0\n  9068: a0 = a1 if a2 == 0\n  9071: a1 = u64 [s1 + 0xd8]\n  9075: a1 = a1 + a3\n  9078: a2 = u64 [s1 + 0xe0]\n  9082: t0 = t0 + a2\n  9085: a2 = a1 <u a3\n  9088: a2 = a2 + t0\n  9091: a0 = a0 + a1\n  9094: a1 = a0 <u a1\n  9097: a1 = a1 + a2\n  9100: a2 = s1 + 0x1078\n  9104: a3 = a2 + 0x100\n  9108: u64 [a3 + 0xa8] = a5\n  9112: u64 [a3 + 0xb0] = a4\n  9116: u64 [a3 + 0xb8] = a0\n  9120: u64 [a3 + 0xc0] = a1\n  9124: a1 = s1 + 0x1220\n  9128: a0 = u64 [s1 + 0xc0]\n  9132: ra = 272, jump @22\n      : @290 [@dyn 136] (gas: 4)\n  9138: a0 = s1 + 0x7ff\n  9142: a0 = a0 + 0x121\n  9146: a1 = 0x40\n  9149: ra = 274, jump @17\n      : @291 [@dyn 137] (gas: 7)\n  9155: a3 = s1 + 0x7ff\n  9159: a3 = a3 + 0x79\n  9162: a4 = u64 [a3 + 0xc0]\n  9166: a1 = u64 [a3 + 0xb8]\n  9170: a2 = u64 [a3 + 0xb0]\n  9174: a0 = u64 [a3 + 0xa8]\n  9178: t0 = 276, jump @778\n      : @292 [@dyn 138] (gas: 1)\n  9184: jump @294 if a1 == 0\n      : @293 (gas: 1)\n  9187: jump @513\n      : @294 (gas: 12)\n  9190: a1 = u64 [s1 + 0xc8]\n  9194: u64 [a3 + 0x88] = a1\n  9198: a1 = u64 [s1 + 0xd0]\n  9202: u64 [a3 + 0x90] = a1\n  9206: a1 = u64 [s1 + 0xd8]\n  9210: u64 [a3 + 0x98] = a1\n  9214: a1 = s1 + 0x7ff\n  9218: a1 = a1 + 0x101\n  9222: a2 = u64 [s1 + 0xe0]\n  9226: u64 [a3 + 0xa0] = a2\n  9230: u64 [s1 + 0xe0] = a0\n  9234: ra = 278, jump @19\n      : @295 [@dyn 139] (gas: 30)\n  9240: a5 = s1 + 0x7ff\n  9244: a5 = a5 + 0x79\n  9247: u64 [a5 + 64] = 0\n  9250: a0 = u64 [s1 + 0xe8]\n  9254: u64 [a5 + 0x38] = a0\n  9257: a0 = u64 [s1 + 0xf0]\n  9261: u64 [a5 + 0x30] = a0\n  9264: a0 = u64 [s1 + 0xf8]\n  9268: u64 [a5 + 0x28] = a0\n  9271: u64 [a5 + 96] = 0\n  9274: u64 [a5 + 88] = 0\n  9277: u64 [a5 + 80] = 0\n  9280: a0 = u64 [0x20080]\n  9285: a1 = u64 [0x20088]\n  9290: a2 = u64 [0x20090]\n  9295: a3 = u64 [0x20098]\n  9300: u64 [a5 + 0x80] = a0\n  9304: u64 [a5 + 0x78] = a1\n  9307: u64 [a5 + 0x70] = a2\n  9310: u64 [a5 + 0x68] = a3\n  9313: a1 = 0x20\n  9316: a2 = s1 + 0x7ff\n  9320: a2 = a2 + 0xe1\n  9324: a3 = s1 + 0x7ff\n  9328: a3 = a3 + 0xc1\n  9332: a4 = s1 + 0x7ff\n  9336: a4 = a4 + 0xa1\n  9340: u64 [a5 + 72] = 0\n  9343: a0 = u64 [s1 + 0xe0]\n  9347: ra = 280, jump @23\n      : @296 [@dyn 140] (gas: 5)\n  9353: a0 = 0\n  9355: a1 = u64 [s1 + 0xb0]\n  9359: a2 = 0\n  9361: ecalli 7 // 'seal_return'\n  9363: jump @617\n      : @297 (gas: 8)\n  9366: u64 [a2 + 128] = 0\n  9370: u64 [a2 + 120] = 0\n  9373: u64 [a2 + 112] = 0\n  9376: u64 [a2 + 104] = 0\n  9379: a0 = s1 + 0x1000\n  9383: i32 a0 = a0 + 0xe0\n  9387: ecalli 10 // 'value_transferred'\n  9389: fallthrough\n      : @298 (gas: 9)\n  9390: a3 = s1 + 0x1078\n  9394: a0 = u64 [a3 + 0x78]\n  9397: a1 = u64 [a3 + 0x80]\n  9401: a2 = u64 [a3 + 0x70]\n  9404: a3 = u64 [a3 + 0x68]\n  9407: a1 = a1 | a2\n  9410: a0 = a0 | a3\n  9413: a0 = a0 | a1\n  9416: jump @300 if a0 == 0\n      : @299 (gas: 1)\n  9419: jump @535\n      : @300 (gas: 3)\n  9422: a0 = u64 [s1 + 0xf8]\n  9426: a0 = i32 [a0]\n  9428: jump @302 if a0 >u 3\n      : @301 (gas: 1)\n  9432: jump @536\n      : @302 (gas: 8)\n  9435: a1 = s1 + 0x1078\n  9439: u64 [a1 + 160] = 0\n  9443: u64 [a1 + 152] = 0\n  9447: u64 [a1 + 144] = 0\n  9451: u64 [a1 + 136] = 0x2\n  9456: a0 = s1 + 0x4c0\n  9460: a1 = s1 + 0x1100\n  9464: ra = 282, jump @21\n      : @303 [@dyn 141] (gas: 11)\n  9470: a0 = u64 [s1 + 0x4d8]\n  9474: u64 [s1 + 0xf8] = a0\n  9478: a0 = u64 [s1 + 0x4d0]\n  9482: u64 [s1 + 0xf0] = a0\n  9486: a0 = u64 [s1 + 0x4c8]\n  9490: u64 [s1 + 0xe8] = a0\n  9494: a0 = u64 [s1 + 0x4c0]\n  9498: u64 [s1 + 0xe0] = a0\n  9502: a0 = s1 + 0x4a0\n  9506: a1 = 0x40\n  9509: ra = 284, jump @17\n      : @304 [@dyn 142] (gas: 13)\n  9515: a4 = s1 + 0x400\n  9519: a0 = u64 [a4 + 0xb8]\n  9523: a1 = u64 [a4 + 0xb0]\n  9527: a2 = u64 [a4 + 0xa8]\n  9531: a3 = u64 [a4 + 0xa0]\n  9535: a0 = a0 | a2\n  9538: a2 = a3 | a1\n  9541: a2 = a2 | a0\n  9544: a2 = a2 >> 0x20\n  9547: a0 = a0 | a1\n  9550: a0 = a0 << 0x20\n  9553: a0 = a0 | a2\n  9556: jump @306 if a0 == 0\n      : @305 (gas: 1)\n  9559: jump @513\n      : @306 (gas: 14)\n  9562: a0 = u64 [s1 + 0xe0]\n  9566: a2 = s1 + 0x400\n  9570: u64 [a2 + 0x80] = a0\n  9574: a0 = u64 [s1 + 0xe8]\n  9578: u64 [a2 + 0x88] = a0\n  9582: a0 = u64 [s1 + 0xf0]\n  9586: u64 [a2 + 0x90] = a0\n  9590: a1 = s1 + 0x480\n  9594: a0 = u64 [s1 + 0xf8]\n  9598: u64 [a2 + 0x98] = a0\n  9602: a0 = a3\n  9604: u64 [s1 + 0xf8] = a3\n  9608: ra = 0x1d8\n  9612: jump @19\n      : @307 (gas: 11)\n  9615: a0 = s1 + 0x1078\n  9619: u64 [a0 + 736] = 0\n  9623: u64 [a0 + 728] = 0\n  9627: u64 [a0 + 720] = 0\n  9631: u64 [a0 + 712] = 0\n  9635: a0 = s1 + 0x1000\n  9639: i32 a0 = a0 + 0x340\n  9643: ra = 0x11e\n  9647: ecalli 10 // 'value_transferred'\n  9649: t0 = 0x120\n  9653: jump @794\n      : @308 [@dyn 143] (gas: 1)\n  9656: t0 = 288, jump @794\n      : @309 [@dyn 144] (gas: 8)\n  9662: a0 = u64 [a4 + 0xd8]\n  9666: a1 = u64 [a4 + 0xe0]\n  9670: a2 = u64 [a4 + 0xd0]\n  9674: a3 = u64 [a4 + 0xc8]\n  9678: a1 = a1 | a2\n  9681: a0 = a0 | a3\n  9684: a0 = a0 | a1\n  9687: jump @311 if a0 == 0\n      : @310 (gas: 1)\n  9690: jump @537\n      : @311 (gas: 3)\n  9693: a0 = u64 [s1 + 0xf8]\n  9697: a0 = i32 [a0]\n  9699: jump @313 if a0 >u 3\n      : @312 (gas: 1)\n  9703: jump @538\n      : @313 (gas: 4)\n  9706: a0 = s1 + 0x7ff\n  9710: a0 = a0 + 0x541\n  9714: a1 = 0x40\n  9717: ra = 290, jump @17\n      : @314 [@dyn 145] (gas: 20)\n  9723: a1 = s1 + 0x7ff\n  9727: a1 = a1 + 0x79\n  9730: a2 = a1 + 0x400\n  9734: a0 = u64 [a2 + 0xe0]\n  9738: u64 [s1 + 0x58] = a0\n  9741: a0 = u64 [a2 + 0xd8]\n  9745: u64 [s1 + 0x68] = a0\n  9748: a0 = u64 [a2 + 0xd0]\n  9752: u64 [s1 + 0x60] = a0\n  9755: a0 = u64 [a2 + 0xc8]\n  9759: u64 [s1 + 0x70] = a0\n  9762: a1 = s1 + 0x1078\n  9766: u64 [a1 + 768] = 0\n  9770: u64 [a1 + 760] = 0\n  9774: u64 [a1 + 752] = 0\n  9778: u64 [a1 + 744] = 0x4\n  9783: a0 = s1 + 0x7ff\n  9787: a0 = a0 + 0x521\n  9791: a1 = s1 + 0x1360\n  9795: ra = 292, jump @21\n      : @315 [@dyn 146] (gas: 36)\n  9801: a0 = s1 + 0x7ff\n  9805: a0 = a0 + 0x79\n  9808: t2 = u64 [a0 + 0x4b8]\n  9812: ra = u64 [a0 + 0x4b0]\n  9816: t1 = u64 [a0 + 0x4c0]\n  9820: a4 = u64 [a0 + 0x4a8]\n  9824: a0 = t2 << 0x3f\n  9827: a1 = ra >> 0x1\n  9830: a0 = a0 | a1\n  9833: a1 = t1 << 0x3f\n  9836: a2 = t2 >> 0x1\n  9839: a1 = a1 | a2\n  9842: a2 = ra << 0x3f\n  9845: a3 = a4 >> 0x1\n  9848: a5 = a3 | a2\n  9851: a2 = t1 >> 0x1\n  9854: u64 [s1 + 0xf0] = a4\n  9858: a4 = a4 & 0x1\n  9861: a3 = -a4\n  9863: a1 = a1 & a3\n  9866: t0 = a3 & a0\n  9869: a2 = a2 & a3\n  9872: a0 = a5 & 0x7f\n  9875: u64 [s1 + 0xe8] = a0\n  9879: a5 = a0 if a4 == 0\n  9882: u64 [s1 + 0xb0] = a5\n  9886: a0 = a5 <u 0x20\n  9889: u64 [s1 + 0xa0] = t0\n  9893: a0 = 0 if t0 != 0\n  9895: u64 [s1 + 0xa8] = a1\n  9899: u64 [s1 + 0x98] = a2\n  9903: a1 = a1 | a2\n  9906: a0 = 0 if a1 != 0\n  9908: u64 [s1 + 0xf8] = a4\n  9912: a1 = a4 <u 0x1\n  9915: jump @317 if a1 == a0\n      : @316 (gas: 1)\n  9918: jump @539\n      : @317 (gas: 12)\n  9921: a2 = u64 [s1 + 0x68]\n  9924: a3 = u64 [s1 + 0x70]\n  9927: a0 = a3 | a2\n  9930: a1 = u64 [s1 + 0x60]\n  9933: a4 = u64 [s1 + 0x58]\n  9936: a1 = a1 | a4\n  9939: a0 = a0 | a1\n  9942: a0 = a0 >> 0x20\n  9945: a1 = a1 | a2\n  9948: a1 = a1 << 0x20\n  9951: a1 = a1 | a0\n  9954: jump @319 if a1 == 0\n      : @318 (gas: 1)\n  9957: jump @513\n      : @319 (gas: 18)\n  9960: a0 = a3\n  9962: u64 [s1 + 0xd0] = ra\n  9966: u64 [s1 + 0xd8] = t2\n  9970: u64 [s1 + 0xe0] = t1\n  9974: a1 = u64 [s1 + 0xb0]\n  9978: a3 = s1 + 0x7ff\n  9982: a3 = a3 + 0x79\n  9985: a4 = a3 + 0x400\n  9989: u64 [a4 + 0x88] = a1\n  9993: a1 = u64 [s1 + 0xa0]\n  9997: u64 [a4 + 0x90] = a1\n 10001: a1 = u64 [s1 + 0xa8]\n 10005: u64 [a4 + 0x98] = a1\n 10009: a1 = s1 + 0x7ff\n 10013: a1 = a1 + 0x501\n 10017: a2 = u64 [s1 + 0x98]\n 10021: u64 [a4 + 0xa0] = a2\n 10025: ra = 294, jump @19\n      : @320 [@dyn 147] (gas: 2)\n 10031: a0 = u64 [s1 + 0xf8]\n 10035: jump @322 if a0 == 0\n      : @321 (gas: 1)\n 10038: jump @514\n      : @322 (gas: 10)\n 10041: a0 = u64 [s1 + 0x68]\n 10044: a1 = u64 [s1 + 0x58]\n 10047: a0 = a0 | a1\n 10050: a1 = 0xffffffe0\n 10060: a3 = u64 [s1 + 0x70]\n 10063: a1 = a3 <u a1\n 10066: a2 = u64 [s1 + 0x60]\n 10069: a1 = 0 if a2 != 0\n 10071: a1 = 0 if a0 != 0\n 10073: jump @324 if a1 != 0\n      : @323 (gas: 1)\n 10076: jump @513\n      : @324 (gas: 16)\n 10079: a1 = u64 [s1 + 0xf0]\n 10083: a1 = a1 & 0xffffffffffffff00\n 10087: i32 a0 = a3 + 0x20\n 10090: a2 = s1 + 0x7ff\n 10094: a2 = a2 + 0x79\n 10097: a3 = u64 [s1 + 0xd0]\n 10101: a4 = a2 + 0x400\n 10105: u64 [a4 + 0x10] = a3\n 10108: u64 [a4 + 0x8] = a1\n 10111: a1 = u64 [s1 + 0xd8]\n 10115: u64 [a4 + 0x18] = a1\n 10118: a1 = s1 + 0x7ff\n 10122: a1 = a1 + 0x481\n 10126: a3 = u64 [s1 + 0xe0]\n 10130: u64 [a4 + 0x20] = a3\n 10133: ra = 296, jump @19\n      : @325 [@dyn 148] (gas: 8)\n 10139: t2 = 0\n 10141: t1 = 0\n 10143: u64 [s1 + 240] = 0\n 10147: a0 = u64 [s1 + 0xe8]\n 10151: a0 = a0 >u 0\n 10153: a0 = a0 << 0x5\n 10156: u64 [s1 + 0xf8] = a0\n 10160: fallthrough\n      : @326 (gas: 37)\n 10161: a1 = u64 [s1 + 0xf8]\n 10165: a0 = a1 + 0x3f\n 10168: a1 = a0 <u a1\n 10171: a2 = t2 + a1\n 10174: a0 = a0 & 0xffffffffffffffe0\n 10177: ra = u64 [s1 + 0x70]\n 10180: ra = ra + a0\n 10183: u64 [s1 + 0xf8] = ra\n 10187: a0 = ra <u a0\n 10190: t0 = u64 [s1 + 0x60]\n 10193: a3 = a2 + t0\n 10196: ra = a3 + a0\n 10199: a3 = ra ^ a2\n 10202: a4 = ra <u a2\n 10205: a4 = a0 if a3 == 0\n 10208: a0 = a2 <u t2\n 10211: a0 = a1 if a1 == 0\n 10214: a0 = a0 + t1\n 10217: a1 = a0 <u t1\n 10220: a2 = u64 [s1 + 0x68]\n 10223: a2 = a2 + a0\n 10226: a4 = a4 + a2\n 10229: a0 = a2 <u a0\n 10232: a2 = a4 <u a2\n 10235: t1 = u64 [s1 + 0x58]\n 10238: a3 = u64 [s1 + 0xf0]\n 10242: a3 = a3 + t1\n 10245: a1 = a1 + a3\n 10248: a0 = a0 + a1\n 10251: a5 = a0 + a2\n 10254: a0 = a5 >u 0\n 10256: a1 = a4 >u 0\n 10258: a1 = a0 if a5 != 0\n 10261: a0 = a4 | a5\n 10264: a2 = ra >u 0\n 10266: a2 = a1 if a0 != 0\n 10269: jump @328 if a2 == 0\n      : @327 (gas: 1)\n 10272: jump @583\n      : @328 (gas: 15)\n 10275: a0 = u64 [s1 + 0x70]\n 10278: a1 = u64 [s1 + 0xf8]\n 10282: a0 = a1 <u a0\n 10285: a1 = ra ^ t0\n 10288: a2 = ra <u t0\n 10291: a2 = a0 if a1 == 0\n 10294: a0 = u64 [s1 + 0x68]\n 10297: t2 = a4 <u a0\n 10300: a1 = a5 ^ t1\n 10303: a3 = a5 <u t1\n 10306: a3 = t2 if a1 == 0\n 10309: a0 = a0 ^ a4\n 10312: a0 = a0 | a1\n 10315: a3 = a2 if a0 == 0\n 10318: jump @330 if a3 == 0\n      : @329 (gas: 1)\n 10321: jump @583\n      : @330 (gas: 14)\n 10324: a2 = s1 + 0x7ff\n 10328: a2 = a2 + 0x79\n 10331: a0 = u64 [s1 + 0xf8]\n 10335: u64 [a2 + 0x3e8] = a0\n 10339: u64 [a2 + 0x3f0] = ra\n 10343: u64 [a2 + 0x3f8] = a4\n 10347: a0 = 0x40\n 10350: a1 = s1 + 0x7ff\n 10354: a1 = a1 + 0x461\n 10358: u64 [a2 + 0x400] = a5\n 10362: u64 [s1 + 0xe8] = ra\n 10366: u64 [s1 + 0xe0] = a4\n 10370: u64 [s1 + 0xf0] = a5\n 10374: ra = 298, jump @19\n      : @331 [@dyn 149] (gas: 27)\n 10380: a1 = s1 + 0x7ff\n 10384: a1 = a1 + 0x79\n 10387: a0 = u64 [s1 + 0x58]\n 10390: a2 = a1 + 0x300\n 10394: u64 [a2 + 0xa0] = a0\n 10398: a0 = u64 [s1 + 0x68]\n 10401: u64 [a2 + 0x98] = a0\n 10405: a0 = u64 [s1 + 0x60]\n 10408: u64 [a2 + 0x90] = a0\n 10412: a0 = u64 [s1 + 0x70]\n 10415: u64 [a2 + 0x88] = a0\n 10419: a0 = u64 [s1 + 0xf0]\n 10423: u64 [a2 + 0xc0] = a0\n 10427: a0 = u64 [s1 + 0xe0]\n 10431: u64 [a2 + 0xb8] = a0\n 10435: a0 = u64 [s1 + 0xe8]\n 10439: u64 [a2 + 0xb0] = a0\n 10443: a4 = a1\n 10445: a0 = s1 + 0x7ff\n 10449: a0 = a0 + 0x441\n 10453: a1 = s1 + 0x7ff\n 10457: a1 = a1 + 0x421\n 10461: a2 = s1 + 0x7ff\n 10465: a2 = a2 + 0x401\n 10469: a3 = u64 [s1 + 0xf8]\n 10473: u64 [a4 + 0x3a8] = a3\n 10477: ra = 300, jump @676\n      : @332 [@dyn 150] (gas: 12)\n 10483: a3 = u64 [s1 + 0xe0]\n 10487: a4 = u64 [s1 + 0xe8]\n 10491: t0 = u64 [s1 + 0xf8]\n 10495: a0 = t0 | a3\n 10498: a1 = u64 [s1 + 0xf0]\n 10502: a1 = a1 | a4\n 10505: a0 = a0 | a1\n 10508: a0 = a0 >> 0x20\n 10511: a1 = a1 | a3\n 10514: a1 = a1 << 0x20\n 10517: a0 = a0 | a1\n 10520: jump @334 if a0 == 0\n      : @333 (gas: 1)\n 10523: jump @513\n      : @334 (gas: 33)\n 10526: a1 = s1 + 0x7ff\n 10530: a1 = a1 + 0x79\n 10533: a5 = a1 + 0x300\n 10537: a0 = u64 [a5 + 0xd0]\n 10541: a2 = u64 [a5 + 0xe0]\n 10545: u64 [s1 + 0xd8] = a2\n 10549: a2 = a3\n 10551: t1 = u64 [a1 + 0x3c8]\n 10555: a3 = u64 [a5 + 0xd8]\n 10559: t2 = a0 ^ a4\n 10562: a5 = a0 <u a4\n 10565: ra = t1 <u t0\n 10568: a5 = ra if t2 == 0\n 10571: a1 = a3 - a2\n 10574: t2 = a1 - a5\n 10577: a1 = a1 <u a5\n 10580: a3 = a3 <u a2\n 10583: a2 = u64 [s1 + 0xd8]\n 10587: a3 = a2 - a3\n 10590: a2 = u64 [s1 + 0xf0]\n 10594: a3 = a3 - a2\n 10597: a3 = a3 - a1\n 10600: a0 = a0 - a4\n 10603: a0 = a0 - ra\n 10606: a1 = t1 - t0\n 10609: a0 = a0 | a3\n 10612: a2 = a1 | t2\n 10615: a2 = a2 | a0\n 10618: a0 = a0 | t2\n 10621: a2 = a2 >> 0x20\n 10624: a0 = a0 << 0x20\n 10627: a0 = a0 | a2\n 10630: jump @336 if a0 == 0\n      : @335 (gas: 1)\n 10633: jump @513\n      : @336 (gas: 4)\n 10636: a0 = t0\n 10638: u64 [s1 + 0xf8] = a1\n 10642: ra = 0x228\n 10646: jump @26\n      : @337 (gas: 10)\n 10649: u64 [a2 + 288] = 0\n 10653: u64 [a2 + 280] = 0\n 10657: u64 [a2 + 272] = 0\n 10661: u64 [a2 + 264] = 0\n 10665: a0 = s1 + 0x1000\n 10669: i32 a0 = a0 + 0x180\n 10673: ra = 0x12e\n 10677: ecalli 10 // 'value_transferred'\n 10679: t0 = 0x130\n 10683: jump @792\n      : @338 [@dyn 151] (gas: 1)\n 10686: t0 = 304, jump @792\n      : @339 [@dyn 152] (gas: 1)\n 10692: t0 = 306, jump @787\n      : @340 [@dyn 153] (gas: 1)\n 10698: jump @342 if a0 == 0\n      : @341 (gas: 1)\n 10701: jump @545\n      : @342 (gas: 3)\n 10704: a0 = u64 [s1 + 0xf8]\n 10708: a0 = i32 [a0]\n 10710: jump @344 if a0 >u 3\n      : @343 (gas: 1)\n 10714: jump @546\n      : @344 (gas: 4)\n 10717: a0 = s1 + 0x7ff\n 10721: a0 = a0 + 0x1\n 10724: a1 = 0x40\n 10727: ra = 308, jump @17\n      : @345 [@dyn 154] (gas: 9)\n 10733: a0 = s1 + 0x1000\n 10737: a3 = u64 [a0 + 0xfffffffffffff818]\n 10741: a0 = s1 + 0x1000\n 10745: a1 = u64 [a0 + 0xfffffffffffff810]\n 10749: a0 = s1 + 0x1000\n 10753: a2 = u64 [a0 + 0xfffffffffffff808]\n 10757: a0 = s1 + 0x1000\n 10761: a0 = u64 [a0 + 0xfffffffffffff800]\n 10765: t0 = 310, jump @769\n      : @346 [@dyn 155] (gas: 1)\n 10771: jump @348 if a1 == 0\n      : @347 (gas: 1)\n 10774: jump @513\n      : @348 (gas: 8)\n 10777: u64 [s1 + 2040] = 0\n 10781: u64 [s1 + 2032] = 0\n 10785: u64 [s1 + 2024] = 0\n 10789: a1 = s1 + 0x7e0\n 10793: u64 [s1 + 2016] = 0x12\n 10798: u64 [s1 + 0xf8] = a0\n 10802: ra = 0x1d8\n 10806: jump @19\n      : @349 (gas: 8)\n 10809: u64 [a2 + 192] = 0\n 10813: u64 [a2 + 184] = 0\n 10817: u64 [a2 + 176] = 0\n 10821: u64 [a2 + 168] = 0\n 10825: a0 = s1 + 0x1000\n 10829: i32 a0 = a0 + 0x120\n 10833: ecalli 10 // 'value_transferred'\n 10835: fallthrough\n      : @350 (gas: 9)\n 10836: a3 = s1 + 0x1078\n 10840: a0 = u64 [a3 + 0xb8]\n 10844: a1 = u64 [a3 + 0xc0]\n 10848: a2 = u64 [a3 + 0xb0]\n 10852: a3 = u64 [a3 + 0xa8]\n 10856: a1 = a1 | a2\n 10859: a0 = a0 | a3\n 10862: a0 = a0 | a1\n 10865: jump @352 if a0 == 0\n      : @351 (gas: 1)\n 10868: jump @547\n      : @352 (gas: 4)\n 10871: a0 = u64 [s1 + 0xf8]\n 10875: a0 = i32 [a0]\n 10877: a1 = 0x63\n 10880: jump @354 if a1 <u a0\n      : @353 (gas: 1)\n 10883: jump @548\n      : @354 (gas: 4)\n 10886: a0 = s1 + 0x7c0\n 10890: ra = 0x138\n 10894: t0 = 0x276\n 10898: jump @788\n      : @355 [@dyn 156] (gas: 12)\n 10901: a0 = u64 [s1 + 0x7d8]\n 10905: u64 [s1 + 0xa8] = a0\n 10909: a0 = u64 [s1 + 0x7d0]\n 10913: u64 [s1 + 0xb8] = a0\n 10917: a0 = u64 [s1 + 0x7c8]\n 10921: u64 [s1 + 0xf8] = a0\n 10925: a0 = u64 [s1 + 0x7c0]\n 10929: u64 [s1 + 0xf0] = a0\n 10933: a0 = s1 + 0x7a0\n 10937: ra = 0x13a\n 10941: t0 = 0x280\n 10945: jump @788\n      : @356 [@dyn 157] (gas: 34)\n 10948: a0 = u64 [s1 + 0x7b8]\n 10952: u64 [s1 + 0xa0] = a0\n 10956: a0 = u64 [s1 + 0x7b0]\n 10960: u64 [s1 + 0x98] = a0\n 10964: a0 = u64 [s1 + 0x7a8]\n 10968: u64 [s1 + 0x90] = a0\n 10972: a0 = u64 [s1 + 0x7a0]\n 10976: u64 [s1 + 0x88] = a0\n 10980: a0 = s1 + 0x1000\n 10984: i32 a0 = a0 + 0x140\n 10988: a1 = 0x44\n 10991: ecalli 1 // 'call_data_load'\n 10993: a0 = s1 + 0x1078\n 10997: a1 = u64 [a0 + 0xe0]\n 11001: u64 [s1 + 0xe8] = a1\n 11005: a1 = u64 [a0 + 0xd8]\n 11009: u64 [s1 + 0xd8] = a1\n 11013: a1 = u64 [a0 + 0xd0]\n 11017: u64 [s1 + 0xc8] = a1\n 11021: a0 = u64 [a0 + 0xc8]\n 11025: u64 [s1 + 0xd0] = a0\n 11029: a0 = u64 [s1 + 0xb8]\n 11033: a0 = a0 << 0x20\n 11036: a0 = a0 >> 0x20\n 11039: u64 [s1 + 1944] = 0\n 11043: u64 [s1 + 0x78] = a0\n 11046: u64 [s1 + 0x790] = a0\n 11050: a0 = u64 [s1 + 0xf8]\n 11054: u64 [s1 + 0x788] = a0\n 11058: a1 = s1 + 0x780\n 11062: a0 = u64 [s1 + 0xf0]\n 11066: u64 [s1 + 0x780] = a0\n 11070: a0 = 0\n 11072: ra = 316, jump @19\n      : @357 [@dyn 158] (gas: 7)\n 11078: u64 [s1 + 1912] = 0\n 11082: u64 [s1 + 1904] = 0\n 11086: u64 [s1 + 1888] = 0x1\n 11091: a0 = 0x20\n 11094: a1 = s1 + 0x760\n 11098: u64 [s1 + 1896] = 0\n 11102: ra = 318, jump @19\n      : @358 [@dyn 159] (gas: 3)\n 11108: a1 = 0x20104\n 11113: a0 = i32 [0x20104]\n 11118: jump @360 if a0 >u 63\n      : @359 (gas: 2)\n 11122: u32 [0x20104] = 0x40\n 11128: fallthrough\n      : @360 (gas: 15)\n 11129: a0 = sp + 0xffffffffffffffe0\n 11132: a2 = a0 & 0xffffffffffffffe0\n 11135: u64 [s1 + 0xb0] = a2\n 11139: sp = a2\n 11141: a0 = 0x20110\n 11146: i32 a0 = a0 + 0\n 11148: i32 a2 = a2 + 0\n 11150: u64 [s1 + 0xc0] = a1\n 11154: a1 = 0x40\n 11157: u64 [s1 + 0xe0] = a0\n 11161: ra = 0x140\n 11165: ecalli 6 // 'hash_keccak_256'\n 11167: a3 = u64 [s1 + 0xb0]\n 11171: t0 = 0x142\n 11175: jump @789\n      : @361 [@dyn 160] (gas: 2)\n 11178: a3 = u64 [s1 + 0xb0]\n 11182: t0 = 322, jump @789\n      : @362 [@dyn 161] (gas: 20)\n 11188: u64 [s1 + 0x68] = a0\n 11191: a0 = reverse a1\n 11193: u64 [s1 + 0x60] = a0\n 11196: a0 = reverse a2\n 11198: u64 [s1 + 0x58] = a0\n 11201: a0 = reverse a3\n 11203: u64 [s1 + 0x50] = a0\n 11206: a0 = sp + 0xffffffffffffffe0\n 11209: a0 = a0 & 0xffffffffffffffe0\n 11212: u64 [s1 + 0x70] = a0\n 11215: sp = a0\n 11217: a0 = 0x30110\n 11222: u64 [s1 + 0xb0] = a0\n 11226: i32 a0 = a0 + 0\n 11228: u64 [s1 + 0x80] = a0\n 11232: ra = 0x144\n 11236: ecalli 3 // 'caller'\n 11238: a2 = u64 [s1 + 0xb0]\n 11242: t0 = 0x146\n 11246: jump @766\n      : @363 [@dyn 162] (gas: 2)\n 11249: a2 = u64 [s1 + 0xb0]\n 11253: t0 = 326, jump @766\n      : @364 [@dyn 163] (gas: 7)\n 11259: u64 [s1 + 1880] = 0\n 11263: u64 [s1 + 0x750] = a1\n 11267: u64 [s1 + 0x748] = a0\n 11271: a1 = s1 + 0x740\n 11275: u64 [s1 + 0x740] = a3\n 11279: a0 = 0\n 11281: ra = 328, jump @19\n      : @365 [@dyn 164] (gas: 12)\n 11287: a0 = u64 [s1 + 0x50]\n 11290: a3 = s1 + 0x700\n 11294: u64 [a3 + 0x38] = a0\n 11297: a0 = u64 [s1 + 0x58]\n 11300: u64 [a3 + 0x30] = a0\n 11303: a0 = u64 [s1 + 0x60]\n 11306: u64 [a3 + 0x28] = a0\n 11309: a0 = 0x20\n 11312: a1 = s1 + 0x720\n 11316: a2 = u64 [s1 + 0x68]\n 11319: u64 [a3 + 0x20] = a2\n 11322: ra = 330, jump @19\n      : @366 [@dyn 165] (gas: 3)\n 11328: a1 = u64 [s1 + 0xc0]\n 11332: a0 = i32 [a1]\n 11334: jump @368 if a0 >u 63\n      : @367 (gas: 2)\n 11338: u32 [a1 + 0] = 0x40\n 11341: fallthrough\n      : @368 (gas: 12)\n 11342: a0 = sp + 0xffffffffffffffe0\n 11345: a0 = a0 & 0xffffffffffffffe0\n 11348: u64 [s1 + 0x68] = a0\n 11351: sp = a0\n 11353: i32 a2 = a0 + 0\n 11355: a1 = 0x40\n 11358: a0 = u64 [s1 + 0xe0]\n 11362: ra = 0x14c\n 11366: ecalli 6 // 'hash_keccak_256'\n 11368: a3 = u64 [s1 + 0x68]\n 11371: t0 = 0x14e\n 11375: jump @768\n      : @369 [@dyn 166] (gas: 2)\n 11378: a3 = u64 [s1 + 0x68]\n 11381: t0 = 334, jump @768\n      : @370 [@dyn 167] (gas: 7)\n 11387: a1 = u64 [s1 + 0x70]\n 11390: u64 [a1 + 0x18] = a3\n 11393: u64 [a1 + 0x10] = a2\n 11396: u64 [a1 + 0x8] = a4\n 11399: u64 [a1] = a0\n 11401: a0 = s1 + 0x700\n 11405: ra = 336, jump @21\n      : @371 [@dyn 168] (gas: 8)\n 11411: t2 = u64 [s1 + 0x718]\n 11415: a3 = u64 [s1 + 0x710]\n 11419: a4 = u64 [s1 + 0x708]\n 11423: t0 = u64 [s1 + 0x700]\n 11427: a0 = a4 & t2\n 11430: a1 = t0 & a3\n 11433: a0 = a0 & a1\n 11436: jump @392 if a0 == 4294967295\n      : @372 (gas: 20)\n 11441: a0 = u64 [s1 + 0xd0]\n 11445: t1 = t0 <u a0\n 11448: a1 = u64 [s1 + 0xc8]\n 11452: a0 = a4 ^ a1\n 11455: a5 = a4 <u a1\n 11458: a5 = t1 if a0 == 0\n 11461: a2 = u64 [s1 + 0xd8]\n 11465: ra = a3 <u a2\n 11468: a1 = u64 [s1 + 0xe8]\n 11472: a0 = t2 ^ a1\n 11475: a1 = t2 <u a1\n 11478: a1 = ra if a0 == 0\n 11481: a2 = a2 ^ a3\n 11484: a0 = a0 | a2\n 11487: a1 = a5 if a0 == 0\n 11490: u64 [s1 + 0x70] = t0\n 11493: u64 [s1 + 0x68] = a4\n 11496: u64 [s1 + 0x60] = t2\n 11499: u64 [s1 + 0x58] = a3\n 11502: jump @374 if a1 == 0\n      : @373 (gas: 1)\n 11505: jump @590\n      : @374 (gas: 9)\n 11508: u64 [s1 + 0x40] = ra\n 11511: u64 [s1 + 0x48] = a5\n 11514: u64 [s1 + 0x50] = t1\n 11517: a0 = u64 [s1 + 0xf0]\n 11521: a1 = u64 [s1 + 0x78]\n 11524: a0 = a0 | a1\n 11527: a1 = u64 [s1 + 0xf8]\n 11531: a0 = a0 | a1\n 11534: jump @376 if a0 != 0\n      : @375 (gas: 1)\n 11537: jump @599\n      : @376 (gas: 3)\n 11540: a0 = u64 [s1 + 0x80]\n 11544: ecalli 3 // 'caller'\n 11546: fallthrough\n      : @377 (gas: 7)\n 11547: a2 = u64 [s1 + 0xb0]\n 11551: a0 = u32 [a2 + 0x10]\n 11554: a1 = u64 [a2]\n 11556: a2 = u64 [a2 + 0x8]\n 11559: a0 = a0 | a1\n 11562: a0 = a0 | a2\n 11565: jump @379 if a0 != 0\n      : @378 (gas: 1)\n 11568: jump @601\n      : @379 (gas: 10)\n 11571: u64 [s1 + 1784] = 0\n 11575: a0 = u64 [s1 + 0xf0]\n 11579: u64 [s1 + 0x6e0] = a0\n 11583: a0 = u64 [s1 + 0xf8]\n 11587: u64 [s1 + 0x6e8] = a0\n 11591: a1 = s1 + 0x6e0\n 11595: a0 = u64 [s1 + 0x78]\n 11598: u64 [s1 + 0x6f0] = a0\n 11602: a0 = 0\n 11604: ra = 338, jump @19\n      : @380 [@dyn 169] (gas: 7)\n 11610: u64 [s1 + 1752] = 0\n 11614: u64 [s1 + 1744] = 0\n 11618: u64 [s1 + 1728] = 0x1\n 11623: a0 = 0x20\n 11626: a1 = s1 + 0x6c0\n 11630: u64 [s1 + 1736] = 0\n 11634: ra = 340, jump @19\n      : @381 [@dyn 170] (gas: 3)\n 11640: a1 = u64 [s1 + 0xc0]\n 11644: a0 = i32 [a1]\n 11646: jump @383 if a0 >u 63\n      : @382 (gas: 2)\n 11650: u32 [a1 + 0] = 0x40\n 11653: fallthrough\n      : @383 (gas: 12)\n 11654: a0 = sp + 0xffffffffffffffe0\n 11657: a0 = a0 & 0xffffffffffffffe0\n 11660: u64 [s1 + 0x78] = a0\n 11663: sp = a0\n 11665: i32 a2 = a0 + 0\n 11667: a1 = 0x40\n 11670: a0 = u64 [s1 + 0xe0]\n 11674: ra = 0x156\n 11678: ecalli 6 // 'hash_keccak_256'\n 11680: a3 = u64 [s1 + 0x78]\n 11683: t0 = 0x158\n 11687: jump @789\n      : @384 [@dyn 171] (gas: 2)\n 11690: a3 = u64 [s1 + 0x78]\n 11693: t0 = 344, jump @789\n      : @385 [@dyn 172] (gas: 17)\n 11699: u64 [s1 + 0x38] = a0\n 11702: a0 = reverse a1\n 11704: u64 [s1 + 0x30] = a0\n 11707: a0 = reverse a2\n 11709: u64 [s1 + 0x28] = a0\n 11712: a0 = reverse a3\n 11714: u64 [s1 + 0x20] = a0\n 11717: a0 = sp + 0xffffffffffffffe0\n 11720: a0 = a0 & 0xffffffffffffffe0\n 11723: u64 [s1 + 0x78] = a0\n 11726: sp = a0\n 11728: a0 = u64 [s1 + 0x80]\n 11732: ra = 0x15a\n 11736: ecalli 3 // 'caller'\n 11738: a2 = u64 [s1 + 0xb0]\n 11742: t0 = 0x15c\n 11746: jump @766\n      : @386 [@dyn 173] (gas: 2)\n 11749: a2 = u64 [s1 + 0xb0]\n 11753: t0 = 348, jump @766\n      : @387 [@dyn 174] (gas: 7)\n 11759: u64 [s1 + 1720] = 0\n 11763: u64 [s1 + 0x6b0] = a1\n 11767: u64 [s1 + 0x6a8] = a0\n 11771: a1 = s1 + 0x6a0\n 11775: u64 [s1 + 0x6a0] = a3\n 11779: a0 = 0\n 11781: ra = 350, jump @19\n      : @388 [@dyn 175] (gas: 12)\n 11787: a0 = u64 [s1 + 0x20]\n 11790: a3 = s1 + 0x600\n 11794: u64 [a3 + 0x98] = a0\n 11798: a0 = u64 [s1 + 0x28]\n 11801: u64 [a3 + 0x90] = a0\n 11805: a0 = u64 [s1 + 0x30]\n 11808: u64 [a3 + 0x88] = a0\n 11812: a0 = 0x20\n 11815: a1 = s1 + 0x680\n 11819: a2 = u64 [s1 + 0x38]\n 11822: u64 [a3 + 0x80] = a2\n 11826: ra = 352, jump @19\n      : @389 [@dyn 176] (gas: 3)\n 11832: a1 = u64 [s1 + 0xc0]\n 11836: a0 = i32 [a1]\n 11838: jump @391 if a0 >u 63\n      : @390 (gas: 2)\n 11842: u32 [a1 + 0] = 0x40\n 11845: fallthrough\n      : @391 (gas: 49)\n 11846: a0 = sp + 0xffffffffffffffe0\n 11849: a0 = a0 & 0xffffffffffffffe0\n 11852: u64 [s1 + 0xc0] = a0\n 11856: sp = a0\n 11858: i32 a2 = a0 + 0\n 11860: a1 = 0x40\n 11863: a0 = u64 [s1 + 0xe0]\n 11867: ecalli 6 // 'hash_keccak_256'\n 11869: a0 = u64 [s1 + 0xd8]\n 11873: a1 = u64 [s1 + 0x58]\n 11876: a0 = a1 - a0\n 11879: a2 = u64 [s1 + 0x48]\n 11882: a1 = a0 - a2\n 11885: a0 = a0 <u a2\n 11888: a2 = u64 [s1 + 0xe8]\n 11892: a3 = u64 [s1 + 0x60]\n 11895: a2 = a3 - a2\n 11898: a3 = u64 [s1 + 0x40]\n 11901: a2 = a2 - a3\n 11904: a2 = a2 - a0\n 11907: a0 = u64 [s1 + 0xc8]\n 11911: a3 = u64 [s1 + 0x68]\n 11914: a0 = a3 - a0\n 11917: a3 = u64 [s1 + 0x50]\n 11920: a0 = a0 - a3\n 11923: a3 = s1 + 0x1078\n 11927: u64 [a3 + 0x100] = a2\n 11931: u64 [a3 + 0xf8] = a1\n 11935: u64 [a3 + 0xf0] = a0\n 11939: a4 = u64 [s1 + 0xc0]\n 11943: a0 = u64 [a4]\n 11945: a1 = u64 [s1 + 0xd0]\n 11949: a2 = u64 [s1 + 0x70]\n 11952: a1 = a2 - a1\n 11955: u64 [a3 + 0xe8] = a1\n 11959: a1 = u64 [a4 + 0x8]\n 11962: a2 = reverse a0\n 11964: a0 = u64 [s1 + 0x78]\n 11967: u64 [a0 + 0x18] = a2\n 11970: a3 = u64 [a4 + 0x10]\n 11973: a2 = u64 [a4 + 0x18]\n 11976: a1 = reverse a1\n 11978: u64 [a0 + 0x10] = a1\n 11981: a1 = reverse a3\n 11983: u64 [a0 + 0x8] = a1\n 11986: a1 = reverse a2\n 11988: u64 [a0] = a1\n 11990: a1 = s1 + 0x1160\n 11994: ra = 354, jump @22\n      : @392 [@dyn 177] (gas: 28)\n 12000: a0 = u64 [s1 + 0xd0]\n 12004: u64 [s1 + 0x520] = a0\n 12008: a0 = u64 [s1 + 0x88]\n 12012: u64 [s1 + 0x540] = a0\n 12016: a0 = u64 [s1 + 0xf0]\n 12020: u64 [s1 + 0x560] = a0\n 12024: a0 = u64 [s1 + 0xc8]\n 12028: u64 [s1 + 0x528] = a0\n 12032: a0 = u64 [s1 + 0x90]\n 12036: u64 [s1 + 0x548] = a0\n 12040: a0 = u64 [s1 + 0xf8]\n 12044: u64 [s1 + 0x568] = a0\n 12048: a0 = u64 [s1 + 0xd8]\n 12052: u64 [s1 + 0x530] = a0\n 12056: a0 = u64 [s1 + 0x98]\n 12060: u64 [s1 + 0x550] = a0\n 12064: a0 = u64 [s1 + 0xb8]\n 12068: u64 [s1 + 0x570] = a0\n 12072: a0 = u64 [s1 + 0xe8]\n 12076: u64 [s1 + 0x538] = a0\n 12080: a0 = u64 [s1 + 0xa0]\n 12084: u64 [s1 + 0x558] = a0\n 12088: a0 = s1 + 0x560\n 12092: a1 = s1 + 0x540\n 12096: a2 = s1 + 0x520\n 12100: a3 = u64 [s1 + 0xa8]\n 12104: u64 [s1 + 0x578] = a3\n 12108: ra = 356, jump @705\n      : @393 [@dyn 178] (gas: 3)\n 12114: a0 = s1 + 0x500\n 12118: a1 = 0x40\n 12121: ra = 358, jump @17\n      : @394 [@dyn 179] (gas: 6)\n 12127: a4 = s1 + 0x500\n 12131: a3 = u64 [a4 + 0x18]\n 12134: a1 = u64 [a4 + 0x10]\n 12137: a2 = u64 [a4 + 0x8]\n 12140: a0 = u64 [a4]\n 12142: t0 = 360, jump @769\n      : @395 [@dyn 180] (gas: 1)\n 12148: jump @513 if a1 != 0\n      : @396 (gas: 8)\n 12152: u64 [s1 + 1272] = 0\n 12156: u64 [s1 + 1264] = 0\n 12160: u64 [s1 + 1256] = 0\n 12164: a1 = s1 + 0x4e0\n 12168: u64 [s1 + 1248] = 0x1\n 12173: u64 [s1 + 0xf8] = a0\n 12177: ra = 0x1d8\n 12181: jump @19\n      : @397 (gas: 10)\n 12184: u64 [a2 + 864] = 0\n 12188: u64 [a2 + 856] = 0\n 12192: u64 [a2 + 848] = 0\n 12196: u64 [a2 + 840] = 0\n 12200: a0 = s1 + 0x1000\n 12204: i32 a0 = a0 + 0x3c0\n 12208: ra = 0x16a\n 12212: ecalli 10 // 'value_transferred'\n 12214: t0 = 0x16c\n 12218: jump @793\n      : @398 [@dyn 181] (gas: 1)\n 12221: t0 = 364, jump @793\n      : @399 [@dyn 182] (gas: 8)\n 12227: a0 = u64 [a4 + 0x58]\n 12230: a1 = u64 [a4 + 0x60]\n 12233: a2 = u64 [a4 + 0x50]\n 12236: a3 = u64 [a4 + 0x48]\n 12239: a1 = a1 | a2\n 12242: a0 = a0 | a3\n 12245: a0 = a0 | a1\n 12248: jump @401 if a0 == 0\n      : @400 (gas: 1)\n 12251: jump @549\n      : @401 (gas: 4)\n 12254: a0 = u64 [s1 + 0xf8]\n 12258: a0 = i32 [a0]\n 12260: a1 = 0x43\n 12263: jump @403 if a1 <u a0\n      : @402 (gas: 1)\n 12266: jump @550\n      : @403 (gas: 7)\n 12269: a0 = 0xffffffff\n 12279: u64 [s1 + 0xf8] = a0\n 12283: a0 = s1 + 0x7ff\n 12287: a0 = a0 + 0x721\n 12291: ra = 0x16e\n 12295: t0 = 0x276\n 12299: jump @788\n      : @404 [@dyn 183] (gas: 13)\n 12302: a1 = s1 + 0x7ff\n 12306: a1 = a1 + 0x79\n 12309: a0 = u64 [a1 + 0x6a8]\n 12313: u64 [s1 + 0xf0] = a0\n 12317: a0 = u64 [a1 + 0x6b0]\n 12321: u64 [s1 + 0xd0] = a0\n 12325: a0 = u32 [a1 + 0x6b8]\n 12329: u64 [s1 + 0xc8] = a0\n 12333: a0 = s1 + 0x7ff\n 12337: a0 = a0 + 0x701\n 12341: ra = 0x170\n 12345: t0 = 0x280\n 12349: jump @788\n      : @405 [@dyn 184] (gas: 21)\n 12352: a1 = s1 + 0x7ff\n 12356: a1 = a1 + 0x79\n 12359: a2 = a1 + 0x600\n 12363: a0 = u64 [a2 + 0x98]\n 12367: u64 [s1 + 0xe8] = a0\n 12371: a0 = u64 [a2 + 0x90]\n 12375: u64 [s1 + 0xe0] = a0\n 12379: a0 = u64 [a2 + 0x88]\n 12383: u64 [s1 + 0xd8] = a0\n 12387: u64 [a1 + 1664] = 0\n 12391: a0 = u64 [s1 + 0xc8]\n 12395: u64 [a2 + 0x78] = a0\n 12398: a0 = u64 [s1 + 0xd0]\n 12402: u64 [a2 + 0x70] = a0\n 12405: a2 = a1\n 12407: a1 = s1 + 0x7ff\n 12411: a1 = a1 + 0x6e1\n 12415: a0 = u64 [s1 + 0xf0]\n 12419: u64 [a2 + 0x668] = a0\n 12423: a0 = 0\n 12425: ra = 370, jump @19\n      : @406 [@dyn 185] (gas: 11)\n 12431: a1 = s1 + 0x7ff\n 12435: a1 = a1 + 0x79\n 12438: u64 [a1 + 1632] = 0\n 12442: u64 [a1 + 1624] = 0\n 12446: u64 [a1 + 1608] = 0x1\n 12451: a2 = a1\n 12453: a0 = 0x20\n 12456: a1 = s1 + 0x7ff\n 12460: a1 = a1 + 0x6c1\n 12464: u64 [a2 + 1616] = 0\n 12468: ra = 372, jump @19\n      : @407 [@dyn 186] (gas: 3)\n 12474: a1 = 0x20104\n 12479: a0 = i32 [0x20104]\n 12484: jump @409 if a0 >u 63\n      : @408 (gas: 2)\n 12488: u32 [0x20104] = 0x40\n 12494: fallthrough\n      : @409 (gas: 15)\n 12495: a0 = sp + 0xffffffffffffffe0\n 12498: a2 = a0 & 0xffffffffffffffe0\n 12501: u64 [s1 + 0xc8] = a2\n 12505: sp = a2\n 12507: a0 = 0x20110\n 12512: i32 a0 = a0 + 0\n 12514: i32 a2 = a2 + 0\n 12516: u64 [s1 + 0xf0] = a1\n 12520: a1 = 0x40\n 12523: u64 [s1 + 0xd0] = a0\n 12527: ra = 0x176\n 12531: ecalli 6 // 'hash_keccak_256'\n 12533: a3 = u64 [s1 + 0xc8]\n 12537: t0 = 0x178\n 12541: jump @789\n      : @410 [@dyn 187] (gas: 2)\n 12544: a3 = u64 [s1 + 0xc8]\n 12548: t0 = 376, jump @789\n      : @411 [@dyn 188] (gas: 29)\n 12554: u64 [s1 + 0xc0] = a0\n 12558: a0 = reverse a1\n 12560: u64 [s1 + 0xb8] = a0\n 12564: a0 = reverse a2\n 12566: u64 [s1 + 0xb0] = a0\n 12570: a0 = reverse a3\n 12572: u64 [s1 + 0xa8] = a0\n 12576: a0 = sp + 0xffffffffffffffe0\n 12579: a0 = a0 & 0xffffffffffffffe0\n 12582: u64 [s1 + 0xc8] = a0\n 12586: sp = a0\n 12588: a0 = u64 [s1 + 0xd8]\n 12592: a0 = a0 & 0xffffffffffffffff\n 12595: a2 = u64 [s1 + 0xe0]\n 12599: a1 = a2 & 0xffffffffffffffff\n 12602: a2 = u64 [s1 + 0xf8]\n 12606: a3 = u64 [s1 + 0xe8]\n 12610: a2 = a2 & a3\n 12613: a3 = s1 + 0x7ff\n 12617: a3 = a3 + 0x79\n 12620: u64 [a3 + 1600] = 0\n 12624: a4 = a3 + 0x600\n 12628: u64 [a4 + 0x38] = a2\n 12631: u64 [a4 + 0x30] = a1\n 12634: a1 = s1 + 0x7ff\n 12638: a1 = a1 + 0x6a1\n 12642: u64 [a4 + 0x28] = a0\n 12645: a0 = 0\n 12647: ra = 378, jump @19\n      : @412 [@dyn 189] (gas: 16)\n 12653: a0 = u64 [s1 + 0xa8]\n 12657: a1 = s1 + 0x7ff\n 12661: a1 = a1 + 0x79\n 12664: a2 = a1 + 0x600\n 12668: u64 [a2 + 0x20] = a0\n 12671: a0 = u64 [s1 + 0xb0]\n 12675: u64 [a2 + 0x18] = a0\n 12678: a0 = u64 [s1 + 0xb8]\n 12682: u64 [a2 + 0x10] = a0\n 12685: a3 = a1\n 12687: a0 = 0x20\n 12690: a1 = s1 + 0x7ff\n 12694: a1 = a1 + 0x681\n 12698: a2 = u64 [s1 + 0xc0]\n 12702: u64 [a3 + 0x608] = a2\n 12706: ra = 380, jump @19\n      : @413 [@dyn 190] (gas: 3)\n 12712: a1 = u64 [s1 + 0xf0]\n 12716: a0 = i32 [a1]\n 12718: jump @415 if a0 >u 63\n      : @414 (gas: 2)\n 12722: u32 [a1 + 0] = 0x40\n 12725: fallthrough\n      : @415 (gas: 12)\n 12726: a0 = sp + 0xffffffffffffffe0\n 12729: a0 = a0 & 0xffffffffffffffe0\n 12732: u64 [s1 + 0xf8] = a0\n 12736: sp = a0\n 12738: i32 a2 = a0 + 0\n 12740: a1 = 0x40\n 12743: a0 = u64 [s1 + 0xd0]\n 12747: ra = 0x17e\n 12751: ecalli 6 // 'hash_keccak_256'\n 12753: a3 = u64 [s1 + 0xf8]\n 12757: t0 = 0x180\n 12761: jump @768\n      : @416 [@dyn 191] (gas: 2)\n 12764: a3 = u64 [s1 + 0xf8]\n 12768: t0 = 384, jump @768\n      : @417 [@dyn 192] (gas: 8)\n 12774: a1 = u64 [s1 + 0xc8]\n 12778: u64 [a1 + 0x18] = a3\n 12781: u64 [a1 + 0x10] = a2\n 12784: u64 [a1 + 0x8] = a4\n 12787: u64 [a1] = a0\n 12789: a0 = s1 + 0x7ff\n 12793: a0 = a0 + 0x661\n 12797: ra = 386, jump @21\n      : @418 [@dyn 193] (gas: 15)\n 12803: a1 = s1 + 0x7ff\n 12807: a1 = a1 + 0x79\n 12810: a0 = u64 [a1 + 0x600]\n 12814: u64 [s1 + 0xf8] = a0\n 12818: a2 = a1 + 0x500\n 12822: a0 = u64 [a2 + 0xf8]\n 12826: u64 [s1 + 0xf0] = a0\n 12830: a0 = u64 [a2 + 0xf0]\n 12834: u64 [s1 + 0xe8] = a0\n 12838: a0 = u64 [a2 + 0xe8]\n 12842: u64 [s1 + 0xe0] = a0\n 12846: a0 = s1 + 0x7ff\n 12850: a0 = a0 + 0x641\n 12854: a1 = 0x40\n 12857: ra = 388, jump @17\n      : @419 [@dyn 194] (gas: 15)\n 12863: a3 = s1 + 0x7ff\n 12867: a3 = a3 + 0x79\n 12870: a5 = a3 + 0x500\n 12874: a0 = u64 [a5 + 0xe0]\n 12878: a1 = u64 [a5 + 0xd8]\n 12882: a2 = u64 [a5 + 0xd0]\n 12886: a4 = u64 [a5 + 0xc8]\n 12890: a0 = a0 | a2\n 12893: a2 = a4 | a1\n 12896: a2 = a2 | a0\n 12899: a2 = a2 >> 0x20\n 12902: a0 = a0 | a1\n 12905: a0 = a0 << 0x20\n 12908: a0 = a0 | a2\n 12911: jump @513 if a0 != 0\n      : @420 (gas: 15)\n 12915: a0 = u64 [s1 + 0xe0]\n 12919: a2 = a3 + 0x500\n 12923: u64 [a2 + 0xa8] = a0\n 12927: a0 = u64 [s1 + 0xe8]\n 12931: u64 [a2 + 0xb0] = a0\n 12935: a0 = u64 [s1 + 0xf0]\n 12939: u64 [a2 + 0xb8] = a0\n 12943: a1 = s1 + 0x7ff\n 12947: a1 = a1 + 0x621\n 12951: a0 = u64 [s1 + 0xf8]\n 12955: u64 [a2 + 0xc0] = a0\n 12959: a0 = a4\n 12961: u64 [s1 + 0xf8] = a4\n 12965: ra = 0x1d8\n 12969: jump @19\n      : @421 (gas: 1)\n 12972: jump @423 if a0 == 1889567281\n      : @422 (gas: 1)\n 12979: jump @551\n      : @423 (gas: 10)\n 12982: u64 [a2 + 480] = 0\n 12986: u64 [a2 + 472] = 0\n 12990: u64 [a2 + 464] = 0\n 12994: u64 [a2 + 456] = 0\n 12998: a0 = s1 + 0x1000\n 13002: i32 a0 = a0 + 0x240\n 13006: ra = 0x186\n 13010: ecalli 10 // 'value_transferred'\n 13012: t0 = 0x188\n 13016: jump @792\n      : @424 [@dyn 195] (gas: 1)\n 13019: t0 = 392, jump @792\n      : @425 [@dyn 196] (gas: 8)\n 13025: a0 = u64 [a4 + 0xd8]\n 13029: a1 = u64 [a4 + 0xe0]\n 13033: a2 = u64 [a4 + 0xd0]\n 13037: a3 = u64 [a4 + 0xc8]\n 13041: a1 = a1 | a2\n 13044: a0 = a0 | a3\n 13047: a0 = a0 | a1\n 13050: jump @427 if a0 == 0\n      : @426 (gas: 1)\n 13053: jump @556\n      : @427 (gas: 4)\n 13056: a0 = u64 [s1 + 0xf8]\n 13060: a0 = i32 [a0]\n 13062: a1 = 0x23\n 13065: jump @429 if a1 <u a0\n      : @428 (gas: 1)\n 13068: jump @557\n      : @429 (gas: 5)\n 13071: a0 = s1 + 0x7ff\n 13075: a0 = a0 + 0x281\n 13079: ra = 0x18a\n 13083: t0 = 0x276\n 13087: jump @788\n      : @430 [@dyn 197] (gas: 14)\n 13090: a3 = s1 + 0x7ff\n 13094: a3 = a3 + 0x79\n 13097: a0 = u64 [a3 + 0x208]\n 13101: a1 = u64 [a3 + 0x210]\n 13105: a2 = u32 [a3 + 0x218]\n 13109: u64 [a3 + 512] = 0\n 13113: a4 = a3 + 0x100\n 13117: u64 [a4 + 0xf8] = a2\n 13121: u64 [a4 + 0xf0] = a1\n 13125: a1 = s1 + 0x7ff\n 13129: a1 = a1 + 0x261\n 13133: u64 [a4 + 0xe8] = a0\n 13137: a0 = 0\n 13139: ra = 396, jump @19\n      : @431 [@dyn 198] (gas: 11)\n 13145: a0 = s1 + 0x7ff\n 13149: a0 = a0 + 0x79\n 13152: u64 [a0 + 480] = 0\n 13156: u64 [a0 + 472] = 0\n 13160: u64 [a0 + 464] = 0\n 13164: a2 = a0\n 13166: a0 = 0x20\n 13169: a1 = s1 + 0x7ff\n 13173: a1 = a1 + 0x241\n 13177: u64 [a2 + 456] = 0\n 13181: ra = 398, jump @19\n      : @432 [@dyn 199] (gas: 2)\n 13187: a1 = i32 [0x20104]\n 13192: jump @434 if a1 >u 63\n      : @433 (gas: 2)\n 13196: u32 [0x20104] = 0x40\n 13202: fallthrough\n      : @434 (gas: 28)\n 13203: a0 = sp + 0xffffffffffffffe0\n 13206: a2 = a0 & 0xffffffffffffffe0\n 13209: u64 [s1 + 0xf8] = a2\n 13213: sp = a2\n 13215: a0 = 0x20110\n 13220: i32 a0 = a0 + 0\n 13222: i32 a2 = a2 + 0\n 13224: a1 = 0x40\n 13227: ecalli 6 // 'hash_keccak_256'\n 13229: a3 = u64 [s1 + 0xf8]\n 13233: a0 = u64 [a3 + 0x18]\n 13236: a1 = u64 [a3 + 0x10]\n 13239: a2 = u64 [a3 + 0x8]\n 13242: a3 = u64 [a3]\n 13244: a0 = reverse a0\n 13246: a1 = reverse a1\n 13248: a2 = reverse a2\n 13250: a3 = reverse a3\n 13252: a4 = s1 + 0x1078\n 13256: u64 [a4 + 0x200] = a3\n 13260: a3 = a4 + 0x100\n 13264: u64 [a3 + 0xf8] = a2\n 13268: u64 [a3 + 0xf0] = a1\n 13272: u64 [a3 + 0xe8] = a0\n 13276: a0 = s1 + 0x7ff\n 13280: a0 = a0 + 0x221\n 13284: a1 = s1 + 0x1260\n 13288: ra = 400, jump @21\n      : @435 [@dyn 200] (gas: 15)\n 13294: a1 = s1 + 0x7ff\n 13298: a1 = a1 + 0x79\n 13301: a2 = a1 + 0x100\n 13305: a0 = u64 [a2 + 0xc0]\n 13309: u64 [s1 + 0xf8] = a0\n 13313: a0 = u64 [a2 + 0xb8]\n 13317: u64 [s1 + 0xf0] = a0\n 13321: a0 = u64 [a2 + 0xb0]\n 13325: u64 [s1 + 0xe8] = a0\n 13329: a0 = u64 [a2 + 0xa8]\n 13333: u64 [s1 + 0xe0] = a0\n 13337: a0 = s1 + 0x7ff\n 13341: a0 = a0 + 0x201\n 13345: a1 = 0x40\n 13348: ra = 402, jump @17\n      : @436 [@dyn 201] (gas: 15)\n 13354: a3 = s1 + 0x7ff\n 13358: a3 = a3 + 0x79\n 13361: a5 = a3 + 0x100\n 13365: a0 = u64 [a5 + 0xa0]\n 13369: a1 = u64 [a5 + 0x98]\n 13373: a2 = u64 [a5 + 0x90]\n 13377: a4 = u64 [a5 + 0x88]\n 13381: a0 = a0 | a2\n 13384: a2 = a4 | a1\n 13387: a2 = a2 | a0\n 13390: a2 = a2 >> 0x20\n 13393: a0 = a0 | a1\n 13396: a0 = a0 << 0x20\n 13399: a0 = a0 | a2\n 13402: jump @513 if a0 != 0\n      : @437 (gas: 15)\n 13406: a0 = u64 [s1 + 0xe0]\n 13410: a2 = a3 + 0x100\n 13414: u64 [a2 + 0x68] = a0\n 13417: a0 = u64 [s1 + 0xe8]\n 13421: u64 [a2 + 0x70] = a0\n 13424: a0 = u64 [s1 + 0xf0]\n 13428: u64 [a2 + 0x78] = a0\n 13431: a1 = s1 + 0x7ff\n 13435: a1 = a1 + 0x1e1\n 13439: a0 = u64 [s1 + 0xf8]\n 13443: u64 [a2 + 0x80] = a0\n 13447: a0 = a4\n 13449: u64 [s1 + 0xf8] = a4\n 13453: ra = 0x1d8\n 13457: jump @19\n      : @438 (gas: 8)\n 13460: u64 [a2 + 64] = 0\n 13463: u64 [a2 + 56] = 0\n 13466: u64 [a2 + 48] = 0\n 13469: u64 [a2 + 40] = 0\n 13472: a0 = s1 + 0x1000\n 13476: i32 a0 = a0 + 0xa0\n 13480: ecalli 10 // 'value_transferred'\n 13482: fallthrough\n      : @439 (gas: 9)\n 13483: a3 = s1 + 0x1078\n 13487: a0 = u64 [a3 + 0x38]\n 13490: a1 = u64 [a3 + 0x40]\n 13493: a2 = u64 [a3 + 0x30]\n 13496: a3 = u64 [a3 + 0x28]\n 13499: a1 = a1 | a2\n 13502: a0 = a0 | a3\n 13505: a0 = a0 | a1\n 13508: jump @558 if a0 != 0\n      : @440 (gas: 4)\n 13512: a0 = u64 [s1 + 0xf8]\n 13516: a0 = i32 [a0]\n 13518: a1 = 0x43\n 13521: jump @559 if a1 >=u a0\n      : @441 (gas: 4)\n 13525: a0 = s1 + 0x460\n 13529: ra = 0x194\n 13533: t0 = 0x276\n 13537: jump @788\n      : @442 [@dyn 202] (gas: 35)\n 13540: a1 = s1 + 0x400\n 13544: a0 = u64 [a1 + 0x70]\n 13547: u64 [s1 + 0xd8] = a0\n 13551: a0 = u64 [a1 + 0x68]\n 13554: u64 [s1 + 0xf0] = a0\n 13558: a0 = u64 [a1 + 0x60]\n 13561: u64 [s1 + 0xf8] = a0\n 13565: a0 = sp + 0xffffffffffffffe0\n 13568: a0 = a0 & 0xffffffffffffffe0\n 13571: u64 [s1 + 0xe0] = a0\n 13575: sp = a0\n 13577: a0 = s1 + 0x1000\n 13581: i32 a0 = a0 + 0xc0\n 13585: a1 = 0x24\n 13588: ecalli 1 // 'call_data_load'\n 13590: a0 = s1 + 0x1078\n 13594: a1 = u64 [a0 + 0x60]\n 13597: a2 = u64 [a0 + 0x58]\n 13600: a3 = u64 [a0 + 0x50]\n 13603: a0 = u64 [a0 + 0x48]\n 13606: u64 [s1 + 0x90] = a1\n 13610: a4 = u64 [s1 + 0xe0]\n 13614: u64 [a4 + 0x18] = a1\n 13617: u64 [s1 + 0x88] = a2\n 13621: u64 [a4 + 0x10] = a2\n 13624: u64 [s1 + 0x80] = a3\n 13628: u64 [a4 + 0x8] = a3\n 13631: u64 [s1 + 0x78] = a0\n 13634: u64 [a4] = a0\n 13636: a0 = 0x30110\n 13641: u64 [s1 + 0xe8] = a0\n 13645: i32 a0 = a0 + 0\n 13647: u64 [s1 + 0xd0] = a0\n 13651: ecalli 3 // 'caller'\n 13653: fallthrough\n      : @443 (gas: 7)\n 13654: a2 = u64 [s1 + 0xe8]\n 13658: a0 = u32 [a2 + 0x10]\n 13661: a1 = u64 [a2]\n 13663: a2 = u64 [a2 + 0x8]\n 13666: a0 = a0 | a1\n 13669: a0 = a0 | a2\n 13672: jump @560 if a0 == 0\n      : @444 (gas: 9)\n 13676: a0 = u64 [s1 + 0xd8]\n 13680: a0 = a0 << 0x20\n 13683: a1 = a0 >> 0x20\n 13686: a0 = u64 [s1 + 0xf0]\n 13690: a2 = u64 [s1 + 0xf8]\n 13694: a0 = a0 | a2\n 13697: u64 [s1 + 0xd8] = a1\n 13701: a0 = a0 | a1\n 13704: jump @566 if a0 == 0\n      : @445 (gas: 6)\n 13708: a0 = u64 [s1 + 0xd0]\n 13712: ra = 0x196\n 13716: ecalli 3 // 'caller'\n 13718: a2 = u64 [s1 + 0xe8]\n 13722: t0 = 0x198\n 13726: jump @766\n      : @446 [@dyn 203] (gas: 2)\n 13729: a2 = u64 [s1 + 0xe8]\n 13733: t0 = 408, jump @766\n      : @447 [@dyn 204] (gas: 7)\n 13739: u64 [s1 + 1112] = 0\n 13743: u64 [s1 + 0x450] = a1\n 13747: u64 [s1 + 0x448] = a0\n 13751: a1 = s1 + 0x440\n 13755: u64 [s1 + 0x440] = a3\n 13759: a0 = 0\n 13761: ra = 410, jump @19\n      : @448 [@dyn 205] (gas: 7)\n 13767: u64 [s1 + 1080] = 0\n 13771: u64 [s1 + 1072] = 0\n 13775: u64 [s1 + 1056] = 0x1\n 13780: a0 = 0x20\n 13783: a1 = s1 + 0x420\n 13787: u64 [s1 + 1064] = 0\n 13791: ra = 412, jump @19\n      : @449 [@dyn 206] (gas: 3)\n 13797: a1 = 0x20104\n 13802: a0 = i32 [0x20104]\n 13807: jump @451 if a0 >u 63\n      : @450 (gas: 2)\n 13811: u32 [0x20104] = 0x40\n 13817: fallthrough\n      : @451 (gas: 15)\n 13818: a0 = sp + 0xffffffffffffffe0\n 13821: a2 = a0 & 0xffffffffffffffe0\n 13824: u64 [s1 + 0xb8] = a2\n 13828: sp = a2\n 13830: a0 = 0x20110\n 13835: i32 a0 = a0 + 0\n 13837: i32 a2 = a2 + 0\n 13839: u64 [s1 + 0xc8] = a1\n 13843: a1 = 0x40\n 13846: u64 [s1 + 0xc0] = a0\n 13850: ra = 0x19e\n 13854: ecalli 6 // 'hash_keccak_256'\n 13856: a3 = u64 [s1 + 0xb8]\n 13860: t0 = 0x1a0\n 13864: jump @789\n      : @452 [@dyn 207] (gas: 2)\n 13867: a3 = u64 [s1 + 0xb8]\n 13871: t0 = 416, jump @789\n      : @453 [@dyn 208] (gas: 22)\n 13877: u64 [s1 + 0xb0] = a0\n 13881: a0 = reverse a1\n 13883: u64 [s1 + 0xa8] = a0\n 13887: a0 = reverse a2\n 13889: u64 [s1 + 0xa0] = a0\n 13893: a0 = reverse a3\n 13895: u64 [s1 + 0x98] = a0\n 13899: a0 = sp + 0xffffffffffffffe0\n 13902: a0 = a0 & 0xffffffffffffffe0\n 13905: u64 [s1 + 0xb8] = a0\n 13909: sp = a0\n 13911: u64 [s1 + 1048] = 0\n 13915: a0 = u64 [s1 + 0xd8]\n 13919: a2 = s1 + 0x400\n 13923: u64 [a2 + 0x10] = a0\n 13926: a0 = u64 [s1 + 0xf0]\n 13930: u64 [a2 + 0x8] = a0\n 13933: a1 = s1 + 0x400\n 13937: a0 = u64 [s1 + 0xf8]\n 13941: u64 [a2] = a0\n 13943: a0 = 0\n 13945: ra = 418, jump @19\n      : @454 [@dyn 209] (gas: 12)\n 13951: a0 = u64 [s1 + 0x98]\n 13955: a3 = s1 + 0x300\n 13959: u64 [a3 + 0xf8] = a0\n 13963: a0 = u64 [s1 + 0xa0]\n 13967: u64 [a3 + 0xf0] = a0\n 13971: a0 = u64 [s1 + 0xa8]\n 13975: u64 [a3 + 0xe8] = a0\n 13979: a0 = 0x20\n 13982: a1 = s1 + 0x3e0\n 13986: a2 = u64 [s1 + 0xb0]\n 13990: u64 [a3 + 0xe0] = a2\n 13994: ra = 420, jump @19\n      : @455 [@dyn 210] (gas: 3)\n 14000: a1 = u64 [s1 + 0xc8]\n 14004: a0 = i32 [a1]\n 14006: jump @457 if a0 >u 63\n      : @456 (gas: 2)\n 14010: u32 [a1 + 0] = 0x40\n 14013: fallthrough\n      : @457 (gas: 24)\n 14014: a0 = sp + 0xffffffffffffffe0\n 14017: a0 = a0 & 0xffffffffffffffe0\n 14020: u64 [s1 + 0xc8] = a0\n 14024: sp = a0\n 14026: i32 a2 = a0 + 0\n 14028: a1 = 0x40\n 14031: a0 = u64 [s1 + 0xc0]\n 14035: ecalli 6 // 'hash_keccak_256'\n 14037: a3 = u64 [s1 + 0xc8]\n 14041: a0 = u64 [a3 + 0x18]\n 14044: a1 = u64 [a3 + 0x10]\n 14047: a2 = u64 [a3 + 0x8]\n 14050: a3 = u64 [a3]\n 14052: a4 = reverse a0\n 14054: a1 = reverse a1\n 14056: a2 = reverse a2\n 14058: a3 = reverse a3\n 14060: a0 = u64 [s1 + 0xb8]\n 14064: u64 [a0 + 0x18] = a3\n 14067: u64 [a0 + 0x10] = a2\n 14070: u64 [a0 + 0x8] = a1\n 14073: u64 [a0] = a4\n 14075: a1 = u64 [s1 + 0xe0]\n 14079: ra = 422, jump @22\n      : @458 [@dyn 211] (gas: 3)\n 14085: a0 = s1 + 0x3c0\n 14089: a1 = 0x40\n 14092: ra = 424, jump @17\n      : @459 [@dyn 212] (gas: 13)\n 14098: a4 = s1 + 0x300\n 14102: a0 = u64 [a4 + 0xd8]\n 14106: a1 = u64 [a4 + 0xd0]\n 14110: a2 = u64 [a4 + 0xc8]\n 14114: a3 = u64 [a4 + 0xc0]\n 14118: a0 = a0 | a2\n 14121: a2 = a3 | a1\n 14124: a2 = a2 | a0\n 14127: a2 = a2 >> 0x20\n 14130: a0 = a0 | a1\n 14133: a0 = a0 << 0x20\n 14136: a0 = a0 | a2\n 14139: jump @513 if a0 != 0\n      : @460 (gas: 12)\n 14143: a0 = u64 [s1 + 0x78]\n 14146: u64 [s1 + 0x3a0] = a0\n 14150: a0 = u64 [s1 + 0x80]\n 14154: u64 [s1 + 0x3a8] = a0\n 14158: a0 = u64 [s1 + 0x88]\n 14162: u64 [s1 + 0x3b0] = a0\n 14166: a1 = s1 + 0x3a0\n 14170: a0 = u64 [s1 + 0x90]\n 14174: u64 [s1 + 0x3b8] = a0\n 14178: a0 = a3\n 14180: u64 [s1 + 0xe0] = a3\n 14184: ra = 426, jump @19\n      : @461 [@dyn 213] (gas: 6)\n 14190: a0 = u64 [s1 + 0xd0]\n 14194: ra = 0x1ac\n 14198: ecalli 3 // 'caller'\n 14200: a2 = u64 [s1 + 0xe8]\n 14204: t0 = 0x1ae\n 14208: jump @773\n      : @462 [@dyn 214] (gas: 2)\n 14211: a2 = u64 [s1 + 0xe8]\n 14215: t0 = 430, jump @773\n      : @463 [@dyn 215] (gas: 31)\n 14221: t0 = a1 | a0\n 14224: a3 = a3 >> 0x20\n 14227: a2 = reverse a2\n 14229: a1 = a2 << 0x20\n 14232: a1 = a1 | a3\n 14235: a2 = a2 >> 0x20\n 14238: u64 [s1 + 856] = 0\n 14242: a0 = u64 [s1 + 0xd8]\n 14246: u64 [s1 + 0x350] = a0\n 14250: a0 = u64 [s1 + 0xf0]\n 14254: u64 [s1 + 0x348] = a0\n 14258: a0 = u64 [s1 + 0xf8]\n 14262: u64 [s1 + 0x340] = a0\n 14266: u64 [s1 + 888] = 0\n 14270: a3 = u64 [0x200a0]\n 14275: a4 = u64 [0x200a8]\n 14280: a5 = u64 [0x200b0]\n 14285: a0 = u64 [0x200b8]\n 14290: u64 [s1 + 0x398] = a3\n 14294: u64 [s1 + 0x390] = a4\n 14298: u64 [s1 + 0x388] = a5\n 14302: u64 [s1 + 0x380] = a0\n 14306: u64 [s1 + 0x370] = a2\n 14310: u64 [s1 + 0x368] = a1\n 14314: a1 = 0x20\n 14317: a2 = s1 + 0x380\n 14321: a3 = s1 + 0x360\n 14325: a4 = s1 + 0x340\n 14329: u64 [s1 + 0x360] = t0\n 14333: a0 = u64 [s1 + 0xe0]\n 14337: ra = 432, jump @23\n      : @464 [@dyn 216] (gas: 3)\n 14343: a0 = s1 + 0x320\n 14347: a1 = 0x40\n 14350: ra = 434, jump @17\n      : @465 [@dyn 217] (gas: 6)\n 14356: a4 = s1 + 0x300\n 14360: a3 = u64 [a4 + 0x38]\n 14363: a1 = u64 [a4 + 0x30]\n 14366: a2 = u64 [a4 + 0x28]\n 14369: a0 = u64 [a4 + 0x20]\n 14372: t0 = 436, jump @769\n      : @466 [@dyn 218] (gas: 1)\n 14378: jump @513 if a1 != 0\n      : @467 (gas: 8)\n 14382: u64 [s1 + 792] = 0\n 14386: u64 [s1 + 784] = 0\n 14390: u64 [s1 + 776] = 0\n 14394: a1 = s1 + 0x300\n 14398: u64 [s1 + 768] = 0x1\n 14403: u64 [s1 + 0xf8] = a0\n 14407: ra = 0x1d8\n 14411: jump @19\n      : @468 (gas: 8)\n 14414: u64 [a2 + 0] = 0\n 14416: u64 [a2 + 4294967288] = 0\n 14419: u64 [a2 + 4294967280] = 0\n 14422: u64 [a2 + 4294967272] = 0\n 14425: a0 = s1 + 0x1000\n 14429: i32 a0 = a0 + 0x60\n 14432: ecalli 10 // 'value_transferred'\n 14434: fallthrough\n      : @469 (gas: 10)\n 14435: a3 = s1 + 0x1078\n 14439: a4 = a3 + 0xffffffffffffff00\n 14443: a0 = u64 [a4 + 0xf8]\n 14447: a1 = u64 [a3]\n 14449: a2 = u64 [a4 + 0xf0]\n 14453: a3 = u64 [a4 + 0xe8]\n 14457: a1 = a1 | a2\n 14460: a0 = a0 | a3\n 14463: a0 = a0 | a1\n 14466: jump @571 if a0 != 0\n      : @470 (gas: 3)\n 14470: a0 = u64 [s1 + 0xf8]\n 14474: a1 = i32 [a0]\n 14476: jump @572 if a1 <=u 3\n      : @471 (gas: 8)\n 14481: a1 = s1 + 0x1078\n 14485: u64 [a1 + 32] = 0\n 14488: u64 [a1 + 24] = 0\n 14491: u64 [a1 + 16] = 0\n 14494: u64 [a1 + 8] = 0x3\n 14498: a0 = s1 + 0x260\n 14502: a1 = s1 + 0x1080\n 14506: ra = 438, jump @21\n      : @472 [@dyn 219] (gas: 34)\n 14512: a1 = s1 + 0x200\n 14516: a2 = u64 [a1 + 0x70]\n 14519: a3 = u64 [a1 + 0x68]\n 14522: a5 = u64 [a1 + 0x78]\n 14525: a0 = u64 [a1 + 0x60]\n 14528: a4 = a2 << 0x3f\n 14531: a1 = a3 >> 0x1\n 14534: t0 = a1 | a4\n 14537: a1 = a5 << 0x3f\n 14540: u64 [s1 + 0xf0] = a2\n 14544: a2 = a2 >> 0x1\n 14547: a1 = a1 | a2\n 14550: u64 [s1 + 0xe0] = a3\n 14554: a2 = a3 << 0x3f\n 14557: a3 = a0 >> 0x1\n 14560: a4 = a3 | a2\n 14563: u64 [s1 + 0xe8] = a5\n 14567: t1 = a5 >> 0x1\n 14570: u64 [s1 + 0xd0] = a0\n 14574: a5 = a0 & 0x1\n 14577: a3 = -a5\n 14579: t2 = a3 & a1\n 14582: a2 = a3 & t0\n 14585: a3 = a3 & t1\n 14588: a0 = a4 & 0x7f\n 14591: u64 [s1 + 0xd8] = a0\n 14595: a4 = a0 if a5 == 0\n 14598: a0 = a4 <u 0x20\n 14601: a0 = 0 if a2 != 0\n 14603: a1 = t2 | a3\n 14606: a0 = 0 if a1 != 0\n 14608: u64 [s1 + 0xf8] = a5\n 14612: a1 = a5 <u 0x1\n 14615: jump @573 if a1 != a0\n      : @473 (gas: 12)\n 14619: u64 [s1 + 0xb8] = a4\n 14623: a5 = s1 + 0x200\n 14627: u64 [a5 + 0x40] = a4\n 14630: u64 [s1 + 0xa8] = a2\n 14634: u64 [a5 + 0x48] = a2\n 14637: u64 [s1 + 0xb0] = t2\n 14641: u64 [s1 + 0x250] = t2\n 14645: a0 = 0x80\n 14649: a1 = s1 + 0x240\n 14653: u64 [s1 + 0xa0] = a3\n 14657: u64 [a5 + 0x58] = a3\n 14660: ra = 440, jump @19\n      : @474 [@dyn 220] (gas: 2)\n 14666: a0 = u64 [s1 + 0xf8]\n 14670: jump @501 if a0 != 0\n      : @475 (gas: 13)\n 14674: a0 = u64 [s1 + 0xd0]\n 14678: a0 = a0 & 0xffffffffffffff00\n 14682: a1 = u64 [s1 + 0xe0]\n 14686: a2 = s1 + 0x100\n 14690: u64 [a2 + 0xc8] = a1\n 14694: u64 [a2 + 0xc0] = a0\n 14698: a0 = u64 [s1 + 0xf0]\n 14702: u64 [a2 + 0xd0] = a0\n 14706: a0 = u64 [s1 + 0xe8]\n 14710: u64 [a2 + 0xd8] = a0\n 14714: a0 = 0xa0\n 14718: a1 = s1 + 0x1c0\n 14722: ra = 442, jump @19\n      : @476 [@dyn 221] (gas: 7)\n 14728: a1 = 0\n 14730: a0 = 0\n 14732: t0 = 0\n 14734: a3 = 0xc0\n 14738: a2 = u64 [s1 + 0xd8]\n 14742: a3 = 0xa0 if a2 == 0\n 14746: jump @509\n      : @477 (gas: 11)\n 14749: a0 = s1 + 0x1078\n 14753: u64 [a0 + 672] = 0\n 14757: u64 [a0 + 664] = 0\n 14761: u64 [a0 + 656] = 0\n 14765: u64 [a0 + 648] = 0\n 14769: a0 = s1 + 0x1000\n 14773: i32 a0 = a0 + 0x300\n 14777: ra = 0x1bc\n 14781: ecalli 10 // 'value_transferred'\n 14783: t0 = 0x1be\n 14787: jump @794\n      : @478 [@dyn 222] (gas: 1)\n 14790: t0 = 446, jump @794\n      : @479 [@dyn 223] (gas: 8)\n 14796: a0 = u64 [a4 + 0x98]\n 14800: a1 = u64 [a4 + 0xa0]\n 14804: a2 = u64 [a4 + 0x90]\n 14808: a3 = u64 [a4 + 0x88]\n 14812: a1 = a1 | a2\n 14815: a0 = a0 | a3\n 14818: a0 = a0 | a1\n 14821: jump @579 if a0 != 0\n      : @480 (gas: 3)\n 14825: a0 = u64 [s1 + 0xf8]\n 14829: a0 = i32 [a0]\n 14831: jump @580 if a0 <=u 3\n      : @481 (gas: 9)\n 14836: a1 = s1 + 0x1078\n 14840: u64 [a1 + 704] = 0\n 14844: u64 [a1 + 696] = 0\n 14848: u64 [a1 + 688] = 0\n 14852: u64 [a1 + 680] = 0x5\n 14857: a0 = s1 + 0x7ff\n 14861: a0 = a0 + 0x361\n 14865: a1 = s1 + 0x1320\n 14869: ra = 448, jump @21\n      : @482 [@dyn 224] (gas: 13)\n 14875: a1 = s1 + 0x7ff\n 14879: a1 = a1 + 0x79\n 14882: a2 = a1 + 0x200\n 14886: a0 = u64 [a2 + 0xf8]\n 14890: u64 [s1 + 0xe8] = a0\n 14894: a0 = u64 [a2 + 0xf0]\n 14898: u64 [s1 + 0xf8] = a0\n 14902: a0 = u64 [a2 + 0xe8]\n 14906: u64 [s1 + 0xf0] = a0\n 14910: a0 = s1 + 0x7ff\n 14914: a0 = a0 + 0x341\n 14918: a1 = 0x40\n 14921: ra = 450, jump @17\n      : @483 [@dyn 225] (gas: 8)\n 14927: a3 = s1 + 0x7ff\n 14931: a3 = a3 + 0x79\n 14934: a5 = a3 + 0x200\n 14938: a4 = u64 [a5 + 0xe0]\n 14942: a1 = u64 [a5 + 0xd8]\n 14946: a2 = u64 [a5 + 0xd0]\n 14950: a0 = u64 [a5 + 0xc8]\n 14954: t0 = 452, jump @778\n      : @484 [@dyn 226] (gas: 1)\n 14960: jump @513 if a1 != 0\n      : @485 (gas: 15)\n 14964: a1 = u64 [s1 + 0xe8]\n 14968: a1 = a1 << 0x20\n 14971: a2 = a1 >> 0x20\n 14974: u64 [a3 + 704] = 0\n 14978: a1 = u64 [s1 + 0xf0]\n 14982: a4 = a3 + 0x200\n 14986: u64 [a4 + 0xa8] = a1\n 14990: a1 = u64 [s1 + 0xf8]\n 14994: u64 [a4 + 0xb0] = a1\n 14998: a1 = s1 + 0x7ff\n 15002: a1 = a1 + 0x321\n 15006: u64 [a4 + 0xb8] = a2\n 15010: u64 [s1 + 0xf8] = a0\n 15014: ra = 0x1d8\n 15018: jump @19\n      : @486 (gas: 10)\n 15021: u64 [a2 + 800] = 0\n 15025: u64 [a2 + 792] = 0\n 15029: u64 [a2 + 784] = 0\n 15033: u64 [a2 + 776] = 0\n 15037: a0 = s1 + 0x1000\n 15041: i32 a0 = a0 + 0x380\n 15045: ra = 0x1c6\n 15049: ecalli 10 // 'value_transferred'\n 15051: t0 = 0x1c8\n 15055: jump @793\n      : @487 [@dyn 227] (gas: 1)\n 15058: t0 = 456, jump @793\n      : @488 [@dyn 228] (gas: 1)\n 15064: t0 = 458, jump @787\n      : @489 [@dyn 229] (gas: 1)\n 15070: jump @581 if a0 != 0\n      : @490 (gas: 4)\n 15074: a0 = u64 [s1 + 0xf8]\n 15078: a0 = i32 [a0]\n 15080: a1 = 0x43\n 15083: jump @582 if a1 >=u a0\n      : @491 (gas: 5)\n 15087: a0 = s1 + 0x7ff\n 15091: a0 = a0 + 0x601\n 15095: ra = 0x1cc\n 15099: t0 = 0x276\n 15103: jump @788\n      : @492 [@dyn 230] (gas: 33)\n 15106: a1 = s1 + 0x7ff\n 15110: a1 = a1 + 0x79\n 15113: a2 = a1 + 0x500\n 15117: a0 = u64 [a2 + 0x88]\n 15121: u64 [s1 + 0xf8] = a0\n 15125: a0 = u64 [a2 + 0x90]\n 15129: u64 [s1 + 0xf0] = a0\n 15133: a0 = u64 [a2 + 0x98]\n 15137: u64 [s1 + 0xe8] = a0\n 15141: a0 = u64 [a2 + 0xa0]\n 15145: u64 [s1 + 0xe0] = a0\n 15149: a0 = s1 + 0x1000\n 15153: i32 a0 = a0 + 0x3a0\n 15157: a1 = 0x24\n 15160: ecalli 1 // 'call_data_load'\n 15162: a0 = s1 + 0x1078\n 15166: a2 = a0 + 0x300\n 15170: a1 = u64 [a2 + 0x28]\n 15173: u64 [s1 + 0xd8] = a1\n 15177: a1 = u64 [a2 + 0x30]\n 15180: u64 [s1 + 0xd0] = a1\n 15184: a1 = u64 [a2 + 0x38]\n 15187: u64 [s1 + 0xc8] = a1\n 15191: a0 = u64 [a2 + 0x40]\n 15194: u64 [s1 + 0xc0] = a0\n 15198: a0 = 0x30110\n 15203: u64 [s1 + 0xb8] = a0\n 15207: i32 a0 = a0 + 0\n 15209: ra = 0x1ce\n 15213: ecalli 3 // 'caller'\n 15215: a2 = u64 [s1 + 0xb8]\n 15219: t0 = 0x1d0\n 15223: jump @772\n      : @493 [@dyn 231] (gas: 2)\n 15226: a2 = u64 [s1 + 0xb8]\n 15230: t0 = 464, jump @772\n      : @494 [@dyn 232] (gas: 30)\n 15236: a3 = s1 + 0x7ff\n 15240: a3 = a3 + 0x79\n 15243: a4 = u64 [s1 + 0xc0]\n 15247: a5 = a3 + 0x500\n 15251: u64 [a5 + 0x40] = a4\n 15254: a4 = u64 [s1 + 0xc8]\n 15258: u64 [a5 + 0x38] = a4\n 15261: a4 = u64 [s1 + 0xd0]\n 15265: u64 [a5 + 0x30] = a4\n 15268: a4 = u64 [s1 + 0xd8]\n 15272: u64 [a5 + 0x28] = a4\n 15275: a4 = u64 [s1 + 0xe0]\n 15279: u64 [a5 + 0x60] = a4\n 15282: a4 = u64 [s1 + 0xe8]\n 15286: u64 [a5 + 0x58] = a4\n 15289: a4 = u64 [s1 + 0xf0]\n 15293: u64 [a5 + 0x50] = a4\n 15296: a4 = u64 [s1 + 0xf8]\n 15300: u64 [a5 + 0x48] = a4\n 15303: u64 [a5 + 0x78] = a2\n 15306: u64 [a5 + 0x70] = a0\n 15309: u64 [a5 + 0x68] = a1\n 15312: a0 = s1 + 0x7ff\n 15316: a0 = a0 + 0x5e1\n 15320: a1 = s1 + 0x7ff\n 15324: a1 = a1 + 0x5c1\n 15328: a2 = s1 + 0x7ff\n 15332: a2 = a2 + 0x5a1\n 15336: u64 [a3 + 1408] = 0\n 15340: ra = 466, jump @705\n      : @495 [@dyn 233] (gas: 4)\n 15346: a0 = s1 + 0x7ff\n 15350: a0 = a0 + 0x581\n 15354: a1 = 0x40\n 15357: ra = 468, jump @17\n      : @496 [@dyn 234] (gas: 8)\n 15363: a3 = s1 + 0x7ff\n 15367: a3 = a3 + 0x79\n 15370: a5 = a3 + 0x500\n 15374: a4 = u64 [a5 + 0x20]\n 15377: a1 = u64 [a5 + 0x18]\n 15380: a2 = u64 [a5 + 0x10]\n 15383: a0 = u64 [a5 + 0x8]\n 15386: t0 = 470, jump @778\n      : @497 [@dyn 235] (gas: 1)\n 15392: jump @513 if a1 != 0\n      : @498 (gas: 8)\n 15396: u64 [a3 + 1280] = 0\n 15400: u64 [a3 + 1272] = 0\n 15404: u64 [a3 + 1256] = 0x1\n 15409: a1 = s1 + 0x7ff\n 15413: a1 = a1 + 0x561\n 15417: u64 [a3 + 1264] = 0\n 15421: u64 [s1 + 0xf8] = a0\n 15425: ra = 472, jump @19\n      : @499 [@dyn 236] (gas: 3)\n 15431: a1 = 0x20\n 15434: a0 = u64 [s1 + 0xf8]\n 15438: ra = 474, jump @26\n      : @500 [@dyn 237] (gas: 5)\n 15444: i32 a1 = a0 + 0\n 15446: a2 = 0x20\n 15449: a0 = 0\n 15451: ecalli 7 // 'seal_return'\n 15453: fallthrough\n      : @501 (gas: 7)\n 15454: u64 [s1 + 568] = 0\n 15458: u64 [s1 + 560] = 0\n 15462: u64 [s1 + 552] = 0\n 15466: a1 = s1 + 0x220\n 15470: u64 [s1 + 544] = 0x3\n 15475: a0 = 0\n 15477: ra = 476, jump @19\n      : @502 [@dyn 238] (gas: 21)\n 15483: a0 = sp + 0xffffffffffffffe0\n 15486: a1 = a0 & 0xffffffffffffffe0\n 15489: sp = a1\n 15491: u64 [s1 + 248] = 0\n 15495: a5 = 0\n 15497: t2 = 0\n 15499: t0 = 0\n 15501: t1 = u64 [0x200c0]\n 15506: a2 = u64 [0x200c8]\n 15511: ra = u64 [0x200d0]\n 15516: a0 = u64 [0x200d8]\n 15521: u64 [a1 + 0x18] = t1\n 15524: u64 [s1 + 0xd0] = a2\n 15528: u64 [a1 + 0x10] = a2\n 15531: u64 [a1 + 0x8] = ra\n 15534: a2 = a0\n 15536: u64 [a1] = a0\n 15538: a0 = 0xffffff60\n 15548: u64 [s1 + 0x98] = a0\n 15552: u64 [s1 + 0x90] = a1\n 15556: fallthrough\n      : @503 (gas: 19)\n 15557: u64 [s1 + 0xd8] = a2\n 15561: a0 = u64 [s1 + 0xb8]\n 15565: a2 = u64 [s1 + 0xf8]\n 15569: a0 = a2 <u a0\n 15572: a2 = u64 [s1 + 0xa8]\n 15576: a3 = a5 ^ a2\n 15579: u64 [s1 + 0xf0] = a5\n 15583: a2 = a5 <u a2\n 15586: a2 = a0 if a3 == 0\n 15589: a4 = u64 [s1 + 0xb0]\n 15593: a0 = t2 <u a4\n 15596: a3 = u64 [s1 + 0xa0]\n 15600: a5 = t0 ^ a3\n 15603: a3 = t0 <u a3\n 15606: a3 = a0 if a5 == 0\n 15609: a0 = t2 ^ a4\n 15612: a0 = a0 | a5\n 15615: a3 = a2 if a0 == 0\n 15618: jump @508 if a3 == 0\n      : @504 (gas: 6)\n 15622: a0 = s1 + 0x200\n 15626: u64 [s1 + 0xe8] = t0\n 15630: u64 [s1 + 0xc8] = t1\n 15634: u64 [s1 + 0xe0] = t2\n 15638: u64 [s1 + 0xc0] = ra\n 15642: ra = 478, jump @21\n      : @505 [@dyn 239] (gas: 10)\n 15648: a5 = u64 [s1 + 0xe0]\n 15652: a0 = u64 [s1 + 0xe8]\n 15656: a0 = a0 | a5\n 15659: a1 = u64 [s1 + 0xf8]\n 15663: a2 = u64 [s1 + 0x98]\n 15667: a1 = a1 <u a2\n 15670: a2 = u64 [s1 + 0xf0]\n 15674: a1 = 0 if a2 != 0\n 15676: a1 = 0 if a0 != 0\n 15678: jump @513 if a1 == 0\n      : @506 (gas: 14)\n 15682: t0 = u64 [s1 + 0x218]\n 15686: a0 = s1 + 0x200\n 15690: a1 = u64 [a0 + 0x10]\n 15693: a3 = u64 [a0 + 0x8]\n 15696: a4 = u64 [a0]\n 15698: a0 = u64 [s1 + 0xf8]\n 15702: i32 a0 = a0 + 0xa0\n 15706: a2 = s1 + 0x100\n 15710: u64 [a2 + 0xe0] = a4\n 15714: u64 [a2 + 0xe8] = a3\n 15718: u64 [a2 + 0xf0] = a1\n 15722: a1 = s1 + 0x1e0\n 15726: u64 [s1 + 0x1f8] = t0\n 15730: ra = 480, jump @19\n      : @507 [@dyn 240] (gas: 36)\n 15736: t0 = u64 [s1 + 0xe8]\n 15740: a5 = u64 [s1 + 0xd8]\n 15744: a5 = a5 + 0x1\n 15747: a0 = a5 <u 0x1\n 15750: ra = u64 [s1 + 0xc0]\n 15754: ra = ra + a0\n 15757: a0 = a5 | ra\n 15760: a0 = a0 <u 0x1\n 15763: a1 = u64 [s1 + 0xd0]\n 15767: a0 = a0 + a1\n 15770: a1 = a0 <u a1\n 15773: a3 = u64 [s1 + 0xc8]\n 15777: a3 = a3 + a1\n 15780: a1 = u64 [s1 + 0xf8]\n 15784: t1 = a1 + 0x20\n 15787: a2 = t1 <u a1\n 15790: a4 = u64 [s1 + 0xf0]\n 15794: t2 = a4 + a2\n 15797: a4 = t2 <u a4\n 15800: a4 = a2 if a2 == 0\n 15803: a1 = u64 [s1 + 0xe0]\n 15807: a4 = a4 + a1\n 15810: a2 = a4 <u a1\n 15813: t0 = t0 + a2\n 15816: a1 = u64 [s1 + 0x90]\n 15820: u64 [a1 + 0x8] = ra\n 15823: a2 = a5\n 15825: u64 [a1] = a5\n 15827: u64 [a1 + 0x10] = a0\n 15830: u64 [a1 + 0x18] = a3\n 15833: u64 [s1 + 0xd0] = a0\n 15837: u64 [s1 + 0xf8] = t1\n 15841: a5 = t2\n 15843: t2 = a4\n 15845: t1 = a3\n 15847: jump @503\n      : @508 (gas: 11)\n 15850: a0 = u64 [s1 + 0xf8]\n 15854: a3 = a0 + 0xa0\n 15858: a0 = a3 <u a0\n 15861: a2 = u64 [s1 + 0xf0]\n 15865: a1 = a2 + a0\n 15868: a2 = a1 <u a2\n 15871: a2 = a0 if a0 == 0\n 15874: a0 = t2 + a2\n 15877: a2 = a0 <u t2\n 15880: t0 = t0 + a2\n 15883: fallthrough\n      : @509 (gas: 37)\n 15884: t1 = a3 + 0xffffffffffffff9f\n 15887: a3 = t1 <u a3\n 15890: a5 = a1 + a3\n 15893: a5 = a5 + 0xffffffffffffffff\n 15896: u64 [s1 + 0xd8] = a5\n 15900: a2 = a5 ^ a1\n 15903: a1 = a5 <u a1\n 15906: a1 = a3 if a2 == 0\n 15909: a3 = a0 + 0xffffffffffffffff\n 15912: a4 = a3 + a1\n 15915: a1 = a4 <u a3\n 15918: a0 = a0 <u 0x1\n 15921: a2 = t0 - a0\n 15924: t0 = a2 + a1\n 15927: u64 [s1 + 0xc0] = t0\n 15931: a0 = t1 & 0xffffffffffffffe0\n 15934: u64 [s1 + 0xd0] = a0\n 15938: a3 = a0 + 0x80\n 15942: u64 [s1 + 0xf8] = a3\n 15946: a0 = a3 <u a0\n 15949: a2 = a5 + a0\n 15952: u64 [s1 + 0xf0] = a2\n 15956: a1 = a2 <u a5\n 15959: a1 = a0 if a0 == 0\n 15962: u64 [s1 + 0xc8] = a4\n 15966: a1 = a1 + a4\n 15969: u64 [s1 + 0xe8] = a1\n 15973: a0 = a1 <u a4\n 15976: t0 = t0 + a0\n 15979: u64 [s1 + 0xe0] = t0\n 15983: u64 [s1 + 0x1a0] = a3\n 15987: u64 [s1 + 0x1a8] = a2\n 15991: u64 [s1 + 0x1b0] = a1\n 15995: a0 = 0x40\n 15998: a1 = s1 + 0x1a0\n 16002: u64 [s1 + 0x1b8] = t0\n 16006: ra = 482, jump @19\n      : @510 [@dyn 241] (gas: 17)\n 16012: u64 [s1 + 344] = 0\n 16016: u64 [s1 + 336] = 0\n 16020: u64 [s1 + 328] = 0\n 16024: a4 = s1 + 0x100\n 16028: u64 [a4 + 64] = 0x80\n 16033: a0 = u64 [s1 + 0xe0]\n 16037: u64 [a4 + 0x78] = a0\n 16040: a0 = u64 [s1 + 0xe8]\n 16044: u64 [a4 + 0x70] = a0\n 16047: a0 = u64 [s1 + 0xf0]\n 16051: u64 [a4 + 0x68] = a0\n 16054: a0 = s1 + 0x180\n 16058: a1 = s1 + 0x160\n 16062: a2 = s1 + 0x140\n 16066: a3 = u64 [s1 + 0xf8]\n 16070: u64 [a4 + 0x60] = a3\n 16073: ra = 484, jump @676\n      : @511 [@dyn 242] (gas: 10)\n 16079: a0 = u64 [s1 + 0xc8]\n 16083: a1 = u64 [s1 + 0xc0]\n 16087: a0 = a0 | a1\n 16090: a1 = 0xffffff80\n 16100: a2 = u64 [s1 + 0xd0]\n 16104: a1 = a2 <u a1\n 16107: a2 = u64 [s1 + 0xd8]\n 16111: a1 = 0 if a2 != 0\n 16113: a1 = 0 if a0 != 0\n 16115: jump @513 if a1 == 0\n      : @512 (gas: 30)\n 16118: ra = u64 [s1 + 0x190]\n 16122: a1 = u64 [s1 + 0x198]\n 16126: t1 = u64 [s1 + 0x180]\n 16130: a3 = u64 [s1 + 0x188]\n 16134: a2 = u64 [s1 + 0xe8]\n 16138: a4 = ra <u a2\n 16141: a1 = a1 - a4\n 16144: a0 = u64 [s1 + 0xe0]\n 16148: t0 = a1 - a0\n 16151: a1 = u64 [s1 + 0xf0]\n 16155: a4 = a3 ^ a1\n 16158: a5 = a3 <u a1\n 16161: a0 = u64 [s1 + 0xf8]\n 16165: t2 = t1 <u a0\n 16168: a5 = t2 if a4 == 0\n 16171: a2 = ra - a2\n 16174: a4 = a2 <u a5\n 16177: a4 = t0 - a4\n 16180: a5 = a2 - a5\n 16183: a3 = a3 - t2\n 16186: a3 = a3 - a1\n 16189: a1 = t1 - a0\n 16192: a2 = a1 | a5\n 16195: a3 = a3 | a4\n 16198: a2 = a2 | a3\n 16201: a2 = a2 >> 0x20\n 16204: a3 = a3 | a5\n 16207: a3 = a3 << 0x20\n 16210: a2 = a2 | a3\n 16213: jump @607 if a2 == 0\n      : @513 (gas: 1)\n 16217: trap\n      : @514 (gas: 10)\n 16218: a2 = s1 + 0x7ff\n 16222: a2 = a2 + 0x79\n 16225: u64 [a2 + 1152] = 0\n 16229: u64 [a2 + 1144] = 0\n 16233: u64 [a2 + 1136] = 0\n 16237: a1 = s1 + 0x7ff\n 16241: a1 = a1 + 0x4e1\n 16245: u64 [a2 + 1128] = 0x4\n 16250: a0 = 0\n 16252: ra = 486, jump @19\n      : @515 [@dyn 243] (gas: 37)\n 16258: a0 = sp + 0xffffffffffffffe0\n 16261: a4 = a0 & 0xffffffffffffffe0\n 16264: sp = a4\n 16266: u64 [s1 + 248] = 0\n 16270: t2 = 0\n 16272: t1 = 0\n 16274: u64 [s1 + 240] = 0\n 16278: t0 = u64 [0x20060]\n 16283: a3 = u64 [0x20068]\n 16288: a1 = u64 [s1 + 0x70]\n 16291: a0 = a1 + 0x20\n 16294: u64 [s1 + 0x90] = a0\n 16298: a0 = a0 <u a1\n 16301: a1 = u64 [s1 + 0x60]\n 16304: a2 = a1 + a0\n 16307: u64 [s1 + 0x88] = a2\n 16311: a1 = a2 <u a1\n 16314: a1 = a0 if a0 == 0\n 16317: a5 = u64 [0x20070]\n 16322: a0 = u64 [0x20078]\n 16327: ra = t0\n 16329: u64 [a4 + 0x18] = t0\n 16332: u64 [s1 + 0xb8] = a3\n 16336: u64 [a4 + 0x10] = a3\n 16339: t0 = a5\n 16341: u64 [a4 + 0x8] = a5\n 16344: u64 [s1 + 0xd8] = a4\n 16348: a2 = a0\n 16350: u64 [a4] = a0\n 16352: a0 = u64 [s1 + 0x68]\n 16355: a1 = a1 + a0\n 16358: u64 [s1 + 0x80] = a1\n 16362: a0 = a1 <u a0\n 16365: a1 = u64 [s1 + 0x58]\n 16368: a0 = a0 + a1\n 16371: u64 [s1 + 0x78] = a0\n 16374: fallthrough\n      : @516 (gas: 21)\n 16375: u64 [s1 + 0xc0] = a2\n 16379: u64 [s1 + 0xc8] = t0\n 16383: u64 [s1 + 0xd0] = ra\n 16387: a0 = u64 [s1 + 0xb0]\n 16391: a1 = u64 [s1 + 0xf8]\n 16395: a0 = a1 <u a0\n 16398: a2 = u64 [s1 + 0xa0]\n 16402: a1 = t2 ^ a2\n 16405: a2 = t2 <u a2\n 16408: a2 = a0 if a1 == 0\n 16411: a4 = u64 [s1 + 0xa8]\n 16415: a0 = t1 <u a4\n 16418: a3 = u64 [s1 + 0x98]\n 16422: a1 = u64 [s1 + 0xf0]\n 16426: a5 = a1 ^ a3\n 16429: a3 = a1 <u a3\n 16432: a3 = a0 if a5 == 0\n 16435: a0 = t1 ^ a4\n 16438: a0 = a0 | a5\n 16441: a3 = a2 if a0 == 0\n 16444: jump @518 if a3 != 0\n      : @517 (gas: 1)\n 16447: jump @326\n      : @518 (gas: 6)\n 16450: a0 = s1 + 0x7ff\n 16454: a0 = a0 + 0x4c1\n 16458: a1 = u64 [s1 + 0xd8]\n 16462: u64 [s1 + 0xe8] = t1\n 16466: u64 [s1 + 0xe0] = t2\n 16470: ra = 488, jump @21\n      : @519 [@dyn 244] (gas: 30)\n 16476: t2 = u64 [s1 + 0xf8]\n 16480: t1 = u64 [s1 + 0xe0]\n 16484: ra = u64 [s1 + 0xe8]\n 16488: a1 = u64 [s1 + 0x90]\n 16492: a0 = a1 + t2\n 16495: a1 = a0 <u a1\n 16498: a4 = u64 [s1 + 0x88]\n 16502: a2 = a4 + t1\n 16505: a2 = a2 + a1\n 16508: a5 = a2 ^ a4\n 16511: a4 = a2 <u a4\n 16514: a4 = a1 if a5 == 0\n 16517: a5 = u64 [s1 + 0x80]\n 16521: a1 = a5 + ra\n 16524: t0 = a1 <u a5\n 16527: a5 = u64 [s1 + 0xf0]\n 16531: a3 = u64 [s1 + 0x78]\n 16534: a5 = a5 + a3\n 16537: a5 = a5 + t0\n 16540: a4 = a4 + a1\n 16543: a1 = a4 <u a1\n 16546: a1 = a1 + a5\n 16549: a1 = a1 | a2\n 16552: a2 = a0 | a4\n 16555: a2 = a2 | a1\n 16558: a1 = a1 | a4\n 16561: a2 = a2 >> 0x20\n 16564: a1 = a1 << 0x20\n 16567: a1 = a1 | a2\n 16570: jump @513 if a1 != 0\n      : @520 (gas: 15)\n 16574: a5 = s1 + 0x7ff\n 16578: a5 = a5 + 0x79\n 16581: t0 = u64 [a5 + 0x460]\n 16585: a3 = a5 + 0x400\n 16589: a1 = u64 [a3 + 0x58]\n 16592: a2 = u64 [a3 + 0x50]\n 16595: a4 = u64 [a3 + 0x48]\n 16598: u64 [a3 + 0x28] = a4\n 16601: u64 [a3 + 0x30] = a2\n 16604: u64 [a3 + 0x38] = a1\n 16607: a1 = s1 + 0x7ff\n 16611: a1 = a1 + 0x4a1\n 16615: u64 [a5 + 0x440] = t0\n 16619: u64 [s1 + 0xf8] = t2\n 16623: ra = 490, jump @19\n      : @521 [@dyn 245] (gas: 39)\n 16629: a3 = u64 [s1 + 0xc0]\n 16633: a3 = a3 + 0x1\n 16636: a0 = a3 <u 0x1\n 16639: ra = u64 [s1 + 0xc8]\n 16643: ra = ra + a0\n 16646: a0 = a3 | ra\n 16649: a0 = a0 <u 0x1\n 16652: a1 = u64 [s1 + 0xb8]\n 16656: t2 = a1 + a0\n 16659: a1 = t2 <u a1\n 16662: a0 = u64 [s1 + 0xd0]\n 16666: a0 = a0 + a1\n 16669: a1 = u64 [s1 + 0xf8]\n 16673: t1 = a1 + 0x20\n 16676: a2 = t1 <u a1\n 16679: a4 = u64 [s1 + 0xe0]\n 16683: a1 = a4 + a2\n 16686: a4 = a1 <u a4\n 16689: a4 = a2 if a2 == 0\n 16692: a2 = u64 [s1 + 0xe8]\n 16696: a4 = a4 + a2\n 16699: a2 = a4 <u a2\n 16702: a5 = u64 [s1 + 0xf0]\n 16706: a5 = a5 + a2\n 16709: u64 [s1 + 0xf0] = a5\n 16713: t0 = ra\n 16715: a5 = u64 [s1 + 0xd8]\n 16719: u64 [a5 + 0x8] = ra\n 16722: a2 = a3\n 16724: u64 [a5] = a3\n 16726: a3 = t2\n 16728: u64 [a5 + 0x10] = a3\n 16731: ra = a0\n 16733: u64 [a5 + 0x18] = a0\n 16736: u64 [s1 + 0xb8] = a3\n 16740: u64 [s1 + 0xf8] = t1\n 16744: t2 = a1\n 16746: t1 = a4\n 16748: jump @516\n      : @522 (gas: 6)\n 16751: a1 = 0x20110\n 16756: i32 a1 = a1 + 0\n 16758: a0 = 0x1\n 16761: a2 = 0\n 16763: ecalli 7 // 'seal_return'\n 16765: jump @617\n      : @523 (gas: 6)\n 16768: a1 = 0x20110\n 16773: i32 a1 = a1 + 0\n 16775: a0 = 0x1\n 16778: a2 = 0\n 16780: ecalli 7 // 'seal_return'\n 16782: jump @617\n      : @524 (gas: 13)\n 16785: a0 = s1 + 0x1000\n 16789: u64 [a0 + 4294965328] = 0\n 16793: a0 = s1 + 0x1000\n 16797: u64 [a0 + 4294965320] = 0\n 16801: a0 = s1 + 0x1000\n 16805: u64 [a0 + 4294965312] = 0\n 16809: a0 = 0xec442f0500000000\n 16819: a1 = s1 + 0x7ff\n 16823: a1 = a1 + 0x41\n 16826: a2 = s1 + 0x1000\n 16830: u64 [a2 + 0xfffffffffffff858] = a0\n 16834: a0 = 0\n 16836: ra = 492, jump @19\n      : @525 [@dyn 246] (gas: 12)\n 16842: a0 = s1 + 0x1000\n 16846: u64 [a0 + 4294965304] = 0\n 16850: a0 = s1 + 0x1000\n 16854: u64 [a0 + 4294965296] = 0\n 16858: a0 = s1 + 0x1000\n 16862: u64 [a0 + 4294965288] = 0\n 16866: a0 = 0x4\n 16869: a1 = s1 + 0x7ff\n 16873: a1 = a1 + 0x21\n 16876: a2 = s1 + 0x1000\n 16880: u64 [a2 + 4294965280] = 0\n 16884: ra = 494, jump @19\n      : @526 [@dyn 247] (gas: 2)\n 16890: a1 = i32 [0x20104]\n 16895: jump @528 if a1 >u 63\n      : @527 (gas: 3)\n 16899: u32 [0x20104] = 0x40\n 16905: a1 = 0x20110\n 16910: jump @589\n      : @528 (gas: 2)\n 16913: a1 = 0x20110\n 16918: jump @589\n      : @529 (gas: 10)\n 16921: a0 = s1 + 0x7ff\n 16925: a0 = a0 + 0x79\n 16928: u64 [a0 + 24] = 0\n 16931: u64 [a0 + 16] = 0\n 16934: u64 [a0 + 8] = 0\n 16937: a2 = a0\n 16939: t0 = 0x1f0\n 16943: a0 = 0x4e487b7100000000\n 16953: a1 = s1 + 0x7ff\n 16957: fallthrough\n      : @530 [@dyn 248] (gas: 4)\n 16958: a1 = a1 + 0x81\n 16962: u64 [a2 + 0x20] = a0\n 16965: a0 = 0\n 16967: ra = 498, jump @19\n      : @531 [@dyn 249] (gas: 12)\n 16973: a0 = s1 + 0x7ff\n 16977: a0 = a0 + 0x79\n 16980: u64 [a0 + 0] = 0\n 16982: u64 [a0 + 4294967288] = 0\n 16985: a1 = s1 + 0x1000\n 16989: u64 [a1 + 4294965344] = 0x11\n 16994: a0 = 0x4\n 16997: a1 = s1 + 0x7ff\n 17001: a1 = a1 + 0x61\n 17004: a2 = s1 + 0x1000\n 17008: u64 [a2 + 4294965352] = 0\n 17012: ra = 500, jump @19\n      : @532 [@dyn 250] (gas: 2)\n 17018: a1 = i32 [0x20104]\n 17023: jump @534 if a1 >u 63\n      : @533 (gas: 3)\n 17027: u32 [0x20104] = 0x40\n 17033: a1 = 0x20110\n 17038: jump @589\n      : @534 (gas: 2)\n 17041: a1 = 0x20110\n 17046: jump @589\n      : @535 (gas: 6)\n 17049: a1 = 0x20110\n 17054: i32 a1 = a1 + 0\n 17056: a0 = 0x1\n 17059: a2 = 0\n 17061: ecalli 7 // 'seal_return'\n 17063: jump @617\n      : @536 (gas: 6)\n 17066: a1 = 0x20110\n 17071: i32 a1 = a1 + 0\n 17073: a0 = 0x1\n 17076: a2 = 0\n 17078: ecalli 7 // 'seal_return'\n 17080: jump @617\n      : @537 (gas: 6)\n 17083: a1 = 0x20110\n 17088: i32 a1 = a1 + 0\n 17090: a0 = 0x1\n 17093: a2 = 0\n 17095: ecalli 7 // 'seal_return'\n 17097: jump @617\n      : @538 (gas: 6)\n 17100: a1 = 0x20110\n 17105: i32 a1 = a1 + 0\n 17107: a0 = 0x1\n 17110: a2 = 0\n 17112: ecalli 7 // 'seal_return'\n 17114: jump @617\n      : @539 (gas: 9)\n 17117: a2 = s1 + 0x7ff\n 17121: a2 = a2 + 0x79\n 17124: u64 [a2 + 824] = 0\n 17128: u64 [a2 + 816] = 0\n 17132: u64 [a2 + 808] = 0\n 17136: t0 = 0x1f6\n 17140: a0 = 0x4e487b7100000000\n 17150: a1 = s1 + 0x7ff\n 17154: fallthrough\n      : @540 [@dyn 251] (gas: 4)\n 17155: a1 = a1 + 0x3a1\n 17159: u64 [a2 + 0x340] = a0\n 17163: a0 = 0\n 17165: ra = 504, jump @19\n      : @541 [@dyn 252] (gas: 11)\n 17171: a1 = s1 + 0x7ff\n 17175: a1 = a1 + 0x79\n 17178: u64 [a1 + 800] = 0\n 17182: u64 [a1 + 792] = 0\n 17186: u64 [a1 + 776] = 0x22\n 17191: a2 = a1\n 17193: a0 = 0x4\n 17196: a1 = s1 + 0x7ff\n 17200: a1 = a1 + 0x381\n 17204: u64 [a2 + 784] = 0\n 17208: ra = 506, jump @19\n      : @542 [@dyn 253] (gas: 2)\n 17214: a1 = i32 [0x20104]\n 17219: jump @544 if a1 >u 63\n      : @543 (gas: 3)\n 17223: u32 [0x20104] = 0x40\n 17229: a1 = 0x20110\n 17234: jump @589\n      : @544 (gas: 2)\n 17237: a1 = 0x20110\n 17242: jump @589\n      : @545 (gas: 6)\n 17245: a1 = 0x20110\n 17250: i32 a1 = a1 + 0\n 17252: a0 = 0x1\n 17255: a2 = 0\n 17257: ecalli 7 // 'seal_return'\n 17259: jump @617\n      : @546 (gas: 6)\n 17262: a1 = 0x20110\n 17267: i32 a1 = a1 + 0\n 17269: a0 = 0x1\n 17272: a2 = 0\n 17274: ecalli 7 // 'seal_return'\n 17276: jump @617\n      : @547 (gas: 6)\n 17279: a1 = 0x20110\n 17284: i32 a1 = a1 + 0\n 17286: a0 = 0x1\n 17289: a2 = 0\n 17291: ecalli 7 // 'seal_return'\n 17293: jump @617\n      : @548 (gas: 6)\n 17296: a1 = 0x20110\n 17301: i32 a1 = a1 + 0\n 17303: a0 = 0x1\n 17306: a2 = 0\n 17308: ecalli 7 // 'seal_return'\n 17310: jump @617\n      : @549 (gas: 6)\n 17313: a1 = 0x20110\n 17318: i32 a1 = a1 + 0\n 17320: a0 = 0x1\n 17323: a2 = 0\n 17325: ecalli 7 // 'seal_return'\n 17327: jump @617\n      : @550 (gas: 6)\n 17330: a1 = 0x20110\n 17335: i32 a1 = a1 + 0\n 17337: a0 = 0x1\n 17340: a2 = 0\n 17342: ecalli 7 // 'seal_return'\n 17344: jump @617\n      : @551 (gas: 1)\n 17347: jump @609 if a0 != 4076725131\n      : @552 (gas: 11)\n 17355: a0 = s1 + 0x1078\n 17359: u64 [a0 + 896] = 0\n 17363: u64 [a0 + 888] = 0\n 17367: u64 [a0 + 880] = 0\n 17371: u64 [a0 + 872] = 0\n 17375: a0 = s1 + 0x1000\n 17379: i32 a0 = a0 + 0x3e0\n 17383: ra = 0x1fc\n 17387: ecalli 10 // 'value_transferred'\n 17389: t0 = 0x1fe\n 17393: jump @793\n      : @553 [@dyn 254] (gas: 1)\n 17396: t0 = 510, jump @793\n      : @554 [@dyn 255] (gas: 8)\n 17402: a0 = u64 [a4 + 0x78]\n 17405: a1 = u64 [a4 + 0x80]\n 17409: a2 = u64 [a4 + 0x70]\n 17412: a3 = u64 [a4 + 0x68]\n 17415: a1 = a1 | a2\n 17418: a0 = a0 | a3\n 17421: a0 = a0 | a1\n 17424: jump @617 if a0 == 0\n      : @555 (gas: 6)\n 17428: a1 = 0x20110\n 17433: i32 a1 = a1 + 0\n 17435: a0 = 0x1\n 17438: a2 = 0\n 17440: ecalli 7 // 'seal_return'\n 17442: jump @617\n      : @556 (gas: 6)\n 17445: a1 = 0x20110\n 17450: i32 a1 = a1 + 0\n 17452: a0 = 0x1\n 17455: a2 = 0\n 17457: ecalli 7 // 'seal_return'\n 17459: jump @617\n      : @557 (gas: 6)\n 17462: a1 = 0x20110\n 17467: i32 a1 = a1 + 0\n 17469: a0 = 0x1\n 17472: a2 = 0\n 17474: ecalli 7 // 'seal_return'\n 17476: jump @617\n      : @558 (gas: 6)\n 17479: a1 = 0x20110\n 17484: i32 a1 = a1 + 0\n 17486: a0 = 0x1\n 17489: a2 = 0\n 17491: ecalli 7 // 'seal_return'\n 17493: jump @617\n      : @559 (gas: 6)\n 17496: a1 = 0x20110\n 17501: i32 a1 = a1 + 0\n 17503: a0 = 0x1\n 17506: a2 = 0\n 17508: ecalli 7 // 'seal_return'\n 17510: jump @617\n      : @560 (gas: 8)\n 17513: u64 [s1 + 688] = 0\n 17517: u64 [s1 + 680] = 0\n 17521: u64 [s1 + 672] = 0\n 17525: a0 = 0xe602df0500000000\n 17535: a1 = s1 + 0x2a0\n 17539: u64 [s1 + 0x2b8] = a0\n 17543: a0 = 0\n 17545: ra = 512, jump @19\n      : @561 [@dyn 256] (gas: 1)\n 17551: t0 = 514, jump @784\n      : @562 [@dyn 257] (gas: 1)\n 17557: ra = 516, jump @19\n      : @563 [@dyn 258] (gas: 2)\n 17563: a1 = i32 [0x20104]\n 17568: jump @565 if a1 >u 63\n      : @564 (gas: 3)\n 17572: u32 [0x20104] = 0x40\n 17578: a1 = 0x20110\n 17583: jump @589\n      : @565 (gas: 2)\n 17586: a1 = 0x20110\n 17591: jump @589\n      : @566 (gas: 8)\n 17594: u64 [s1 + 752] = 0\n 17598: u64 [s1 + 744] = 0\n 17602: u64 [s1 + 736] = 0\n 17606: a0 = 0x94280d6200000000\n 17616: a1 = s1 + 0x2e0\n 17620: u64 [s1 + 0x2f8] = a0\n 17624: a0 = 0\n 17626: ra = 518, jump @19\n      : @567 [@dyn 259] (gas: 7)\n 17632: u64 [s1 + 728] = 0\n 17636: u64 [s1 + 720] = 0\n 17640: u64 [s1 + 712] = 0\n 17644: a0 = 0x4\n 17647: a1 = s1 + 0x2c0\n 17651: u64 [s1 + 704] = 0\n 17655: ra = 520, jump @19\n      : @568 [@dyn 260] (gas: 2)\n 17661: a1 = i32 [0x20104]\n 17666: jump @570 if a1 >u 63\n      : @569 (gas: 3)\n 17670: u32 [0x20104] = 0x40\n 17676: a1 = 0x20110\n 17681: jump @589\n      : @570 (gas: 2)\n 17684: a1 = 0x20110\n 17689: jump @589\n      : @571 (gas: 6)\n 17692: a1 = 0x20110\n 17697: i32 a1 = a1 + 0\n 17699: a0 = 0x1\n 17702: a2 = 0\n 17704: ecalli 7 // 'seal_return'\n 17706: jump @617\n      : @572 (gas: 6)\n 17709: a1 = 0x20110\n 17714: i32 a1 = a1 + 0\n 17716: a0 = 0x1\n 17719: a2 = 0\n 17721: ecalli 7 // 'seal_return'\n 17723: jump @617\n      : @573 (gas: 6)\n 17726: u64 [s1 + 304] = 0\n 17730: u64 [s1 + 296] = 0\n 17734: u64 [s1 + 288] = 0\n 17738: t0 = 0x20a\n 17742: a0 = 0x4e487b7100000000\n 17752: fallthrough\n      : @574 [@dyn 261] (gas: 4)\n 17753: a1 = s1 + 0x120\n 17757: u64 [s1 + 0x138] = a0\n 17761: a0 = 0\n 17763: ra = 524, jump @19\n      : @575 [@dyn 262] (gas: 7)\n 17769: u64 [s1 + 280] = 0\n 17773: u64 [s1 + 272] = 0\n 17777: u64 [s1 + 256] = 0x22\n 17782: a0 = 0x4\n 17785: a1 = s1 + 0x100\n 17789: u64 [s1 + 264] = 0\n 17793: ra = 526, jump @19\n      : @576 [@dyn 263] (gas: 2)\n 17799: a1 = i32 [0x20104]\n 17804: jump @578 if a1 >u 63\n      : @577 (gas: 3)\n 17808: u32 [0x20104] = 0x40\n 17814: a1 = 0x20110\n 17819: jump @589\n      : @578 (gas: 2)\n 17822: a1 = 0x20110\n 17827: jump @589\n      : @579 (gas: 6)\n 17830: a1 = 0x20110\n 17835: i32 a1 = a1 + 0\n 17837: a0 = 0x1\n 17840: a2 = 0\n 17842: ecalli 7 // 'seal_return'\n 17844: jump @617\n      : @580 (gas: 6)\n 17847: a1 = 0x20110\n 17852: i32 a1 = a1 + 0\n 17854: a0 = 0x1\n 17857: a2 = 0\n 17859: ecalli 7 // 'seal_return'\n 17861: jump @617\n      : @581 (gas: 6)\n 17864: a1 = 0x20110\n 17869: i32 a1 = a1 + 0\n 17871: a0 = 0x1\n 17874: a2 = 0\n 17876: ecalli 7 // 'seal_return'\n 17878: jump @617\n      : @582 (gas: 6)\n 17881: a1 = 0x20110\n 17886: i32 a1 = a1 + 0\n 17888: a0 = 0x1\n 17891: a2 = 0\n 17893: ecalli 7 // 'seal_return'\n 17895: jump @617\n      : @583 (gas: 10)\n 17898: a0 = s1 + 0x7ff\n 17902: a0 = a0 + 0x79\n 17905: u64 [a0 + 888] = 0\n 17909: u64 [a0 + 880] = 0\n 17913: u64 [a0 + 872] = 0\n 17917: a2 = a0\n 17919: t0 = 0x210\n 17923: a0 = 0x4e487b7100000000\n 17933: a1 = s1 + 0x7ff\n 17937: fallthrough\n      : @584 [@dyn 264] (gas: 4)\n 17938: a1 = a1 + 0x3e1\n 17942: u64 [a2 + 0x380] = a0\n 17946: a0 = 0\n 17948: ra = 530, jump @19\n      : @585 [@dyn 265] (gas: 11)\n 17954: a1 = s1 + 0x7ff\n 17958: a1 = a1 + 0x79\n 17961: u64 [a1 + 864] = 0\n 17965: u64 [a1 + 856] = 0\n 17969: u64 [a1 + 840] = 0x41\n 17974: a2 = a1\n 17976: a0 = 0x4\n 17979: a1 = s1 + 0x7ff\n 17983: a1 = a1 + 0x3c1\n 17987: u64 [a2 + 848] = 0\n 17991: ra = 532, jump @19\n      : @586 [@dyn 266] (gas: 2)\n 17997: a1 = i32 [0x20104]\n 18002: jump @588 if a1 >u 63\n      : @587 (gas: 3)\n 18006: u32 [0x20104] = 0x40\n 18012: a1 = 0x20110\n 18017: jump @589\n      : @588 (gas: 2)\n 18019: a1 = 0x20110\n 18024: fallthrough\n      : @589 (gas: 5)\n 18025: i32 a1 = a1 + 0\n 18027: a0 = 0x1\n 18030: a2 = 0x24\n 18033: ecalli 7 // 'seal_return'\n 18035: fallthrough\n      : @590 (gas: 8)\n 18036: u64 [s1 + 1520] = 0\n 18040: u64 [s1 + 1512] = 0\n 18044: u64 [s1 + 1504] = 0\n 18048: a0 = 0xfb8f41b200000000\n 18058: a1 = s1 + 0x5e0\n 18062: u64 [s1 + 0x5f8] = a0\n 18066: a0 = 0\n 18068: ra = 534, jump @19\n      : @591 [@dyn 267] (gas: 6)\n 18074: a0 = u64 [s1 + 0x80]\n 18078: ra = 0x218\n 18082: ecalli 3 // 'caller'\n 18084: a2 = u64 [s1 + 0xb0]\n 18088: t0 = 0x21a\n 18092: jump @766\n      : @592 [@dyn 268] (gas: 2)\n 18095: a2 = u64 [s1 + 0xb0]\n 18099: t0 = 538, jump @766\n      : @593 [@dyn 269] (gas: 7)\n 18105: u64 [s1 + 1496] = 0\n 18109: u64 [s1 + 0x5d0] = a1\n 18113: u64 [s1 + 0x5c8] = a0\n 18117: a0 = 0x4\n 18120: a1 = s1 + 0x5c0\n 18124: u64 [s1 + 0x5c0] = a3\n 18128: ra = 540, jump @19\n      : @594 [@dyn 270] (gas: 11)\n 18134: a0 = u64 [s1 + 0x60]\n 18137: u64 [s1 + 0x5b8] = a0\n 18141: a0 = u64 [s1 + 0x58]\n 18144: u64 [s1 + 0x5b0] = a0\n 18148: a0 = u64 [s1 + 0x68]\n 18151: u64 [s1 + 0x5a8] = a0\n 18155: a0 = 0x24\n 18158: a1 = s1 + 0x5a0\n 18162: a2 = u64 [s1 + 0x70]\n 18165: u64 [s1 + 0x5a0] = a2\n 18169: ra = 542, jump @19\n      : @595 [@dyn 271] (gas: 12)\n 18175: a0 = u64 [s1 + 0xe8]\n 18179: a3 = s1 + 0x500\n 18183: u64 [a3 + 0x98] = a0\n 18187: a0 = u64 [s1 + 0xd8]\n 18191: u64 [a3 + 0x90] = a0\n 18195: a0 = u64 [s1 + 0xc8]\n 18199: u64 [a3 + 0x88] = a0\n 18203: a0 = 0x44\n 18206: a1 = s1 + 0x580\n 18210: a2 = u64 [s1 + 0xd0]\n 18214: u64 [a3 + 0x80] = a2\n 18218: ra = 544, jump @19\n      : @596 [@dyn 272] (gas: 3)\n 18224: a0 = u64 [s1 + 0xc0]\n 18228: a0 = i32 [a0]\n 18230: jump @598 if a0 >u 127\n      : @597 (gas: 5)\n 18234: a1 = u64 [s1 + 0xc0]\n 18238: u32 [a1 + 0] = 0x80\n 18242: a0 = 0x1\n 18245: a2 = 0x64\n 18248: jump @606\n      : @598 (gas: 7)\n 18251: a0 = 0x1\n 18254: a2 = 0x64\n 18257: a1 = u64 [s1 + 0xe0]\n 18261: ecalli 7 // 'seal_return'\n 18263: u64 [s1 + 0xf8] = a1\n 18267: ra = 0x228\n 18271: jump @26\n      : @599 (gas: 8)\n 18274: u64 [s1 + 1584] = 0\n 18278: u64 [s1 + 1576] = 0\n 18282: u64 [s1 + 1568] = 0\n 18286: a0 = 0xe602df0500000000\n 18296: a1 = s1 + 0x620\n 18300: u64 [s1 + 0x638] = a0\n 18304: a0 = 0\n 18306: ra = 546, jump @19\n      : @600 [@dyn 273] (gas: 8)\n 18312: u64 [s1 + 1560] = 0\n 18316: u64 [s1 + 1552] = 0\n 18320: u64 [s1 + 1544] = 0\n 18324: a0 = 0x4\n 18327: a1 = s1 + 0x600\n 18331: u64 [s1 + 1536] = 0\n 18335: ra = 0x226\n 18339: jump @19\n      : @601 (gas: 8)\n 18342: u64 [s1 + 1648] = 0\n 18346: u64 [s1 + 1640] = 0\n 18350: u64 [s1 + 1632] = 0\n 18354: a0 = 0x94280d6200000000\n 18364: a1 = s1 + 0x660\n 18368: u64 [s1 + 0x678] = a0\n 18372: a0 = 0\n 18374: ra = 548, jump @19\n      : @602 [@dyn 274] (gas: 7)\n 18380: u64 [s1 + 1624] = 0\n 18384: u64 [s1 + 1616] = 0\n 18388: u64 [s1 + 1608] = 0\n 18392: a0 = 0x4\n 18395: a1 = s1 + 0x640\n 18399: u64 [s1 + 1600] = 0\n 18403: ra = 550, jump @19\n      : @603 [@dyn 275] (gas: 3)\n 18409: a0 = u64 [s1 + 0xc0]\n 18413: a0 = i32 [a0]\n 18415: jump @605 if a0 >u 63\n      : @604 (gas: 5)\n 18419: a1 = u64 [s1 + 0xc0]\n 18423: u32 [a1 + 0] = 0x40\n 18426: a0 = 0x1\n 18429: a2 = 0x24\n 18432: jump @606\n      : @605 (gas: 7)\n 18434: a0 = 0x1\n 18437: a2 = 0x24\n 18440: a1 = u64 [s1 + 0xe0]\n 18444: ecalli 7 // 'seal_return'\n 18446: u64 [s1 + 0xf8] = a1\n 18450: ra = 0x228\n 18454: jump @26\n      : @606 (gas: 5)\n 18457: a1 = u64 [s1 + 0xe0]\n 18461: ecalli 7 // 'seal_return'\n 18463: u64 [s1 + 0xf8] = a1\n 18467: ra = 0x228\n 18471: jump @26\n      : @607 (gas: 2)\n 18474: u64 [s1 + 0xf8] = a1\n 18478: ra = 552, jump @26\n      : @608 [@dyn 276] (gas: 5)\n 18484: i32 a1 = a0 + 0\n 18486: a2 = i32 [s1 + 0xf8]\n 18490: a0 = 0\n 18492: ecalli 7 // 'seal_return'\n 18494: jump @501\n      : @609 (gas: 1)\n 18497: jump @615 if a0 != 1901074598\n      : @610 (gas: 11)\n 18504: a0 = s1 + 0x1078\n 18508: u64 [a0 + 544] = 0\n 18512: u64 [a0 + 536] = 0\n 18516: u64 [a0 + 528] = 0\n 18520: u64 [a0 + 520] = 0\n 18524: a0 = s1 + 0x1000\n 18528: i32 a0 = a0 + 0x280\n 18532: ra = 0x22a\n 18536: ecalli 10 // 'value_transferred'\n 18538: t0 = 0x22c\n 18542: jump @794\n      : @611 [@dyn 277] (gas: 1)\n 18545: t0 = 556, jump @794\n      : @612 [@dyn 278] (gas: 1)\n 18551: t0 = 558, jump @787\n      : @613 [@dyn 279] (gas: 1)\n 18557: jump @619 if a0 == 0\n      : @614 (gas: 6)\n 18560: a1 = 0x20110\n 18565: i32 a1 = a1 + 0\n 18567: a0 = 0x1\n 18570: a2 = 0\n 18572: ecalli 7 // 'seal_return'\n 18574: jump @617\n      : @615 (gas: 6)\n 18576: a1 = 0x20110\n 18581: i32 a1 = a1 + 0\n 18583: a0 = 0x1\n 18586: a2 = 0\n 18588: ecalli 7 // 'seal_return'\n 18590: jump @617\n      : @616 (gas: 5)\n 18592: i32 a1 = a1 + 0\n 18594: a0 = 0x1\n 18597: a2 = 0\n 18599: ecalli 7 // 'seal_return'\n 18601: fallthrough\n      : @617 (gas: 4)\n 18602: a0 = u64 [s1 + 0xf8]\n 18606: a0 = i32 [a0]\n 18608: a1 = 0x23\n 18611: jump @621 if a1 <u a0\n      : @618 (gas: 2)\n 18614: a1 = 0x20110\n 18619: jump @616\n      : @619 (gas: 3)\n 18621: a0 = u64 [s1 + 0xf8]\n 18625: a0 = i32 [a0]\n 18627: jump @628 if a0 >u 3\n      : @620 (gas: 2)\n 18632: a1 = 0x20110\n 18637: jump @616\n      : @621 (gas: 4)\n 18639: a0 = s1 + 0x1000\n 18643: ra = 0x230\n 18647: t0 = 0x276\n 18651: jump @788\n      : @622 [@dyn 280] (gas: 9)\n 18654: a0 = s1 + 0x7ff\n 18658: a0 = a0 + 0x79\n 18661: a1 = u64 [a0 + 0x790]\n 18665: u64 [s1 + 0xf0] = a1\n 18669: a1 = u64 [a0 + 0x788]\n 18673: u64 [s1 + 0xf8] = a1\n 18677: a0 = u32 [a0 + 0x798]\n 18681: u64 [s1 + 0xe8] = a0\n 18685: ra = 562, jump @755\n      : @623 [@dyn 281] (gas: 6)\n 18691: a0 = u64 [s1 + 0xf8]\n 18695: a1 = u64 [s1 + 0xe8]\n 18699: a0 = a0 | a1\n 18702: a1 = u64 [s1 + 0xf0]\n 18706: a0 = a0 | a1\n 18709: jump @633 if a0 == 0\n      : @624 (gas: 11)\n 18713: a0 = 0xffffffff\n 18723: u64 [s1 + 0xe0] = a0\n 18727: a0 = s1 + 0x1078\n 18731: u64 [a0 + 928] = 0\n 18735: u64 [a0 + 920] = 0\n 18739: u64 [a0 + 912] = 0\n 18743: u64 [a0 + 904] = 0x5\n 18748: a0 = s1 + 0x7ff\n 18752: a0 = a0 + 0x7e1\n 18756: a1 = s1 + 0x1400\n 18760: ra = 564, jump @21\n      : @625 [@dyn 282] (gas: 29)\n 18766: a1 = s1 + 0x7ff\n 18770: a1 = a1 + 0x79\n 18773: a3 = a1 + 0x700\n 18777: a0 = u64 [a3 + 0x70]\n 18780: u64 [s1 + 0xd8] = a0\n 18784: a0 = u64 [a3 + 0x80]\n 18788: a2 = u64 [a3 + 0x78]\n 18791: u64 [s1 + 0xc8] = a2\n 18795: a1 = u64 [a3 + 0x68]\n 18798: u64 [s1 + 0xd0] = a1\n 18802: a1 = s1 + 0x1078\n 18806: a4 = a1 + 0x300\n 18810: u64 [a4 + 168] = 0x5\n 18815: u64 [a4 + 0xe0] = a0\n 18819: a0 = a2 >> 0x20\n 18822: a0 = a0 << 0x20\n 18825: a2 = u64 [s1 + 0xe8]\n 18829: a0 = a0 | a2\n 18832: u64 [a4 + 0xd8] = a0\n 18836: u64 [a1 + 960] = 0\n 18840: u64 [a1 + 952] = 0\n 18844: u64 [a1 + 944] = 0\n 18848: a0 = u64 [s1 + 0xf0]\n 18852: u64 [a4 + 0xd0] = a0\n 18856: a0 = u64 [s1 + 0xf8]\n 18860: u64 [a4 + 0xc8] = a0\n 18864: a0 = s1 + 0x1420\n 18868: a1 = s1 + 0x1440\n 18872: ra = 566, jump @22\n      : @626 [@dyn 283] (gas: 39)\n 18878: a0 = u64 [s1 + 0xd0]\n 18882: a0 = a0 & 0xffffffffffffffff\n 18885: a2 = u64 [s1 + 0xd8]\n 18889: a1 = a2 & 0xffffffffffffffff\n 18892: a2 = u64 [s1 + 0xe0]\n 18896: a3 = u64 [s1 + 0xc8]\n 18900: a2 = a2 & a3\n 18903: a4 = s1 + 0x7ff\n 18907: a4 = a4 + 0x79\n 18910: u64 [a4 + 1824] = 0\n 18914: a3 = u64 [s1 + 0xe8]\n 18918: a5 = a4 + 0x700\n 18922: u64 [a5 + 0x18] = a3\n 18925: a3 = u64 [s1 + 0xf0]\n 18929: u64 [a5 + 0x10] = a3\n 18932: a3 = u64 [s1 + 0xf8]\n 18936: u64 [a5 + 0x8] = a3\n 18939: u64 [a4 + 1856] = 0\n 18943: u64 [a5 + 0x38] = a2\n 18946: u64 [a5 + 0x30] = a1\n 18949: a1 = u64 [0x20040]\n 18954: a2 = u64 [0x20048]\n 18959: a3 = u64 [0x20050]\n 18964: u64 [a5 + 0x28] = a0\n 18967: u64 [a5 + 0x60] = a1\n 18970: u64 [a5 + 0x58] = a2\n 18973: u64 [a5 + 0x50] = a3\n 18976: a1 = a4\n 18978: a0 = u64 [0x20058]\n 18983: a2 = s1 + 0x7ff\n 18987: a2 = a2 + 0x7c1\n 18991: a3 = s1 + 0x7ff\n 18995: a3 = a3 + 0x7a1\n 18999: a4 = s1 + 0x7ff\n 19003: a4 = a4 + 0x781\n 19007: u64 [a1 + 0x748] = a0\n 19011: a0 = 0\n 19013: a1 = 0\n 19015: ra = 568, jump @23\n      : @627 [@dyn 284] (gas: 6)\n 19021: a1 = 0x20110\n 19026: i32 a1 = a1 + 0\n 19028: a0 = 0\n 19030: a2 = 0\n 19032: ecalli 7 // 'seal_return'\n 19034: jump @617\n      : @628 (gas: 1)\n 19037: ra = 570, jump @755\n      : @629 [@dyn 285] (gas: 9)\n 19043: a1 = s1 + 0x1078\n 19047: u64 [a1 + 576] = 0\n 19051: u64 [a1 + 568] = 0\n 19055: u64 [a1 + 560] = 0\n 19059: u64 [a1 + 552] = 0x5\n 19064: a0 = s1 + 0x7ff\n 19068: a0 = a0 + 0x301\n 19072: a1 = s1 + 0x12a0\n 19076: ra = 572, jump @21\n      : @630 [@dyn 286] (gas: 25)\n 19082: a1 = s1 + 0x7ff\n 19086: a1 = a1 + 0x79\n 19089: a3 = a1 + 0x200\n 19093: a2 = u64 [a3 + 0x98]\n 19097: u64 [s1 + 0xe8] = a2\n 19101: a0 = u64 [a3 + 0x88]\n 19105: u64 [s1 + 0xf8] = a0\n 19109: a0 = u64 [a3 + 0x90]\n 19113: u64 [s1 + 0xf0] = a0\n 19117: a0 = u64 [a3 + 0xa0]\n 19121: a1 = a2 >> 0x20\n 19124: a1 = a1 << 0x20\n 19127: a2 = s1 + 0x1078\n 19131: u64 [a2 + 608] = 0\n 19135: u64 [a2 + 600] = 0\n 19139: u64 [a2 + 592] = 0\n 19143: a4 = a2 + 0x200\n 19147: u64 [a4 + 72] = 0x5\n 19151: u64 [a2 + 624] = 0\n 19155: u64 [a2 + 616] = 0\n 19159: u64 [a4 + 0x80] = a0\n 19163: u64 [a4 + 0x78] = a1\n 19166: a0 = s1 + 0x12c0\n 19170: a1 = s1 + 0x12e0\n 19174: ra = 574, jump @22\n      : @631 [@dyn 287] (gas: 34)\n 19180: a0 = u64 [s1 + 0xe8]\n 19184: a0 = a0 << 0x20\n 19187: a0 = a0 >> 0x20\n 19190: a3 = s1 + 0x7ff\n 19194: a3 = a3 + 0x79\n 19197: u64 [a3 + 576] = 0\n 19201: u64 [a3 + 568] = 0\n 19205: u64 [a3 + 560] = 0\n 19209: u64 [a3 + 552] = 0\n 19213: u64 [a3 + 608] = 0\n 19217: a5 = a3 + 0x200\n 19221: u64 [a5 + 0x58] = a0\n 19224: a0 = u64 [s1 + 0xf0]\n 19228: u64 [a5 + 0x50] = a0\n 19231: a0 = u64 [0x20040]\n 19236: a1 = u64 [0x20048]\n 19241: a2 = u64 [0x20050]\n 19246: a4 = u64 [s1 + 0xf8]\n 19250: u64 [a5 + 0x48] = a4\n 19253: u64 [a5 + 0x80] = a0\n 19257: u64 [a5 + 0x78] = a1\n 19260: u64 [a5 + 0x70] = a2\n 19263: a1 = a3\n 19265: a0 = u64 [0x20058]\n 19270: a2 = s1 + 0x7ff\n 19274: a2 = a2 + 0x2e1\n 19278: a3 = s1 + 0x7ff\n 19282: a3 = a3 + 0x2c1\n 19286: a4 = s1 + 0x7ff\n 19290: a4 = a4 + 0x2a1\n 19294: u64 [a1 + 0x268] = a0\n 19298: a0 = 0\n 19300: a1 = 0\n 19302: ra = 576, jump @23\n      : @632 [@dyn 288] (gas: 6)\n 19308: a1 = 0x20110\n 19313: i32 a1 = a1 + 0\n 19315: a0 = 0\n 19317: a2 = 0\n 19319: ecalli 7 // 'seal_return'\n 19321: jump @617\n      : @633 (gas: 12)\n 19324: a0 = s1 + 0x7ff\n 19328: a0 = a0 + 0x79\n 19331: u64 [a0 + 1784] = 0\n 19335: u64 [a0 + 1776] = 0\n 19339: u64 [a0 + 1768] = 0\n 19343: a2 = a0\n 19345: a0 = 0x1e4fbdf700000000\n 19355: a1 = s1 + 0x7ff\n 19359: a1 = a1 + 0x761\n 19363: u64 [a2 + 0x700] = a0\n 19367: a0 = 0\n 19369: ra = 578, jump @19\n      : @634 [@dyn 289] (gas: 11)\n 19375: a0 = s1 + 0x7ff\n 19379: a0 = a0 + 0x79\n 19382: u64 [a0 + 1760] = 0\n 19386: u64 [a0 + 1752] = 0\n 19390: u64 [a0 + 1744] = 0\n 19394: a2 = a0\n 19396: a0 = 0x4\n 19399: a1 = s1 + 0x7ff\n 19403: a1 = a1 + 0x741\n 19407: u64 [a2 + 1736] = 0\n 19411: ra = 580, jump @19\n      : @635 [@dyn 290] (gas: 2)\n 19417: a1 = i32 [0x20104]\n 19422: jump @637 if a1 >u 63\n      : @636 (gas: 3)\n 19426: u32 [0x20104] = 0x40\n 19432: a1 = 0x20110\n 19437: jump @589\n      : @637 (gas: 2)\n 19440: a1 = 0x20110\n 19445: jump @589\n      : @638 (gas: 17)\n 19448: sp = sp + 0xffffffffffffff30\n 19452: u64 [sp + 0xc8] = ra\n 19456: u64 [sp + 0xc0] = s0\n 19460: u64 [sp + 0xb8] = s1\n 19464: s0 = sp + 0xd0\n 19468: sp = sp & 0xfffffffffffffff0\n 19471: a2 = u64 [a1 + 0x18]\n 19474: u64 [sp + 0x10] = a2\n 19477: a2 = u64 [a1 + 0x10]\n 19480: u64 [sp + 0x8] = a2\n 19483: a2 = u64 [a1 + 0x8]\n 19486: u64 [sp] = a2\n 19488: s1 = u64 [a1]\n 19490: u64 [sp + 0x28] = a0\n 19493: a0 = sp + 0x90\n 19497: a1 = 0x40\n 19500: ra = 582, jump @17\n      : @639 [@dyn 291] (gas: 39)\n 19506: a1 = u64 [sp + 0x98]\n 19510: a2 = u64 [sp + 0x90]\n 19514: a0 = s1 + 0x1f\n 19517: ra = a0 <u s1\n 19520: a3 = u64 [sp]\n 19522: a4 = a3 + ra\n 19525: a0 = a0 & 0xffffffffffffffe0\n 19528: t1 = a1 + a4\n 19531: t0 = a2 + a0\n 19534: u64 [sp + 0x20] = a2\n 19537: a5 = t0 <u a2\n 19540: t1 = t1 + a5\n 19543: s1 = t1 ^ a1\n 19546: u64 [sp + 0x18] = a1\n 19549: a2 = t1 <u a1\n 19552: a2 = a5 if s1 == 0\n 19555: t2 = u64 [sp + 0xa8]\n 19559: a4 = a4 <u a3\n 19562: s1 = u64 [sp + 0xa0]\n 19566: a4 = ra if ra == 0\n 19569: a0 = u64 [sp + 0x8]\n 19572: a4 = a4 + a0\n 19575: a5 = a4 <u a0\n 19578: a4 = a4 + s1\n 19581: a3 = a4 + a2\n 19584: a0 = u64 [sp + 0x10]\n 19587: a0 = a0 + t2\n 19590: a0 = a0 + a5\n 19593: a5 = a3 <u a4\n 19596: a4 = a4 <u s1\n 19599: a0 = a0 + a4\n 19602: a4 = a0 + a5\n 19605: a0 = a4 >u 0\n 19607: a5 = a3 >u 0\n 19609: a5 = a0 if a4 != 0\n 19612: a0 = a3 | a4\n 19615: a1 = t1 >u 0\n 19617: a1 = a5 if a0 != 0\n 19620: jump @643 if a1 != 0\n      : @640 (gas: 8)\n 19623: a0 = a3 <u s1\n 19626: a1 = a4 ^ t2\n 19629: a5 = a4 <u t2\n 19632: a5 = a0 if a1 == 0\n 19635: a0 = a3 ^ s1\n 19638: a0 = a0 | a1\n 19641: a2 = a5 if a0 != 0\n 19644: jump @643 if a2 != 0\n      : @641 (gas: 8)\n 19647: u64 [sp + 0x70] = t0\n 19650: u64 [sp + 0x78] = t1\n 19653: u64 [sp + 0x80] = a3\n 19657: a0 = 0x40\n 19660: a1 = sp + 0x70\n 19663: u64 [sp + 0x88] = a4\n 19667: u64 [sp + 0x10] = t2\n 19670: ra = 584, jump @19\n      : @642 [@dyn 292] (gas: 14)\n 19676: a0 = u64 [sp + 0x28]\n 19679: a1 = u64 [sp + 0x10]\n 19682: u64 [a0 + 0x18] = a1\n 19685: u64 [a0 + 0x10] = s1\n 19688: a1 = u64 [sp + 0x18]\n 19691: u64 [a0 + 0x8] = a1\n 19694: a1 = u64 [sp + 0x20]\n 19697: u64 [a0] = a1\n 19699: sp = s0 + 0xffffffffffffff30\n 19703: ra = u64 [sp + 0xc8]\n 19707: s0 = u64 [sp + 0xc0]\n 19711: s1 = u64 [sp + 0xb8]\n 19715: sp = sp + 0xd0\n 19719: ret\n      : @643 (gas: 6)\n 19721: u64 [sp + 96] = 0\n 19724: u64 [sp + 88] = 0\n 19727: u64 [sp + 80] = 0\n 19730: t0 = 0x24a\n 19734: a0 = 0x4e487b7100000000\n 19744: fallthrough\n      : @644 [@dyn 293] (gas: 4)\n 19745: a1 = sp + 0x50\n 19748: u64 [sp + 0x68] = a0\n 19751: a0 = 0\n 19753: ra = 588, jump @19\n      : @645 [@dyn 294] (gas: 7)\n 19759: u64 [sp + 72] = 0\n 19762: u64 [sp + 64] = 0\n 19765: u64 [sp + 48] = 0x41\n 19769: a0 = 0x4\n 19772: a1 = sp + 0x30\n 19775: u64 [sp + 56] = 0\n 19778: ra = 590, jump @19\n      : @646 [@dyn 295] (gas: 2)\n 19784: a1 = i32 [0x20104]\n 19789: jump @648 if a1 >u 63\n      : @647 (gas: 2)\n 19793: u32 [0x20104] = 0x40\n 19799: fallthrough\n      : @648 (gas: 7)\n 19800: a1 = 0x20110\n 19805: i32 a1 = a1 + 0\n 19807: a0 = 0x1\n 19810: a2 = 0x24\n 19813: ra = 0x250\n 19817: ecalli 7 // 'seal_return'\n 19819: fallthrough\n      : @649 [@dyn 296] (gas: 37)\n 19820: sp = sp + 0xfffffffffffffe70\n 19824: u64 [sp + 0x188] = ra\n 19828: u64 [sp + 0x180] = s0\n 19832: u64 [sp + 0x178] = s1\n 19836: s0 = sp + 0x190\n 19840: sp = sp & 0xfffffffffffffff0\n 19843: t2 = u64 [a1]\n 19845: a4 = u64 [a2 + 0x8]\n 19848: ra = u64 [a1 + 0x8]\n 19851: s1 = u64 [a2]\n 19853: a3 = t2 + 0x1f\n 19856: t0 = a3 <u t2\n 19859: a5 = ra + t0\n 19862: u64 [sp + 0x20] = s1\n 19865: t1 = a3 <u s1\n 19868: a3 = a5 ^ a4\n 19871: u64 [sp + 0x28] = a4\n 19874: a4 = a5 <u a4\n 19877: a4 = t1 if a3 == 0\n 19880: s1 = u64 [a1 + 0x10]\n 19883: a3 = a5 <u ra\n 19886: a3 = t0 if t0 == 0\n 19889: a5 = u64 [a2 + 0x18]\n 19892: t0 = u64 [a1 + 0x18]\n 19895: t1 = u64 [a2 + 0x10]\n 19898: a3 = a3 + s1\n 19901: a1 = a3 <u s1\n 19904: a1 = a1 + t0\n 19907: a2 = a1 ^ a5\n 19910: u64 [sp + 0x10] = a5\n 19913: a1 = a1 <s a5\n 19916: a5 = a3 <u t1\n 19919: a1 = a5 if a2 == 0\n 19922: a3 = a3 ^ t1\n 19925: a2 = a2 | a3\n 19928: a4 = a1 if a2 != 0\n 19931: jump @667 if a4 == 0\n      : @650 (gas: 13)\n 19935: u64 [sp + 0x8] = a0\n 19938: u64 [sp + 0x18] = t1\n 19941: a0 = t2 | s1\n 19944: u64 [sp + 0x38] = ra\n 19947: u64 [sp + 0x30] = t0\n 19950: a1 = ra | t0\n 19953: a0 = a0 | a1\n 19956: a0 = a0 >> 0x20\n 19959: u64 [sp + 0x58] = s1\n 19962: a1 = a1 | s1\n 19965: a1 = a1 << 0x20\n 19968: a0 = a0 | a1\n 19971: jump @666 if a0 != 0\n      : @651 (gas: 4)\n 19975: a0 = sp + 0x150\n 19979: u64 [sp + 0x50] = t2\n 19982: a1 = t2\n 19984: ra = 594, jump @17\n      : @652 [@dyn 297] (gas: 12)\n 19990: a3 = u64 [sp + 0x168]\n 19994: a2 = u64 [sp + 0x160]\n 19998: a4 = u64 [sp + 0x158]\n 20002: a0 = a3 >u 0\n 20004: a1 = a2 >u 0\n 20006: a1 = a0 if a3 != 0\n 20009: u64 [sp + 0x80] = a2\n 20013: u64 [sp + 0x88] = a3\n 20017: a0 = a2 | a3\n 20020: a2 = a4 >u 0\n 20022: a2 = a1 if a0 != 0\n 20025: jump @668 if a2 != 0\n      : @653 (gas: 20)\n 20029: a1 = u64 [sp + 0x150]\n 20033: a0 = a1 + 0x1f\n 20036: u64 [sp + 0x48] = a1\n 20039: a1 = a0 <u a1\n 20042: u64 [sp + 0x78] = a4\n 20045: a1 = a1 + a4\n 20048: a1 = a1 & 0x1\n 20051: a0 = a0 & 0xffffffffffffffe0\n 20054: a2 = a0 + 0x20\n 20057: a0 = a2 <u a0\n 20060: a3 = a1 + a0\n 20063: a4 = a3 <u a1\n 20066: a4 = a0 if a0 == 0\n 20069: u64 [sp + 296] = 0\n 20073: u64 [sp + 0x110] = a2\n 20077: u64 [sp + 0x118] = a3\n 20081: a0 = sp + 0x130\n 20085: a1 = sp + 0x110\n 20089: u64 [sp + 0x120] = a4\n 20093: ra = 596, jump @638\n      : @654 [@dyn 298] (gas: 15)\n 20099: a2 = u64 [sp + 0x148]\n 20103: a3 = u64 [sp + 0x140]\n 20107: a1 = u64 [sp + 0x138]\n 20111: a0 = u64 [sp + 0x130]\n 20115: u64 [sp + 0x40] = a1\n 20118: u64 [sp + 0x68] = a2\n 20121: a2 = a2 | a1\n 20124: a1 = a0 | a3\n 20127: a1 = a1 | a2\n 20130: a1 = a1 >> 0x20\n 20133: u64 [sp + 0x70] = a3\n 20136: a2 = a2 | a3\n 20139: a2 = a2 << 0x20\n 20142: a1 = a1 | a2\n 20145: jump @666 if a1 != 0\n      : @655 (gas: 11)\n 20149: s1 = u64 [sp + 0x48]\n 20152: u64 [sp + 0xf0] = s1\n 20156: a1 = u64 [sp + 0x78]\n 20159: u64 [sp + 0xf8] = a1\n 20163: a1 = u64 [sp + 0x80]\n 20167: u64 [sp + 0x100] = a1\n 20171: a1 = sp + 0xf0\n 20175: a2 = u64 [sp + 0x88]\n 20179: u64 [sp + 0x108] = a2\n 20183: u64 [sp + 0x60] = a0\n 20186: ra = 598, jump @19\n      : @656 [@dyn 299] (gas: 45)\n 20192: a0 = u64 [sp + 0x50]\n 20195: a3 = a0 + s1\n 20198: a2 = a3 <u a0\n 20201: t2 = u64 [sp + 0x38]\n 20204: a0 = u64 [sp + 0x78]\n 20207: a0 = a0 + t2\n 20210: a0 = a0 + a2\n 20213: a4 = a0 ^ t2\n 20216: a1 = a0 <u t2\n 20219: a1 = a2 if a4 == 0\n 20222: t1 = u64 [sp + 0x58]\n 20225: a2 = u64 [sp + 0x80]\n 20229: a2 = a2 + t1\n 20232: a5 = a3 + 0x20\n 20235: t0 = a5 <u a3\n 20238: a4 = a0 + t0\n 20241: a3 = u64 [sp + 0x20]\n 20244: a5 = a3 <u a5\n 20247: a3 = u64 [sp + 0x28]\n 20250: s1 = a4 ^ a3\n 20253: a3 = a3 <u a4\n 20256: a5 = a3 if s1 != 0\n 20259: a3 = a2 <u t1\n 20262: t1 = u64 [sp + 0x30]\n 20265: s1 = u64 [sp + 0x88]\n 20269: s1 = s1 + t1\n 20272: a3 = a3 + s1\n 20275: a1 = a1 + a2\n 20278: a2 = a1 <u a2\n 20281: a2 = a2 + a3\n 20284: a0 = a4 <u a0\n 20287: a0 = t0 if t0 == 0\n 20290: a0 = a0 + a1\n 20293: a1 = a0 <u a1\n 20296: a1 = a1 + a2\n 20299: a3 = u64 [sp + 0x10]\n 20302: a2 = a1 ^ a3\n 20305: a1 = a3 <u a1\n 20308: a4 = u64 [sp + 0x18]\n 20311: a3 = a4 <u a0\n 20314: a1 = a3 if a2 == 0\n 20317: a0 = a0 ^ a4\n 20320: a0 = a0 | a2\n 20323: a5 = a1 if a0 != 0\n 20326: jump @674 if a5 != 0\n      : @657 (gas: 10)\n 20330: a0 = u64 [sp + 0x70]\n 20333: a1 = u64 [sp + 0x68]\n 20336: a1 = a1 | a0\n 20339: a0 = 0xffffffe0\n 20349: a4 = u64 [sp + 0x60]\n 20352: a2 = a4 <u a0\n 20355: a3 = u64 [sp + 0x40]\n 20358: a2 = 0 if a3 != 0\n 20360: a2 = 0 if a1 != 0\n 20362: jump @666 if a2 == 0\n      : @658 (gas: 12)\n 20366: a3 = a4\n 20368: a1 = u64 [sp + 0x58]\n 20371: a1 = a1 | t1\n 20374: a5 = u64 [sp + 0x50]\n 20377: a0 = a5 <u a0\n 20380: a0 = 0 if t2 != 0\n 20382: a0 = 0 if a1 != 0\n 20384: ra = u64 [sp + 0x88]\n 20388: a2 = u64 [sp + 0x80]\n 20392: a4 = u64 [sp + 0x78]\n 20395: s1 = u64 [sp + 0x48]\n 20398: jump @666 if a0 == 0\n      : @659 (gas: 8)\n 20402: a0 = s1 | a2\n 20405: a1 = a4 | ra\n 20408: a0 = a0 | a1\n 20411: a0 = a0 >> 0x20\n 20414: a1 = a1 | a2\n 20417: a1 = a1 << 0x20\n 20420: a0 = a0 | a1\n 20423: jump @666 if a0 != 0\n      : @660 (gas: 5)\n 20427: i32 a0 = a3 + 0x20\n 20430: i32 a1 = a5 + 0x20\n 20433: u64 [sp + 0x58] = a1\n 20436: a1 = s1\n 20438: ra = 600, jump @26\n      : @661 [@dyn 300] (gas: 4)\n 20444: u64 [sp + 0x50] = a0\n 20447: a0 = u64 [sp + 0x58]\n 20450: a1 = s1\n 20452: ra = 602, jump @26\n      : @662 [@dyn 301] (gas: 4)\n 20458: a1 = a0\n 20460: a0 = u64 [sp + 0x50]\n 20463: a2 = s1\n 20465: ra = 604, jump @0\n      : @663 [@dyn 302] (gas: 27)\n 20471: a1 = u64 [sp + 0x60]\n 20474: a0 = a1 + s1\n 20477: a1 = a0 <u a1\n 20480: s1 = u64 [sp + 0x40]\n 20483: a2 = u64 [sp + 0x78]\n 20486: a2 = a2 + s1\n 20489: a2 = a2 + a1\n 20492: a3 = a2 ^ s1\n 20495: a4 = a2 <u s1\n 20498: a4 = a1 if a3 == 0\n 20501: a5 = u64 [sp + 0x70]\n 20504: a1 = u64 [sp + 0x80]\n 20508: a1 = a1 + a5\n 20511: a4 = a4 + a1\n 20514: t0 = a4 <u a1\n 20517: a1 = a1 <u a5\n 20520: a5 = u64 [sp + 0x88]\n 20524: a3 = u64 [sp + 0x68]\n 20527: a5 = a5 + a3\n 20530: a1 = a1 + a5\n 20533: a1 = a1 + t0\n 20536: a1 = a1 | a4\n 20539: a3 = 0xffffffe0\n 20549: a3 = a0 <u a3\n 20552: a3 = 0 if a2 != 0\n 20554: a3 = 0 if a1 != 0\n 20556: jump @666 if a3 == 0\n      : @664 (gas: 7)\n 20559: i32 a0 = a0 + 0x20\n 20562: u64 [sp + 232] = 0\n 20566: u64 [sp + 224] = 0\n 20570: u64 [sp + 216] = 0\n 20574: a1 = sp + 0xd0\n 20578: u64 [sp + 208] = 0\n 20582: ra = 606, jump @19\n      : @665 [@dyn 303] (gas: 14)\n 20588: a0 = u64 [sp + 0x8]\n 20591: a1 = u64 [sp + 0x68]\n 20594: u64 [a0 + 0x18] = a1\n 20597: a1 = u64 [sp + 0x70]\n 20600: u64 [a0 + 0x10] = a1\n 20603: u64 [a0 + 0x8] = s1\n 20606: a1 = u64 [sp + 0x60]\n 20609: u64 [a0] = a1\n 20611: sp = s0 + 0xfffffffffffffe70\n 20615: ra = u64 [sp + 0x188]\n 20619: s0 = u64 [sp + 0x180]\n 20623: s1 = u64 [sp + 0x178]\n 20627: sp = sp + 0x190\n 20631: ret\n      : @666 (gas: 1)\n 20633: trap\n      : @667 (gas: 2)\n 20634: a1 = 0x20110\n 20639: jump @675\n      : @668 (gas: 6)\n 20641: u64 [sp + 192] = 0\n 20645: u64 [sp + 184] = 0\n 20649: u64 [sp + 176] = 0\n 20653: t0 = 0x260\n 20657: a0 = 0x4e487b7100000000\n 20667: fallthrough\n      : @669 [@dyn 304] (gas: 4)\n 20668: a1 = sp + 0xb0\n 20672: u64 [sp + 0xc8] = a0\n 20676: a0 = 0\n 20678: ra = 610, jump @19\n      : @670 [@dyn 305] (gas: 7)\n 20684: u64 [sp + 168] = 0\n 20688: u64 [sp + 160] = 0\n 20692: u64 [sp + 144] = 0x41\n 20697: a0 = 0x4\n 20700: a1 = sp + 0x90\n 20704: u64 [sp + 152] = 0\n 20708: ra = 612, jump @19\n      : @671 [@dyn 306] (gas: 2)\n 20714: a1 = i32 [0x20104]\n 20719: jump @673 if a1 >u 63\n      : @672 (gas: 2)\n 20723: u32 [0x20104] = 0x40\n 20729: fallthrough\n      : @673 (gas: 7)\n 20730: a1 = 0x20110\n 20735: i32 a1 = a1 + 0\n 20737: a0 = 0x1\n 20740: a2 = 0x24\n 20743: ecalli 7 // 'seal_return'\n 20745: a1 = 0x20110\n 20750: jump @675\n      : @674 (gas: 2)\n 20752: a1 = 0x20110\n 20757: fallthrough\n      : @675 (gas: 6)\n 20758: i32 a1 = a1 + 0\n 20760: a0 = 0x1\n 20763: a2 = 0\n 20765: ra = 0x266\n 20769: ecalli 7 // 'seal_return'\n 20771: fallthrough\n      : @676 [@dyn 307] (gas: 22)\n 20772: sp = sp + 0xfffffffffffffee0\n 20776: u64 [sp + 0x118] = ra\n 20780: u64 [sp + 0x110] = s0\n 20784: u64 [sp + 0x108] = s1\n 20788: s0 = sp + 0x120\n 20792: sp = sp & 0xfffffffffffffff0\n 20795: a4 = u64 [a1 + 0x10]\n 20798: a3 = u64 [a1 + 0x18]\n 20801: a5 = u64 [a1 + 0x8]\n 20804: t0 = u64 [a1]\n 20806: u64 [sp + 0x68] = a3\n 20809: u64 [sp + 0x78] = a5\n 20812: a1 = a5 | a3\n 20815: a3 = t0 | a4\n 20818: a3 = a3 | a1\n 20821: a3 = a3 >> 0x20\n 20824: u64 [sp + 0x70] = a4\n 20827: a1 = a1 | a4\n 20830: a1 = a1 << 0x20\n 20833: a1 = a1 | a3\n 20836: u64 [sp + 0x8] = a0\n 20839: jump @691 if a1 != 0\n      : @677 (gas: 15)\n 20843: a0 = u64 [a2 + 0x18]\n 20846: u64 [sp + 0x48] = a0\n 20849: s1 = u64 [a2 + 0x10]\n 20852: a0 = u64 [a2 + 0x8]\n 20855: u64 [sp + 0x50] = a0\n 20858: a0 = u64 [a2]\n 20860: u64 [sp + 0x58] = a0\n 20863: u64 [sp + 248] = 0\n 20867: u64 [sp + 240] = 0\n 20871: u64 [sp + 232] = 0\n 20875: a1 = sp + 0xe0\n 20879: u64 [sp + 224] = 0x20\n 20884: a0 = t0\n 20886: u64 [sp + 0x60] = t0\n 20889: ra = 616, jump @19\n      : @678 [@dyn 308] (gas: 12)\n 20895: a1 = u64 [sp + 0x58]\n 20898: a0 = a1 | s1\n 20901: a2 = u64 [sp + 0x48]\n 20904: a3 = u64 [sp + 0x50]\n 20907: a2 = a2 | a3\n 20910: a0 = a0 | a2\n 20913: a0 = a0 >> 0x20\n 20916: u64 [sp + 0x20] = s1\n 20919: a2 = a2 | s1\n 20922: a2 = a2 << 0x20\n 20925: a0 = a0 | a2\n 20928: jump @691 if a0 != 0\n      : @679 (gas: 2)\n 20932: a0 = sp + 0xc0\n 20936: ra = 618, jump @17\n      : @680 [@dyn 309] (gas: 13)\n 20942: a0 = u64 [sp + 0x70]\n 20945: a1 = u64 [sp + 0x68]\n 20948: a1 = a1 | a0\n 20951: a0 = 0x100000000\n 20961: u64 [sp + 0x10] = a0\n 20964: a0 = 0xffffffe0\n 20974: a2 = u64 [sp + 0x60]\n 20977: a0 = a2 <u a0\n 20980: a3 = u64 [sp + 0x78]\n 20983: a0 = 0 if a3 != 0\n 20985: u64 [sp + 0x18] = a1\n 20988: a0 = 0 if a1 != 0\n 20990: jump @691 if a0 == 0\n      : @681 (gas: 16)\n 20994: a3 = u64 [sp + 0xd8]\n 20998: a4 = u64 [sp + 0xd0]\n 21002: a5 = u64 [sp + 0xc8]\n 21006: a1 = u64 [sp + 0xc0]\n 21010: i32 a0 = a2 + 0x20\n 21013: u64 [sp + 0x28] = a1\n 21016: u64 [sp + 0xa0] = a1\n 21020: u64 [sp + 0x30] = a5\n 21023: u64 [sp + 0xa8] = a5\n 21027: u64 [sp + 0x38] = a4\n 21030: u64 [sp + 0xb0] = a4\n 21034: a1 = sp + 0xa0\n 21038: u64 [sp + 0x40] = a3\n 21041: u64 [sp + 0xb8] = a3\n 21045: s1 = a2\n 21047: ra = 620, jump @19\n      : @682 [@dyn 310] (gas: 8)\n 21053: a0 = u64 [sp + 0x10]\n 21056: a0 = a0 + 0xffffffffffffffc0\n 21059: a0 = s1 <u a0\n 21062: a1 = u64 [sp + 0x78]\n 21065: a0 = 0 if a1 != 0\n 21067: a1 = u64 [sp + 0x18]\n 21070: a0 = 0 if a1 != 0\n 21072: jump @691 if a0 == 0\n      : @683 (gas: 10)\n 21076: a0 = u64 [sp + 0x48]\n 21079: a1 = u64 [sp + 0x20]\n 21082: a0 = a0 | a1\n 21085: a1 = 0xffffffe0\n 21095: a3 = u64 [sp + 0x58]\n 21098: a1 = a3 <u a1\n 21101: a4 = u64 [sp + 0x50]\n 21104: a1 = 0 if a4 != 0\n 21106: a1 = 0 if a0 != 0\n 21108: jump @691 if a1 == 0\n      : @684 (gas: 13)\n 21112: a2 = s1\n 21114: a1 = u64 [sp + 0x28]\n 21117: a5 = u64 [sp + 0x38]\n 21120: a0 = a1 | a5\n 21123: a4 = u64 [sp + 0x40]\n 21126: s1 = u64 [sp + 0x30]\n 21129: a4 = a4 | s1\n 21132: a0 = a0 | a4\n 21135: a0 = a0 >> 0x20\n 21138: a4 = a4 | a5\n 21141: a4 = a4 << 0x20\n 21144: a0 = a0 | a4\n 21147: jump @691 if a0 != 0\n      : @685 (gas: 5)\n 21151: i32 a0 = a2 + 0x40\n 21154: i32 a3 = a3 + 0x20\n 21157: u64 [sp + 0x58] = a3\n 21160: s1 = a1\n 21162: ra = 622, jump @26\n      : @686 [@dyn 311] (gas: 4)\n 21168: u64 [sp + 0x50] = a0\n 21171: a0 = u64 [sp + 0x58]\n 21174: a1 = s1\n 21176: ra = 624, jump @26\n      : @687 [@dyn 312] (gas: 4)\n 21182: a1 = a0\n 21184: a0 = u64 [sp + 0x50]\n 21187: a2 = s1\n 21189: ra = 626, jump @0\n      : @688 [@dyn 313] (gas: 27)\n 21195: a0 = u64 [sp + 0x60]\n 21198: a0 = a0 + s1\n 21201: a1 = a0 <u s1\n 21204: a2 = u64 [sp + 0x78]\n 21207: a4 = u64 [sp + 0x30]\n 21210: a2 = a2 + a4\n 21213: a2 = a2 + a1\n 21216: a3 = a2 ^ a4\n 21219: a4 = a2 <u a4\n 21222: a4 = a1 if a3 == 0\n 21225: a1 = u64 [sp + 0x70]\n 21228: a3 = u64 [sp + 0x38]\n 21231: a1 = a1 + a3\n 21234: a3 = a1 <u a3\n 21237: a5 = u64 [sp + 0x68]\n 21240: s1 = u64 [sp + 0x40]\n 21243: a5 = a5 + s1\n 21246: a3 = a3 + a5\n 21249: a4 = a4 + a1\n 21252: a1 = a4 <u a1\n 21255: a1 = a1 + a3\n 21258: a1 = a1 | a4\n 21261: a3 = 0xffffffc0\n 21271: a3 = a0 <u a3\n 21274: a3 = 0 if a2 != 0\n 21276: a3 = 0 if a1 != 0\n 21278: jump @691 if a3 == 0\n      : @689 (gas: 7)\n 21282: i32 a0 = a0 + 0x40\n 21285: u64 [sp + 152] = 0\n 21289: u64 [sp + 144] = 0\n 21293: u64 [sp + 136] = 0\n 21297: a1 = sp + 0x80\n 21301: u64 [sp + 128] = 0\n 21305: ra = 628, jump @19\n      : @690 [@dyn 314] (gas: 35)\n 21311: s1 = u64 [sp + 0x28]\n 21314: s1 = s1 + 0x1f\n 21317: a0 = 0x1ffffffe0\n 21327: a0 = a0 & s1\n 21330: a1 = u64 [sp + 0x60]\n 21333: a0 = a0 + a1\n 21336: a1 = a0 <u a1\n 21339: a3 = u64 [sp + 0x78]\n 21342: a2 = a3 + a1\n 21345: a3 = a2 <u a3\n 21348: a3 = a1 if a1 == 0\n 21351: a1 = u64 [sp + 0x70]\n 21354: a3 = a3 + a1\n 21357: a1 = a3 <u a1\n 21360: a4 = u64 [sp + 0x68]\n 21363: a1 = a1 + a4\n 21366: a4 = a0 + 0x40\n 21369: a0 = a4 <u a0\n 21372: a5 = a2 + a0\n 21375: a2 = a5 <u a2\n 21378: a2 = a0 if a0 == 0\n 21381: a2 = a2 + a3\n 21384: a0 = a2 <u a3\n 21387: a0 = a0 + a1\n 21390: a1 = u64 [sp + 0x8]\n 21393: u64 [a1] = a4\n 21395: u64 [a1 + 0x8] = a5\n 21398: u64 [a1 + 0x10] = a2\n 21401: u64 [a1 + 0x18] = a0\n 21404: sp = s0 + 0xfffffffffffffee0\n 21408: ra = u64 [sp + 0x118]\n 21412: s0 = u64 [sp + 0x110]\n 21416: s1 = u64 [sp + 0x108]\n 21420: sp = sp + 0x120\n 21424: ret\n      : @691 (gas: 1)\n 21426: trap\n      : @692 [@dyn 315] (gas: 5)\n 21427: a1 = 0x4\n 21430: ra = 0x278\n 21434: ecalli 1 // 'call_data_load'\n 21436: t0 = 0x27a\n 21440: jump @774\n      : @693 [@dyn 316] (gas: 1)\n 21443: t0 = 634, jump @774\n      : @694 [@dyn 317] (gas: 1)\n 21449: jump @697 if a3 == 0\n      : @695 (gas: 1)\n 21452: t0 = 636, jump @780\n      : @696 [@dyn 318] (gas: 1)\n 21458: ret\n      : @697 (gas: 8)\n 21460: a1 = 0x20110\n 21465: i32 a1 = a1 + 0\n 21467: a0 = 0x1\n 21470: a2 = 0\n 21472: ra = 0x27e\n 21476: ecalli 7 // 'seal_return'\n 21478: t0 = 0x280\n 21482: jump @788\n      : @698 [@dyn 319] (gas: 1)\n 21485: t0 = 640, jump @788\n      : @699 [@dyn 320] (gas: 5)\n 21491: a1 = 0x24\n 21494: ra = 0x282\n 21498: ecalli 1 // 'call_data_load'\n 21500: t0 = 0x284\n 21504: jump @774\n      : @700 [@dyn 321] (gas: 1)\n 21507: t0 = 644, jump @774\n      : @701 [@dyn 322] (gas: 1)\n 21513: jump @704 if a3 == 0\n      : @702 (gas: 1)\n 21516: t0 = 646, jump @780\n      : @703 [@dyn 323] (gas: 1)\n 21522: ret\n      : @704 (gas: 7)\n 21524: a1 = 0x20110\n 21529: i32 a1 = a1 + 0\n 21531: a0 = 0x1\n 21534: a2 = 0\n 21536: ra = 0x288\n 21540: ecalli 7 // 'seal_return'\n 21542: fallthrough\n      : @705 [@dyn 324] (gas: 14)\n 21543: sp = sp + 0xfffffffffffffc20\n 21547: a3 = sp + 0x300\n 21551: u64 [a3 + 0xd8] = ra\n 21555: u64 [a3 + 0xd0] = s0\n 21559: u64 [a3 + 0xc8] = s1\n 21563: s0 = sp + 0x3e0\n 21567: sp = sp & 0xffffffffffffffe0\n 21570: s1 = sp\n 21572: t2 = u32 [a0 + 0x10]\n 21575: a3 = u64 [a0]\n 21577: a4 = u64 [a0 + 0x8]\n 21580: a0 = a3 | t2\n 21583: a0 = a0 | a4\n 21586: jump @737 if a0 == 0\n      : @706 (gas: 13)\n 21590: t0 = u64 [a1 + 0x10]\n 21593: t1 = u64 [a1 + 0x8]\n 21596: ra = u64 [a1]\n 21598: a5 = 0xffffffff\n 21608: a1 = t1 & 0xffffffffffffffff\n 21611: a0 = ra & 0xffffffffffffffff\n 21614: a5 = t0 & a5\n 21617: u64 [s1 + 0x48] = a0\n 21620: u64 [s1 + 0x38] = a5\n 21623: a0 = a0 | a5\n 21626: u64 [s1 + 0x40] = a1\n 21629: a0 = a0 | a1\n 21632: jump @742 if a0 == 0\n      : @707 (gas: 18)\n 21636: a0 = u64 [a2 + 0x18]\n 21639: u64 [s1 + 0x98] = a0\n 21643: a0 = u64 [a2 + 0x10]\n 21646: u64 [s1 + 0x88] = a0\n 21650: a0 = u64 [a2 + 0x8]\n 21653: u64 [s1 + 0x80] = a0\n 21657: a0 = u64 [a2]\n 21659: u64 [s1 + 0x90] = a0\n 21663: u64 [s1 + 824] = 0\n 21667: u64 [s1 + 0x60] = a3\n 21670: u64 [s1 + 0x320] = a3\n 21674: u64 [s1 + 0x58] = a4\n 21677: u64 [s1 + 0x328] = a4\n 21681: a1 = s1 + 0x320\n 21685: u64 [s1 + 0x50] = t2\n 21688: u64 [s1 + 0x330] = t2\n 21692: a0 = 0\n 21694: ra = 650, jump @19\n      : @708 [@dyn 325] (gas: 7)\n 21700: u64 [s1 + 792] = 0\n 21704: u64 [s1 + 784] = 0\n 21708: u64 [s1 + 776] = 0\n 21712: a0 = 0x20\n 21715: a1 = s1 + 0x300\n 21719: u64 [s1 + 768] = 0\n 21723: ra = 652, jump @19\n      : @709 [@dyn 326] (gas: 3)\n 21729: a2 = 0x20104\n 21734: a0 = i32 [0x20104]\n 21739: jump @711 if a0 >u 63\n      : @710 (gas: 2)\n 21743: u32 [0x20104] = 0x40\n 21749: fallthrough\n      : @711 (gas: 15)\n 21750: u64 [s1 + 0x70] = a2\n 21753: a0 = sp + 0xffffffffffffffe0\n 21756: a2 = a0 & 0xffffffffffffffe0\n 21759: u64 [s1 + 0x68] = a2\n 21762: sp = a2\n 21764: a0 = 0x20110\n 21769: i32 a0 = a0 + 0\n 21771: i32 a2 = a2 + 0\n 21773: a1 = 0x40\n 21776: u64 [s1 + 0x78] = a0\n 21779: ra = 0x28e\n 21783: ecalli 6 // 'hash_keccak_256'\n 21785: a3 = u64 [s1 + 0x68]\n 21788: t0 = 0x290\n 21792: jump @776\n      : @712 [@dyn 327] (gas: 2)\n 21795: a3 = u64 [s1 + 0x68]\n 21798: t0 = 656, jump @776\n      : @713 [@dyn 328] (gas: 7)\n 21804: u64 [a4 + 0x58] = a3\n 21807: u64 [a4 + 0x50] = a2\n 21810: u64 [a4 + 0x48] = a1\n 21813: u64 [a4 + 0x40] = a0\n 21816: a0 = s1 + 0x2e0\n 21820: a1 = s1 + 0x340\n 21824: ra = 658, jump @21\n      : @714 [@dyn 329] (gas: 28)\n 21830: a1 = s1 + 0x200\n 21834: a2 = u64 [a1 + 0xf8]\n 21838: a0 = u64 [a1 + 0xf0]\n 21842: a5 = u64 [a1 + 0xe8]\n 21846: a4 = u64 [a1 + 0xe0]\n 21850: a1 = u64 [s1 + 0x98]\n 21854: t1 = a2 ^ a1\n 21857: u64 [s1 + 0x28] = a2\n 21860: a1 = a2 <u a1\n 21863: a2 = u64 [s1 + 0x88]\n 21867: a3 = a0 <u a2\n 21870: u64 [s1 + 0x10] = a3\n 21873: a1 = a3 if t1 == 0\n 21876: a3 = u64 [s1 + 0x80]\n 21880: t0 = a5 ^ a3\n 21883: u64 [s1 + 0x30] = a5\n 21886: a5 = a5 <u a3\n 21889: a3 = u64 [s1 + 0x90]\n 21893: u64 [s1 + 0x68] = a4\n 21896: a3 = a4 <u a3\n 21899: u64 [s1 + 0x18] = a3\n 21902: a5 = a3 if t0 == 0\n 21905: u64 [s1 + 0x20] = a0\n 21908: a2 = a2 ^ a0\n 21911: a0 = a2 | t1\n 21914: u64 [s1 + 0x8] = a5\n 21917: a1 = a5 if a0 == 0\n 21920: jump @748 if a1 != 0\n      : @715 (gas: 11)\n 21924: u64 [s1 + 728] = 0\n 21928: a0 = u64 [s1 + 0x60]\n 21931: a2 = s1 + 0x200\n 21935: u64 [a2 + 0xc0] = a0\n 21939: a0 = u64 [s1 + 0x58]\n 21942: u64 [a2 + 0xc8] = a0\n 21946: a1 = s1 + 0x2c0\n 21950: a0 = u64 [s1 + 0x50]\n 21953: u64 [a2 + 0xd0] = a0\n 21957: a0 = 0\n 21959: ra = 660, jump @19\n      : @716 [@dyn 330] (gas: 7)\n 21965: u64 [s1 + 696] = 0\n 21969: u64 [s1 + 688] = 0\n 21973: u64 [s1 + 680] = 0\n 21977: a0 = 0x20\n 21980: a1 = s1 + 0x2a0\n 21984: u64 [s1 + 672] = 0\n 21988: ra = 662, jump @19\n      : @717 [@dyn 331] (gas: 27)\n 21994: a0 = u64 [s1 + 0x88]\n 21998: a1 = u64 [s1 + 0x20]\n 22001: a0 = a1 - a0\n 22004: a2 = u64 [s1 + 0x8]\n 22007: a1 = a0 - a2\n 22010: u64 [s1 + 0x20] = a1\n 22013: a0 = a0 <u a2\n 22016: a1 = u64 [s1 + 0x98]\n 22020: a2 = u64 [s1 + 0x28]\n 22023: a1 = a2 - a1\n 22026: a2 = u64 [s1 + 0x10]\n 22029: a1 = a1 - a2\n 22032: a1 = a1 - a0\n 22035: u64 [s1 + 0x28] = a1\n 22038: a2 = u64 [s1 + 0x70]\n 22041: a0 = i32 [a2]\n 22043: a1 = u64 [s1 + 0x80]\n 22047: a3 = u64 [s1 + 0x30]\n 22050: a1 = a3 - a1\n 22053: a3 = u64 [s1 + 0x18]\n 22056: a1 = a1 - a3\n 22059: u64 [s1 + 0x30] = a1\n 22062: a1 = u64 [s1 + 0x90]\n 22066: a3 = u64 [s1 + 0x68]\n 22069: a3 = a3 - a1\n 22072: u64 [s1 + 0x68] = a3\n 22075: jump @719 if a0 >u 63\n      : @718 (gas: 2)\n 22079: u32 [a2 + 0] = 0x40\n 22082: fallthrough\n      : @719 (gas: 12)\n 22083: a0 = sp + 0xffffffffffffffe0\n 22086: a0 = a0 & 0xffffffffffffffe0\n 22089: u64 [s1 + 0x18] = a0\n 22092: sp = a0\n 22094: i32 a2 = a0 + 0\n 22096: a1 = 0x40\n 22099: a0 = u64 [s1 + 0x78]\n 22102: ra = 0x298\n 22106: ecalli 6 // 'hash_keccak_256'\n 22108: a3 = u64 [s1 + 0x18]\n 22111: t0 = 0x29a\n 22115: jump @776\n      : @720 [@dyn 332] (gas: 2)\n 22118: a3 = u64 [s1 + 0x18]\n 22121: t0 = 666, jump @776\n      : @721 [@dyn 333] (gas: 15)\n 22127: u64 [a4 + 0x78] = a3\n 22130: u64 [a4 + 0x70] = a2\n 22133: u64 [a4 + 0x68] = a1\n 22136: u64 [a4 + 0x60] = a0\n 22139: a0 = u64 [s1 + 0x28]\n 22142: u64 [a4 + 0x98] = a0\n 22146: a0 = u64 [s1 + 0x20]\n 22149: u64 [a4 + 0x90] = a0\n 22153: a0 = u64 [s1 + 0x30]\n 22156: u64 [a4 + 0x88] = a0\n 22160: a0 = u64 [s1 + 0x68]\n 22163: u64 [a4 + 0x80] = a0\n 22167: a0 = s1 + 0x360\n 22171: a1 = s1 + 0x380\n 22175: ra = 668, jump @22\n      : @722 [@dyn 334] (gas: 11)\n 22181: u64 [s1 + 664] = 0\n 22185: a0 = u64 [s1 + 0x38]\n 22188: a2 = s1 + 0x200\n 22192: u64 [a2 + 0x90] = a0\n 22196: a0 = u64 [s1 + 0x40]\n 22199: u64 [a2 + 0x88] = a0\n 22203: a1 = s1 + 0x280\n 22207: a0 = u64 [s1 + 0x48]\n 22210: u64 [a2 + 0x80] = a0\n 22214: a0 = 0\n 22216: ra = 670, jump @19\n      : @723 [@dyn 335] (gas: 7)\n 22222: u64 [s1 + 632] = 0\n 22226: u64 [s1 + 624] = 0\n 22230: u64 [s1 + 616] = 0\n 22234: a0 = 0x20\n 22237: a1 = s1 + 0x260\n 22241: u64 [s1 + 608] = 0\n 22245: ra = 672, jump @19\n      : @724 [@dyn 336] (gas: 7)\n 22251: a1 = u64 [s1 + 0x70]\n 22254: a0 = sp + 0xffffffffffffffe0\n 22257: a0 = a0 & 0xffffffffffffffe0\n 22260: u64 [s1 + 0x68] = a0\n 22263: sp = a0\n 22265: a0 = i32 [a1]\n 22267: jump @726 if a0 >u 63\n      : @725 (gas: 2)\n 22271: u32 [a1 + 0] = 0x40\n 22274: fallthrough\n      : @726 (gas: 12)\n 22275: a0 = sp + 0xffffffffffffffe0\n 22278: a0 = a0 & 0xffffffffffffffe0\n 22281: u64 [s1 + 0x70] = a0\n 22284: sp = a0\n 22286: i32 a2 = a0 + 0\n 22288: a1 = 0x40\n 22291: a0 = u64 [s1 + 0x78]\n 22294: ra = 0x2a2\n 22298: ecalli 6 // 'hash_keccak_256'\n 22300: a3 = u64 [s1 + 0x70]\n 22303: t0 = 0x2a4\n 22307: jump @768\n      : @727 [@dyn 337] (gas: 2)\n 22310: a3 = u64 [s1 + 0x70]\n 22313: t0 = 676, jump @768\n      : @728 [@dyn 338] (gas: 7)\n 22319: a1 = u64 [s1 + 0x68]\n 22322: u64 [a1 + 0x18] = a3\n 22325: u64 [a1 + 0x10] = a2\n 22328: u64 [a1 + 0x8] = a4\n 22331: u64 [a1] = a0\n 22333: a0 = s1 + 0x240\n 22337: ra = 678, jump @21\n      : @729 [@dyn 339] (gas: 30)\n 22343: a0 = u64 [s1 + 0x248]\n 22347: a1 = u64 [s1 + 0x240]\n 22351: t0 = u64 [s1 + 0x258]\n 22355: a3 = u64 [s1 + 0x250]\n 22359: a4 = u64 [s1 + 0x80]\n 22363: a4 = a4 + a0\n 22366: a5 = u64 [s1 + 0x90]\n 22370: a5 = a5 + a1\n 22373: a1 = a5 <u a1\n 22376: a4 = a4 + a1\n 22379: a2 = a4 ^ a0\n 22382: a0 = a4 <u a0\n 22385: a0 = a1 if a2 == 0\n 22388: a1 = u64 [s1 + 0x88]\n 22392: a1 = a1 + a3\n 22395: a2 = u64 [s1 + 0x98]\n 22399: t0 = t0 + a2\n 22402: a2 = a1 <u a3\n 22405: a2 = a2 + t0\n 22408: a0 = a0 + a1\n 22411: a1 = a0 <u a1\n 22414: a1 = a1 + a2\n 22417: a2 = s1 + 0x300\n 22421: u64 [a2 + 0xa0] = a5\n 22425: u64 [a2 + 0xa8] = a4\n 22429: u64 [a2 + 0xb0] = a0\n 22433: u64 [a2 + 0xb8] = a1\n 22437: a1 = s1 + 0x3a0\n 22441: a0 = u64 [s1 + 0x68]\n 22444: ra = 680, jump @22\n      : @730 [@dyn 340] (gas: 3)\n 22450: a0 = s1 + 0x220\n 22454: a1 = 0x40\n 22457: ra = 682, jump @17\n      : @731 [@dyn 341] (gas: 6)\n 22463: a4 = s1 + 0x200\n 22467: a3 = u64 [a4 + 0x38]\n 22470: a1 = u64 [a4 + 0x30]\n 22473: a2 = u64 [a4 + 0x28]\n 22476: a0 = u64 [a4 + 0x20]\n 22479: t0 = 684, jump @769\n      : @732 [@dyn 342] (gas: 1)\n 22485: jump @736 if a1 != 0\n      : @733 (gas: 12)\n 22489: a1 = u64 [s1 + 0x90]\n 22493: a3 = s1 + 0x200\n 22497: u64 [a3] = a1\n 22499: a1 = u64 [s1 + 0x80]\n 22503: u64 [a3 + 0x8] = a1\n 22506: a1 = u64 [s1 + 0x88]\n 22510: u64 [a3 + 0x10] = a1\n 22513: a1 = s1 + 0x200\n 22517: a2 = u64 [s1 + 0x98]\n 22521: u64 [a3 + 0x18] = a2\n 22524: u64 [s1 + 0x98] = a0\n 22528: ra = 686, jump @19\n      : @734 [@dyn 343] (gas: 29)\n 22534: u64 [s1 + 440] = 0\n 22538: a0 = u64 [s1 + 0x38]\n 22541: a5 = s1 + 0x100\n 22545: u64 [a5 + 0xb0] = a0\n 22549: a0 = u64 [s1 + 0x40]\n 22552: u64 [a5 + 0xa8] = a0\n 22556: a0 = u64 [s1 + 0x48]\n 22559: u64 [a5 + 0xa0] = a0\n 22563: u64 [s1 + 472] = 0\n 22567: a0 = u64 [s1 + 0x50]\n 22570: u64 [a5 + 0xd0] = a0\n 22574: a0 = u64 [s1 + 0x58]\n 22577: u64 [a5 + 0xc8] = a0\n 22581: a0 = u64 [0x200e0]\n 22586: a1 = u64 [0x200e8]\n 22591: a2 = u64 [0x200f0]\n 22596: a3 = u64 [s1 + 0x60]\n 22599: u64 [a5 + 0xc0] = a3\n 22603: u64 [a5 + 0xf8] = a0\n 22607: u64 [a5 + 0xf0] = a1\n 22611: u64 [a5 + 0xe8] = a2\n 22615: a0 = u64 [0x200f8]\n 22620: a1 = 0x20\n 22623: a2 = s1 + 0x1e0\n 22627: a3 = s1 + 0x1c0\n 22631: a4 = s1 + 0x1a0\n 22635: u64 [a5 + 0xe0] = a0\n 22639: a0 = u64 [s1 + 0x98]\n 22643: ra = 688, jump @23\n      : @735 [@dyn 344] (gas: 7)\n 22649: sp = s0 + 0xfffffffffffffc20\n 22653: a0 = sp + 0x300\n 22657: ra = u64 [a0 + 0xd8]\n 22661: s0 = u64 [a0 + 0xd0]\n 22665: s1 = u64 [a0 + 0xc8]\n 22669: sp = sp + 0x3e0\n 22673: ret\n      : @736 (gas: 1)\n 22675: trap\n      : @737 (gas: 8)\n 22676: u64 [s1 + 208] = 0\n 22680: u64 [s1 + 200] = 0\n 22684: u64 [s1 + 192] = 0\n 22688: a0 = 0x96c6fd1e00000000\n 22698: a1 = s1 + 0xc0\n 22702: u64 [s1 + 0xd8] = a0\n 22706: a0 = 0\n 22708: ra = 690, jump @19\n      : @738 [@dyn 345] (gas: 7)\n 22714: u64 [s1 + 184] = 0\n 22718: u64 [s1 + 176] = 0\n 22722: u64 [s1 + 168] = 0\n 22726: a0 = 0x4\n 22729: a1 = s1 + 0xa0\n 22733: u64 [s1 + 160] = 0\n 22737: ra = 692, jump @19\n      : @739 [@dyn 346] (gas: 2)\n 22743: a1 = i32 [0x20104]\n 22748: jump @741 if a1 >u 63\n      : @740 (gas: 3)\n 22752: u32 [0x20104] = 0x40\n 22758: a1 = 0x20110\n 22763: jump @747\n      : @741 (gas: 2)\n 22765: a1 = 0x20110\n 22770: jump @747\n      : @742 (gas: 8)\n 22772: u64 [s1 + 272] = 0\n 22776: u64 [s1 + 264] = 0\n 22780: u64 [s1 + 256] = 0\n 22784: a0 = 0xec442f0500000000\n 22794: a1 = s1 + 0x100\n 22798: u64 [s1 + 0x118] = a0\n 22802: a0 = 0\n 22804: ra = 694, jump @19\n      : @743 [@dyn 347] (gas: 7)\n 22810: u64 [s1 + 248] = 0\n 22814: u64 [s1 + 240] = 0\n 22818: u64 [s1 + 232] = 0\n 22822: a0 = 0x4\n 22825: a1 = s1 + 0xe0\n 22829: u64 [s1 + 224] = 0\n 22833: ra = 696, jump @19\n      : @744 [@dyn 348] (gas: 2)\n 22839: a1 = i32 [0x20104]\n 22844: jump @746 if a1 >u 63\n      : @745 (gas: 3)\n 22848: u32 [0x20104] = 0x40\n 22854: a1 = 0x20110\n 22859: jump @747\n      : @746 (gas: 2)\n 22861: a1 = 0x20110\n 22866: fallthrough\n      : @747 (gas: 5)\n 22867: i32 a1 = a1 + 0\n 22869: a0 = 0x1\n 22872: a2 = 0x24\n 22875: ecalli 7 // 'seal_return'\n 22877: fallthrough\n      : @748 (gas: 8)\n 22878: u64 [s1 + 400] = 0\n 22882: u64 [s1 + 392] = 0\n 22886: u64 [s1 + 384] = 0\n 22890: a0 = 0xe450d38c00000000\n 22900: a1 = s1 + 0x180\n 22904: u64 [s1 + 0x198] = a0\n 22908: a0 = 0\n 22910: ra = 698, jump @19\n      : @749 [@dyn 349] (gas: 10)\n 22916: u64 [s1 + 376] = 0\n 22920: a0 = u64 [s1 + 0x50]\n 22923: u64 [s1 + 0x170] = a0\n 22927: a0 = u64 [s1 + 0x58]\n 22930: u64 [s1 + 0x168] = a0\n 22934: a0 = 0x4\n 22937: a1 = s1 + 0x160\n 22941: a2 = u64 [s1 + 0x60]\n 22944: u64 [s1 + 0x160] = a2\n 22948: ra = 700, jump @19\n      : @750 [@dyn 350] (gas: 11)\n 22954: a0 = u64 [s1 + 0x28]\n 22957: u64 [s1 + 0x158] = a0\n 22961: a0 = u64 [s1 + 0x20]\n 22964: u64 [s1 + 0x150] = a0\n 22968: a0 = u64 [s1 + 0x30]\n 22971: u64 [s1 + 0x148] = a0\n 22975: a0 = 0x24\n 22978: a1 = s1 + 0x140\n 22982: a2 = u64 [s1 + 0x68]\n 22985: u64 [s1 + 0x140] = a2\n 22989: ra = 702, jump @19\n      : @751 [@dyn 351] (gas: 12)\n 22995: a0 = u64 [s1 + 0x98]\n 22999: a3 = s1 + 0x100\n 23003: u64 [a3 + 0x38] = a0\n 23006: a0 = u64 [s1 + 0x88]\n 23010: u64 [a3 + 0x30] = a0\n 23013: a0 = u64 [s1 + 0x80]\n 23017: u64 [a3 + 0x28] = a0\n 23020: a0 = 0x44\n 23023: a1 = s1 + 0x120\n 23027: a2 = u64 [s1 + 0x90]\n 23031: u64 [a3 + 0x20] = a2\n 23034: ra = 704, jump @19\n      : @752 [@dyn 352] (gas: 3)\n 23040: a0 = u64 [s1 + 0x70]\n 23043: a0 = i32 [a0]\n 23045: jump @754 if a0 >u 127\n      : @753 (gas: 3)\n 23049: a1 = u64 [s1 + 0x70]\n 23052: u32 [a1 + 0] = 0x80\n 23056: fallthrough\n      : @754 (gas: 6)\n 23057: a0 = 0x1\n 23060: a2 = 0x64\n 23063: a1 = u64 [s1 + 0x78]\n 23066: ra = 0x2c2\n 23070: ecalli 7 // 'seal_return'\n 23072: fallthrough\n      : @755 [@dyn 353] (gas: 13)\n 23073: sp = sp + 0xffffffffffffff40\n 23077: u64 [sp + 0xb8] = ra\n 23081: u64 [sp + 0xb0] = s0\n 23085: u64 [sp + 0xa8] = s1\n 23089: s0 = sp + 0xc0\n 23093: sp = sp & 0xffffffffffffffe0\n 23096: u64 [sp + 152] = 0\n 23100: u64 [sp + 144] = 0\n 23104: u64 [sp + 136] = 0\n 23108: u64 [sp + 128] = 0x5\n 23113: a0 = sp + 0x60\n 23116: a1 = sp + 0x80\n 23120: ra = 708, jump @21\n      : @756 [@dyn 354] (gas: 11)\n 23126: a0 = u64 [sp + 0x68]\n 23129: u64 [sp + 0x18] = a0\n 23132: a0 = u64 [sp + 0x60]\n 23135: u64 [sp + 0x10] = a0\n 23138: a0 = u32 [sp + 0x70]\n 23141: u64 [sp + 0x8] = a0\n 23144: s1 = 0x30110\n 23149: i32 a0 = s1 + 0\n 23151: u64 [sp] = a0\n 23153: ecalli 3 // 'caller'\n 23155: fallthrough\n      : @757 (gas: 22)\n 23156: a0 = u64 [0x30118]\n 23161: a1 = u64 [0x30110]\n 23166: a2 = i32 [0x30120]\n 23171: a0 = reverse a0\n 23173: a3 = a0 >> 0x20\n 23176: a1 = reverse a1\n 23178: a4 = a1 << 0x20\n 23181: a3 = a3 | a4\n 23184: a0 = a0 << 0x20\n 23187: a2 = reverse a2\n 23189: a2 = a2 >> 0x20\n 23192: a0 = a0 | a2\n 23195: a1 = a1 >> 0x20\n 23198: a2 = u64 [sp + 0x8]\n 23201: a1 = a1 ^ a2\n 23204: a2 = u64 [sp + 0x10]\n 23207: a0 = a0 ^ a2\n 23210: a0 = a0 | a1\n 23213: a1 = u64 [sp + 0x18]\n 23216: a1 = a1 ^ a3\n 23219: a0 = a0 | a1\n 23222: jump @759 if a0 != 0\n      : @758 (gas: 6)\n 23225: sp = s0 + 0xffffffffffffff40\n 23229: ra = u64 [sp + 0xb8]\n 23233: s0 = u64 [sp + 0xb0]\n 23237: s1 = u64 [sp + 0xa8]\n 23241: sp = sp + 0xc0\n 23245: ret\n      : @759 (gas: 8)\n 23247: u64 [sp + 80] = 0\n 23250: u64 [sp + 72] = 0\n 23253: u64 [sp + 64] = 0\n 23256: a0 = 0x118cdaa700000000\n 23266: a1 = sp + 0x40\n 23269: u64 [sp + 0x58] = a0\n 23272: a0 = 0\n 23274: ra = 710, jump @19\n      : @760 [@dyn 355] (gas: 22)\n 23280: a0 = u64 [sp]\n 23282: ecalli 3 // 'caller'\n 23284: a0 = u64 [s1 + 0x8]\n 23287: a1 = i32 [s1 + 0x10]\n 23290: a2 = u64 [s1]\n 23292: a0 = reverse a0\n 23294: a3 = a0 << 0x20\n 23297: a1 = reverse a1\n 23299: a1 = a1 >> 0x20\n 23302: a3 = a3 | a1\n 23305: a0 = a0 >> 0x20\n 23308: a1 = reverse a2\n 23310: a2 = a1 << 0x20\n 23313: a0 = a0 | a2\n 23316: a1 = a1 >> 0x20\n 23319: u64 [sp + 56] = 0\n 23322: u64 [sp + 0x30] = a1\n 23325: u64 [sp + 0x28] = a0\n 23328: a0 = 0x4\n 23331: a1 = sp + 0x20\n 23334: u64 [sp + 0x20] = a3\n 23337: ra = 712, jump @19\n      : @761 [@dyn 356] (gas: 2)\n 23343: a1 = i32 [0x20104]\n 23348: jump @763 if a1 >u 63\n      : @762 (gas: 2)\n 23352: u32 [0x20104] = 0x40\n 23358: fallthrough\n      : @763 (gas: 8)\n 23359: a1 = 0x20110\n 23364: i32 a1 = a1 + 0\n 23366: a0 = 0x1\n 23369: a2 = 0x24\n 23372: ecalli 7 // 'seal_return'\n 23374: a0 = 0\n 23376: ra = 0x2ca\n 23380: jump @32\n      : @764 [export #0: 'call'] (gas: 2)\n 23383: a0 = 0\n 23385: ra = 714, jump @32\n      : @765 [@dyn 357] [export #1: 'deploy'] (gas: 2)\n 23391: a0 = 0x1\n 23394: ra = 716, jump @32\n      : @766 [@dyn 358] (gas: 14)\n 23400: a0 = u64 [a2 + 0x8]\n 23403: a1 = i32 [a2 + 0x10]\n 23406: a2 = u64 [a2]\n 23408: a0 = reverse a0\n 23410: a3 = a0 << 0x20\n 23413: a1 = reverse a1\n 23415: a1 = a1 >> 0x20\n 23418: a3 = a3 | a1\n 23421: a0 = a0 >> 0x20\n 23424: a1 = reverse a2\n 23426: a2 = a1 << 0x20\n 23429: a0 = a0 | a2\n 23432: a1 = a1 >> 0x20\n 23435: jump [t0]\n      : @767 (gas: 22)\n 23437: a4 = u64 [s1 + 0x138]\n 23441: a2 = a4 <u 0x80\n 23445: a3 = u64 [s1 + 0xf0]\n 23449: a1 = a3 if a2 != 0\n 23452: a5 = u64 [s1 + 0xf8]\n 23456: a3 = u64 [s1 + 0x108]\n 23460: a3 = a3 | a5\n 23463: a3 = a0 if a2 == 0\n 23466: a1 = 0xffffffffffffffff if a4 == 0\n 23469: a3 = 0xffffffffffffffff if a4 == 0\n 23472: a4 = u64 [s1 + 0x100]\n 23476: a4 = 0 if a2 == 0\n 23478: a5 = 0 if a2 == 0\n 23480: a0 = u64 [s1 + 0x118]\n 23484: a0 = a0 & ~a3\n 23487: a2 = u64 [s1 + 0x120]\n 23491: a1 = a2 & ~a1\n 23494: a2 = u64 [s1 + 0x128]\n 23498: a2 = a2 & ~a5\n 23501: a3 = u64 [s1 + 0x130]\n 23505: a3 = a3 & ~a4\n 23508: jump [t0]\n      : @768 (gas: 9)\n 23510: a0 = u64 [a3 + 0x18]\n 23513: a1 = u64 [a3 + 0x10]\n 23516: a2 = u64 [a3 + 0x8]\n 23519: a3 = u64 [a3]\n 23521: a0 = reverse a0\n 23523: a4 = reverse a1\n 23525: a2 = reverse a2\n 23527: a3 = reverse a3\n 23529: jump [t0]\n      : @769 (gas: 8)\n 23531: a3 = a3 | a2\n 23534: a2 = a0 | a1\n 23537: a2 = a2 | a3\n 23540: a2 = a2 >> 0x20\n 23543: a1 = a1 | a3\n 23546: a1 = a1 << 0x20\n 23549: a1 = a1 | a2\n 23552: jump [t0]\n      : @770 (gas: 10)\n 23554: a4 = 0 if a2 == 0\n 23556: a1 = u64 [s1 + 0x118]\n 23560: a1 = a1 & ~a3\n 23563: a2 = u64 [s1 + 0x120]\n 23567: a0 = a2 & ~a0\n 23570: a2 = u64 [s1 + 0x128]\n 23574: a2 = a2 & ~a4\n 23577: a3 = u64 [s1 + 0x130]\n 23581: a3 = a3 & ~a5\n 23584: jump [t0]\n      : @771 (gas: 13)\n 23586: a4 = a0 << 0x3f\n 23589: a5 = a1 >> 0x1\n 23592: t1 = a5 | a4\n 23595: a5 = a3 << 0x3f\n 23598: a0 = a0 >> 0x1\n 23601: a0 = a0 | a5\n 23604: a1 = a1 << 0x3f\n 23607: a5 = a2 >> 0x1\n 23610: a1 = a1 | a5\n 23613: a3 = a3 >> 0x1\n 23616: a2 = a2 & 0x1\n 23619: a5 = -a2\n 23621: jump [t0]\n      : @772 (gas: 14)\n 23623: a0 = u64 [a2 + 0x8]\n 23626: a1 = i32 [a2 + 0x10]\n 23629: a2 = u64 [a2]\n 23631: a0 = reverse a0\n 23633: a3 = a0 << 0x20\n 23636: a1 = reverse a1\n 23638: a1 = a1 >> 0x20\n 23641: a1 = a1 | a3\n 23644: a0 = a0 >> 0x20\n 23647: a2 = reverse a2\n 23649: a3 = a2 << 0x20\n 23652: a0 = a0 | a3\n 23655: a2 = a2 >> 0x20\n 23658: jump [t0]\n      : @773 (gas: 8)\n 23660: a0 = u64 [a2 + 0x8]\n 23663: a1 = i32 [a2 + 0x10]\n 23666: a2 = u64 [a2]\n 23668: a3 = reverse a0\n 23670: a0 = a3 << 0x20\n 23673: a1 = reverse a1\n 23675: a1 = a1 >> 0x20\n 23678: jump [t0]\n      : @774 (gas: 10)\n 23680: a0 = u64 [sp + 0x10]\n 23683: a1 = u64 [sp + 0x18]\n 23686: a2 = 0x100000000\n 23696: a2 = a2 ^ a0\n 23699: a2 = a2 | a1\n 23702: a3 = a0 >> 0x20\n 23705: a3 = a3 <u 0x1\n 23708: a3 = 0 if a1 != 0\n 23710: a3 = 0 if a2 == 0\n 23712: jump [t0]\n      : @775 (gas: 8)\n 23714: a2 = a4 >u 0\n 23716: a1 = a1 ^ 0x1\n 23719: a1 = a2 if a4 != 0\n 23722: a2 = t2 >u 0\n 23724: a3 = a5 >u 0\n 23726: a3 = a2 if a5 == 0\n 23729: a3 = a1 if a0 == 0\n 23732: jump [t0]\n      : @776 (gas: 10)\n 23734: a0 = u64 [a3 + 0x18]\n 23737: a1 = u64 [a3 + 0x10]\n 23740: a2 = u64 [a3 + 0x8]\n 23743: a3 = u64 [a3]\n 23745: a0 = reverse a0\n 23747: a1 = reverse a1\n 23749: a2 = reverse a2\n 23751: a3 = reverse a3\n 23753: a4 = s1 + 0x300\n 23757: jump [t0]\n      : @777 (gas: 10)\n 23759: u64 [s1 + 296] = 0\n 23763: a4 = 0\n 23765: ra = 0\n 23767: u64 [s1 + 280] = 0\n 23771: u64 [s1 + 288] = 0\n 23775: a3 = u64 [s1 + 0x108]\n 23779: a0 = u64 [a3 + 0x18]\n 23782: a1 = u64 [a3 + 0x10]\n 23785: a2 = u64 [a3 + 0x8]\n 23788: jump [t0]\n      : @778 (gas: 8)\n 23790: a4 = a4 | a2\n 23793: a2 = a0 | a1\n 23796: a2 = a2 | a4\n 23799: a2 = a2 >> 0x20\n 23802: a1 = a1 | a4\n 23805: a1 = a1 << 0x20\n 23808: a1 = a1 | a2\n 23811: jump [t0]\n      : @779 (gas: 8)\n 23813: a2 = a1 | a5\n 23816: a0 = a0 | a3\n 23819: a2 = a2 | a0\n 23822: a2 = a2 >> 0x20\n 23825: a0 = a0 | a5\n 23828: a0 = a0 << 0x20\n 23831: a0 = a0 | a2\n 23834: jump [t0]\n      : @780 (gas: 12)\n 23836: a2 = u64 [sp]\n 23838: a3 = u64 [sp + 0x8]\n 23841: u64 [s1] = a2\n 23843: u64 [s1 + 0x8] = a3\n 23846: u64 [s1 + 0x10] = a0\n 23849: u64 [s1 + 0x18] = a1\n 23852: sp = s0 + 0xffffffffffffffc0\n 23855: ra = u64 [sp + 0x38]\n 23858: s0 = u64 [sp + 0x30]\n 23861: s1 = u64 [sp + 0x28]\n 23864: sp = sp + 0x40\n 23867: jump [t0]\n      : @781 (gas: 10)\n 23869: u64 [s1 + 0xf8] = a0\n 23873: u64 [s1 + 0x100] = a1\n 23877: a0 = u64 [s1 + 0xf0]\n 23881: a0 = a0 | a1\n 23884: u64 [s1 + 0xf0] = a0\n 23888: a0 = u64 [s1 + 0x138]\n 23892: a2 = a0 + 0xffffffffffffff80\n 23895: a0 = 0xffffffffffffffff\n 23898: a1 = 0xffffffffffffffff\n 23901: jump [t0]\n      : @782 (gas: 7)\n 23903: a0 = a0 << 0x3b\n 23906: a1 = a0 >> 0x38\n 23909: u64 [s1 + 0x138] = a1\n 23913: a2 = 0x80 - a1\n 23917: a0 = 0xffffffffffffffff\n 23920: a1 = 0xffffffffffffffff\n 23923: jump [t0]\n      : @783 (gas: 8)\n 23925: a1 = sp + 0xffffffffffffffe0\n 23928: a1 = a1 & 0xffffffffffffffe0\n 23931: u64 [s1 + 0x108] = a1\n 23935: sp = a1\n 23937: i32 a0 = a0 + 0\n 23939: i32 a2 = a1 + 0\n 23941: a1 = 0x20\n 23944: jump [t0]\n      : @784 (gas: 7)\n 23946: u64 [s1 + 664] = 0\n 23950: u64 [s1 + 656] = 0\n 23954: u64 [s1 + 648] = 0\n 23958: a0 = 0x4\n 23961: a1 = s1 + 0x280\n 23965: u64 [s1 + 640] = 0\n 23969: jump [t0]\n      : @785 (gas: 7)\n 23971: a3 = a3 | a5\n 23974: a3 = a1 if a2 == 0\n 23977: a1 = 0xffffffffffffffff\n 23980: a0 = a1 if a4 == 0\n 23983: a3 = a1 if a4 == 0\n 23986: a5 = 0 if a2 == 0\n 23988: jump [t0]\n      : @786 (gas: 7)\n 23990: sp = sp + 0xfffffffffffff808\n 23994: a0 = sp + 0x700\n 23998: u64 [a0 + 0xf0] = ra\n 24002: u64 [a0 + 0xe8] = s0\n 24006: u64 [a0 + 0xe0] = s1\n 24010: s0 = sp + 0x7f8\n 24014: jump [t0]\n      : @787 (gas: 8)\n 24016: a0 = u64 [a4 + 0x18]\n 24019: a1 = u64 [a4 + 0x20]\n 24022: a2 = u64 [a4 + 0x10]\n 24025: a3 = u64 [a4 + 0x8]\n 24028: a1 = a1 | a2\n 24031: a0 = a0 | a3\n 24034: a0 = a0 | a1\n 24037: jump [t0]\n      : @788 (gas: 9)\n 24039: sp = sp + 0xffffffffffffffc0\n 24042: u64 [sp + 0x38] = ra\n 24045: u64 [sp + 0x30] = s0\n 24048: u64 [sp + 0x28] = s1\n 24051: s0 = sp + 0x40\n 24054: sp = sp & 0xffffffffffffffe0\n 24057: s1 = a0\n 24059: i32 a0 = sp + 0\n 24061: jump [t0]\n      : @789 (gas: 6)\n 24063: a0 = u64 [a3 + 0x18]\n 24066: a1 = u64 [a3 + 0x10]\n 24069: a2 = u64 [a3 + 0x8]\n 24072: a3 = u64 [a3]\n 24074: a0 = reverse a0\n 24076: jump [t0]\n      : @790 (gas: 8)\n 24078: a0 = a0 + a4\n 24081: a3 = a3 + a1\n 24084: a5 = a3 <u a1\n 24087: a0 = a0 + a5\n 24090: ra = u64 [s1 + 0x100]\n 24094: ra = ra + a3\n 24097: a3 = ra <u a3\n 24100: jump [t0]\n      : @791 (gas: 6)\n 24102: a1 = a3 << 0x3\n 24105: u64 [s1 + 0x138] = a1\n 24109: i32 a2 = 0x80 - a1\n 24113: a0 = 0xffffffffffffffff\n 24116: a1 = 0xffffffffffffffff\n 24119: jump [t0]\n      : @792 (gas: 4)\n 24121: a0 = 0x1078\n 24125: a3 = s1 + a0\n 24128: a4 = a3 + 0x100\n 24132: jump [t0]\n      : @793 (gas: 4)\n 24134: a0 = 0x1078\n 24138: a3 = s1 + a0\n 24141: a4 = a3 + 0x300\n 24145: jump [t0]\n      : @794 (gas: 4)\n 24147: a0 = 0x1078\n 24151: a3 = s1 + a0\n 24154: a4 = a3 + 0x200\n 24158: jump [t0]\n      : @795 (gas: 2)\n 24160: a3 = a2 & 0x40\n 24163: jump @799 if a3 != 0\n      : @796 (gas: 1)\n 24166: jump @798 if a2 == 0\n      : @797 (gas: 6)\n 24169: i32 a3 = 0x40 - a2\n 24172: a3 = a1 << a3\n 24175: a1 = a1 >> a2\n 24178: a0 = a0 >> a2\n 24181: a0 = a0 | a3\n 24184: ret\n      : @798 (gas: 1)\n 24186: ret\n      : @799 (gas: 4)\n 24188: a0 = a2 + 0xffffffffffffffc0\n 24191: a0 = a1 >> a0\n 24194: a1 = 0\n 24196: ret\n      : @800 (gas: 2)\n 24198: a3 = a2 & 0x40\n 24201: jump @804 if a3 != 0\n      : @801 (gas: 1)\n 24204: jump @803 if a2 == 0\n      : @802 (gas: 6)\n 24207: i32 a3 = 0x40 - a2\n 24210: a3 = a0 >> a3\n 24213: a0 = a0 << a2\n 24216: a1 = a1 << a2\n 24219: a1 = a1 | a3\n 24222: ret\n      : @803 (gas: 1)\n 24224: ret\n      : @804 (gas: 4)\n 24226: a1 = a2 + 0xffffffffffffffc0\n 24229: a1 = a0 << a1\n 24232: a0 = 0\n 24234: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 1:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 2:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 7:\"contracts/MyToken.sol\"\nobject \"MockERC20_1407\" {\n    code {\n        {\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MockERC20_1407\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let value := mload(memoryDataOffset)\n            let offset := mload(add(memoryDataOffset, 32))\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let offset_1 := mload(add(memoryDataOffset, 64))\n            if gt(offset_1, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let value2 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value1)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            let _2 := sload(/** @src 2:1648:1661  \"_name = name_\" */ 0x03)\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            length := shr(1, _2)\n            let outOfPlaceEncoding := and(_2, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:1648:1661  \"_name = name_\" */ 0x03)\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _3 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _3) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:1648:1661  \"_name = name_\" */ 0x03)\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(value1, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value1, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                if newLen\n                {\n                    value_1 := mload(add(value1, srcOffset))\n                }\n                sstore(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ or(and(value_1, not(shr(shl(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(value2)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            let _4 := sload(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            length_1 := shr(1, _4)\n            let outOfPlaceEncoding_1 := and(_4, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _5 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _5) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(value2, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value2, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_2 := /** @src -1:-1:-1 */ 0\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                if newLen_1\n                {\n                    value_2 := mload(add(value2, srcOffset_1))\n                }\n                sstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ or(and(value_2, not(shr(shl(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            /// @src 0:1273:1299  \"initialOwner == address(0)\"\n            let _6 := iszero(/** @src 7:211:221  \"msg.sender\" */ caller())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ _6\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                mstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 36)\n            }\n            let _7 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x05)\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            sstore(/** @src 0:3004:3010  \"_owner\" */ 0x05, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ or(and(_7, not(sub(shl(160, 1), 1))), /** @src 7:211:221  \"msg.sender\" */ caller()))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(_7, sub(shl(160, 1), 1)), /** @src 7:211:221  \"msg.sender\" */ caller())\n            /// @src 2:7505:7596  \"if (account == address(0)) {...\"\n            _6 := /** @src -1:-1:-1 */ 0\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let _8 := sload(/** @src 2:6214:6235  \"_totalSupply += value\" */ 0x02)\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let sum := add(_8, value)\n            if gt(_8, sum)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x11)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            sstore(/** @src 2:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sum)\n            /// @src 2:6624:7049  \"if (to == address(0)) {...\"\n            _6 := /** @src -1:-1:-1 */ 0\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 7:211:221  \"msg.sender\" */ caller())\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            mstore(32, /** @src -1:-1:-1 */ 0)\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 64)\n            sstore(dataSlot, add(sload(/** @src 2:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ value))\n            /// @src 2:7064:7089  \"Transfer(from, to, value)\"\n            let _9 := /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ mload(64)\n            mstore(_9, value)\n            /// @src 2:7064:7089  \"Transfer(from, to, value)\"\n            log3(_9, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32, /** @src 2:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 7:211:221  \"msg.sender\" */ caller())\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let _10 := mload(64)\n            let _11 := datasize(\"MockERC20_1407_deployed\")\n            codecopy(_10, dataoffset(\"MockERC20_1407_deployed\"), _11)\n            return(_10, _11)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let length := mload(offset)\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            let array_1 := allocate_memory(add(and(add(length, 0x1f), not(31)), 0x20))\n            mstore(array_1, length)\n            if gt(add(add(offset, length), 0x20), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            mcopy(add(array_1, 0x20), add(offset, 0x20), length)\n            mstore(add(add(array_1, length), 0x20), /** @src -1:-1:-1 */ 0)\n            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 2:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 7:\"contracts/MyToken.sol\"\n    object \"MockERC20_1407_deployed\" {\n        code {\n            {\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := 0\n                        let slotValue := sload(/** @src 2:1837:1842  \"_name\" */ 0x03)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, 32), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 2:1837:1842  \"_name\" */ 0x03)\n                            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(_1, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(_1, i), 32)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address_3834()\n                        let value := calldataload(36)\n                        /// @src 2:9790:9879  \"if (owner == address(0)) {...\"\n                        if /** @src 2:9794:9813  \"owner == address(0)\" */ iszero(/** @src 5:735:745  \"msg.sender\" */ caller())\n                        /// @src 2:9790:9879  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            mstore(4, 0)\n                            /// @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                        }\n                        let _2 := and(/** @src 2:9892:9913  \"spender == address(0)\" */ value0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:9888:9978  \"if (spender == address(0)) {...\"\n                        if /** @src 2:9892:9913  \"spender == address(0)\" */ iszero(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _2)\n                        /// @src 2:9888:9978  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            mstore(4, 0)\n                            /// @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                        }\n                        mstore(0, /** @src 5:735:745  \"msg.sender\" */ caller())\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 2:9987:10014  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _2)\n                        mstore(0x20, /** @src 2:9987:10005  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40)\n                        sstore(/** @src 2:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ value)\n                        /// @src 2:10066:10097  \"Approval(owner, spender, value)\"\n                        let _3 := /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ mload(64)\n                        mstore(_3, value)\n                        /// @src 2:10066:10097  \"Approval(owner, spender, value)\"\n                        log3(_3, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32, /** @src 2:10066:10097  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 5:735:745  \"msg.sender\" */ caller(), /** @src 2:10066:10097  \"Approval(owner, spender, value)\" */ _2)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _4 := sload(/** @src 2:2908:2920  \"_totalSupply\" */ 0x02)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _4)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_3834()\n                        let value1 := abi_decode_address()\n                        let value_1 := calldataload(68)\n                        let _5 := and(value0_1, sub(shl(160, 1), 1))\n                        mstore(0, _5)\n                        mstore(32, 1)\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 2:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(/** @src 5:735:745  \"msg.sender\" */ caller(), /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 2:3638:3656  \"_allowances[owner]\" */ dataSlot_2)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40)\n                        let _6 := sload(/** @src 2:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_3)\n                        /// @src 2:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                        if /** @src 2:10561:10597  \"currentAllowance < type(uint256).max\" */ lt(_6, /** @src 2:10580:10597  \"type(uint256).max\" */ not(0))\n                        /// @src 2:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                        {\n                            /// @src 2:10613:10743  \"if (currentAllowance < value) {...\"\n                            if /** @src 2:10617:10641  \"currentAllowance < value\" */ lt(_6, value_1)\n                            /// @src 2:10613:10743  \"if (currentAllowance < value) {...\"\n                            {\n                                /// @src 2:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                mstore(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                                mstore(4, /** @src 5:735:745  \"msg.sender\" */ caller())\n                                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                                mstore(36, _6)\n                                mstore(68, value_1)\n                                /// @src 2:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                revert(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 100)\n                            }\n                            /// @src 2:9790:9879  \"if (owner == address(0)) {...\"\n                            if /** @src 2:9794:9813  \"owner == address(0)\" */ iszero(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _5)\n                            /// @src 2:9790:9879  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                                mstore(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                                mstore(4, 0)\n                                /// @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                                revert(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                            }\n                            /// @src 2:9888:9978  \"if (spender == address(0)) {...\"\n                            if /** @src 2:9892:9913  \"spender == address(0)\" */ iszero(/** @src 5:735:745  \"msg.sender\" */ caller())\n                            /// @src 2:9888:9978  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                                mstore(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                                mstore(4, 0)\n                                /// @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                                revert(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                            }\n                            mstore(0, _5)\n                            mstore(32, 1)\n                            let dataSlot_4 := keccak256(0, 64)\n                            /// @src 2:9987:10014  \"_allowances[owner][spender]\"\n                            let dataSlot_5 := /** @src -1:-1:-1 */ 0\n                            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(/** @src 5:735:745  \"msg.sender\" */ caller(), /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 2:9987:10005  \"_allowances[owner]\" */ dataSlot_4)\n                            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            dataSlot_5 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40)\n                            sstore(/** @src 2:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_5, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(/** @src 2:10809:10833  \"currentAllowance - value\" */ _6, value_1))\n                        }\n                        /// @src 2:4967:4972  \"value\"\n                        fun_transfer(value0_1, value1, value_1)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, /** @src 2:2761:2763  \"18\" */ 0x12)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_3834()\n                        let value_2 := calldataload(36)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let _7 := and(/** @src 2:7509:7530  \"account == address(0)\" */ value0_2, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:7509:7530  \"account == address(0)\"\n                        let _8 := iszero(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _7)\n                        /// @src 2:7505:7596  \"if (account == address(0)) {...\"\n                        if /** @src 2:7509:7530  \"account == address(0)\" */ _8\n                        /// @src 2:7505:7596  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 2:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            mstore(4, 0)\n                            /// @src 2:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                        }\n                        let _9 := sload(/** @src 2:6214:6235  \"_totalSupply += value\" */ 0x02)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let sum := add(_9, value_2)\n                        if gt(_9, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 2:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sum)\n                        /// @src 2:6624:7049  \"if (to == address(0)) {...\"\n                        _8 := /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0\n                        mstore(0, _7)\n                        mstore(0x20, 0)\n                        let dataSlot_6 := keccak256(0, 64)\n                        sstore(dataSlot_6, add(sload(/** @src 2:7002:7024  \"_balances[to] += value\" */ dataSlot_6), /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ value_2))\n                        /// @src 2:7064:7089  \"Transfer(from, to, value)\"\n                        let _10 := /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ mload(64)\n                        mstore(_10, value_2)\n                        /// @src 2:7064:7089  \"Transfer(from, to, value)\"\n                        log3(_10, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32, /** @src 2:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:7064:7089  \"Transfer(from, to, value)\" */ _7)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        return(0, 0)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_3834(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _11 := sload(keccak256(0, 64))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _11)\n                        return(memPos_4, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let _12 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x05)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ 0x05, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(_12, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(_12, sub(shl(160, 1), 1)), 0)\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_3 := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x05), /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, value_3)\n                        return(memPos_5, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let ret_1 := 0\n                        let slotValue_1 := sload(4)\n                        let length_1 := 0\n                        length_1 := shr(1, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr, 32), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, 4)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := 0\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 32) }\n                            {\n                                mstore(add(add(memPtr, i_1), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, 1)\n                            }\n                            ret_1 := add(add(memPtr, i_1), 32)\n                        }\n                        let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_3834()\n                        /// @src 2:3440:3445  \"value\"\n                        fun_transfer(/** @src 5:735:745  \"msg.sender\" */ caller(), /** @src 2:3440:3445  \"value\" */ value0_3, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ calldataload(36))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_4 := abi_decode_address_3834()\n                        let value1_1 := abi_decode_address()\n                        mstore(0, and(value0_4, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 2:3638:3649  \"_allowances\" */ 0x01)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 2:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(value1_1, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 2:3638:3656  \"_allowances[owner]\" */ dataSlot_7)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40)\n                        let _13 := sload(/** @src 2:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_8)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _13)\n                        return(memPos_7, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_5 := abi_decode_address_3834()\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let _14 := and(/** @src 0:2627:2649  \"newOwner == address(0)\" */ value0_5, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _14)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                            /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            mstore(4, 0)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                        }\n                        let _15 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x05)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ 0x05, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ or(and(_15, shl(160, 0xffffffffffffffffffffffff)), _14))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(_15, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _14)\n                        /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address_3834() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 529 @src 2:5374:5674  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let _1 := and(/** @src 2:5457:5475  \"from == address(0)\" */ var_from, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                /// @src 2:5457:5475  \"from == address(0)\"\n                let _2 := iszero(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _1)\n                /// @src 2:5453:5539  \"if (from == address(0)) {...\"\n                if /** @src 2:5457:5475  \"from == address(0)\" */ _2\n                /// @src 2:5453:5539  \"if (from == address(0)) {...\"\n                {\n                    /// @src 2:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 2:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                    mstore(/** @src 2:5498:5528  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 2:5473:5474  \"0\" */ 0x00)\n                    /// @src 2:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 36)\n                }\n                let _3 := and(/** @src 2:5552:5568  \"to == address(0)\" */ var_to, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                /// @src 2:5552:5568  \"to == address(0)\"\n                let _4 := iszero(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _3)\n                /// @src 2:5548:5634  \"if (to == address(0)) {...\"\n                if /** @src 2:5552:5568  \"to == address(0)\" */ _4\n                /// @src 2:5548:5634  \"if (to == address(0)) {...\"\n                {\n                    /// @src 2:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 2:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                    mstore(/** @src 2:5591:5623  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 2:5473:5474  \"0\" */ 0x00)\n                    /// @src 2:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    revert(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 36)\n                }\n                /// @src 2:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 2:5473:5474  \"0\" */ 0x00\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _1)\n                mstore(0x20, /** @src 2:5473:5474  \"0\" */ 0x00)\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let _5 := sload(keccak256(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40))\n                /// @src 2:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 2:6321:6340  \"fromBalance < value\" */ lt(_5, var_value)\n                /// @src 2:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 2:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 2:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                    mstore(/** @src 2:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _1)\n                    mstore(36, _5)\n                    mstore(68, var_value)\n                    /// @src 2:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 100)\n                }\n                mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _1)\n                mstore(0x20, /** @src 2:5473:5474  \"0\" */ 0x00)\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                sstore(keccak256(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40), sub(/** @src 2:6570:6589  \"fromBalance - value\" */ _5, var_value))\n                /// @src 2:6624:7049  \"if (to == address(0)) {...\"\n                _4 := /** @src 2:5473:5474  \"0\" */ 0x00\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _3)\n                mstore(0x20, /** @src 2:5473:5474  \"0\" */ 0x00)\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let dataSlot := keccak256(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 2:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ var_value))\n                /// @src 2:7064:7089  \"Transfer(from, to, value)\"\n                let _6 := /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ mload(64)\n                mstore(_6, var_value)\n                /// @src 2:7064:7089  \"Transfer(from, to, value)\"\n                log3(_6, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32, /** @src 2:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let value := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x05), /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ value, /** @src 5:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                    /// @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 5:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:520  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201ba7f1452d9e569f6095682bfc61115f5925a5e596a209b6e02f3b8c636e024564736f6c634300081a0033\"\n    }\n}\n",
          "hash": "47ee5f82a28b11d3848a5993309b44345abb336b3755c66645be971a3e28c955",
          "factoryDependencies": {}
        }
      }
    }
  }
}